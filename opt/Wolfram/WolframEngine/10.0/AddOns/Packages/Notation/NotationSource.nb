(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    444408,      13208]
NotebookOptionsPosition[    369704,      11113]
NotebookOutlinePosition[    392690,      11618]
CellTagsIndexPosition[    392647,      11615]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Notation.m : A Package for Defining New Notations", "Title",
 CellChangeTimes->{{3.452602000957326*^9, 3.452602012272265*^9}}],

Cell[TextData[StyleBox["Jason Harris, \[Copyright]1996-2008",
 FontWeight->"Plain",
 FontColor->RGBColor[0.449989, 0, 0.0600595]]], "Text",
 PageWidth->WindowWidth,
 FontFamily->"Helvetica",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->GrayLevel[0]],

Cell["Notation Source Code", "Text",
 PageWidth->WindowWidth,
 ShowClosedCellArea->True,
 CellMargins->{{12, Inherited}, {20, 40}},
 PageBreakAbove->True,
 PageBreakBelow->False,
 CellFrameLabels->{{Inherited, None}, {None, None}},
 FontFamily->"Helvetica",
 FontSize->30,
 FontWeight->"Bold",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Package Beginnings", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Package Begin", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", " ", "[", " ", "\"\<Notation`\>\"", " ", "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", " ", "@", " ", "\"\<Notation`*\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", " ", "@@", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Names", " ", "@", " ", "\"\<Notation`*\>\""}], ",", 
     RowBox[{"{", "\"\<AutoLoadNotationPalette\>\"", "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", " ", "@", " ", "\"\<Notation`Private`*\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Force the symbol '",
 StyleBox["Notation", "MR"],
 "' to be in the context Notation",
 StyleBox["`", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{"Notation`Notation", ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Post Begin", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", " ", "@", " ", "\"\<`Private`\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["friendlyOff", "MR"],
 " and ",
 StyleBox["friendlyOn", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["friendlyOff", "MR"],
 " will turn off a message. ",
 StyleBox["friendlyOn", "MR"],
 " will turn that message on only if it was on before the ",
 StyleBox["friendlyOff", "MR"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "friendlyOff", ",", " ", "friendlyOn", ",", " ", "messageStatus"}], 
     "}"}], ",", "HoldAll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"messageStatus", " ", "@", " ", 
    RowBox[{"MessageName", "[", 
     RowBox[{"func_", ",", "mesg_String"}], "]"}]}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", " ", "[", " ", 
       RowBox[{
        RowBox[{"MessageName", "[", 
         RowBox[{"func", ",", "mesg"}], "]"}], " ", "/.", 
        RowBox[{"Messages", " ", "@", " ", "func"}]}], "]"}], " ", "=!=", " ",
       "$Off"}], ",", "$On", ",", "$Off", ",", "$Off"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"friendlyOff", " ", "@", " ", "mesg_MessageName"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mesgWasOn", " ", "@", " ", 
       RowBox[{"Hold", " ", "@", " ", "mesg"}]}], " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"messageStatus", " ", "@", " ", "mesg"}], " ", "=!=", " ", 
        "$Off"}], ")"}]}], ";", 
     RowBox[{"Off", " ", "@", " ", "mesg"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"friendlyOn", " ", "@", " ", "mesg_MessageName"}], " ", ":=", " ", 
   
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"mesgWasOn", " ", "@", " ", 
      RowBox[{"Hold", " ", "@", " ", "mesg"}]}], ",", " ", 
     RowBox[{
      RowBox[{"On", " ", "@", " ", "mesg"}], ";", 
      RowBox[{
       RowBox[{"mesgWasOn", " ", "@", " ", 
        RowBox[{"Hold", " ", "@", " ", "mesg"}]}], " ", "=", " ", "False"}], 
      ";"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["silentEvaluate", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["silentEvaluate", "MR"],
 " will evaluate an expression, but report NO error messages, i.e. it will \
silently evaluate an expression giving a result."
}], "Text",
 CellChangeTimes->{3.452602097832572*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"silentEvaluate", ",", "HoldAll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"silentEvaluate", " ", "@", " ", "expr_"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "Message", "}"}], ",", 
     RowBox[{
      RowBox[{"SetAttributes", "[", 
       RowBox[{"Message", ",", "HoldFirst"}], "]"}], ";", "expr"}]}], "]"}]}],
   ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Remove the Notation symbol from the system context.", \
"Text"]], "NumberedSubsubsubtitle"],

Cell[TextData[StyleBox["WRI still has not got around to removing the Notation \
symbol from the system context. It is not being used for anything. Remove it \
from the system.", "Text"]], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"silentEvaluate", " ", "@", " ", 
   RowBox[{"Unprotect", " ", "@", " ", "\"\<System`Notation\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"silentEvaluate", " ", "@", " ", 
   RowBox[{"Remove", " ", "@", " ", "\"\<System`Notation\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Handle overloaded symbols", "Text"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[StyleBox["If any of the vital symbols used by Notation are \
being used in the global context then warn the user and remove them from the \
global context.", "Text"]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"notationsPublicFunctions", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\"\<Global`\>\"", " ", "<>", " ", "#"}], "&"}], ")"}], " ", "/@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<Action\>\"", ",", "\"\<ClearNotations\>\"", ",", 
      "\"\<CreateNotationRules\>\"", ",", "\"\<InfixNotation\>\"", ",", 
      "\"\<ParsedBoxWrapper\>\"", ",", "\"\<NotationPatternTag\>\"", ",", 
      "\"\<NotationBoxTag\>\"", ",", "\"\<PrintNotationRules\>\"", ",", 
      "\"\<RemoveInfixNotation\>\"", ",", "\"\<RemoveNotation\>\"", ",", 
      "\"\<RemoveNotationRules\>\"", ",", "\"\<RemoveSymbolize\>\"", ",", 
      "\"\<Notation\>\"", ",", "\"\<Symbolize\>\"", ",", 
      "\"\<SymbolizeRootName\>\"", ",", "\"\<WorkingForm\>\""}], "}"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "gshadw"}], " ", "=", " ", 
   "\"\<The symbol '`1`' has been used in the global context. The Notation \
package needs the full use of the symbol '`1`' and has therefore removed this \
symbol from the global context.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"overideNames", "=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Names", " ", "@", " ", "\"\<Global`*\>\""}], " ", ",", 
       "notationsPublicFunctions"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"overideNames", "=!=", 
      RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "gshadw"}], ",", "#"}], "]"}], ")"}], 
        "&"}], " ", "/@", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"#", ",", "7"}], "]"}], "&"}], ")"}], "/@", " ", 
        "overideNames"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Unprotect", " ", "/@", " ", "overideNames"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ClearAll", " ", "/@", " ", "overideNames"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Remove", " ", "/@", " ", "overideNames"}], ";"}]}], "]"}]}], 
  "]"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["End \"`Private`\"", "MR"]], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Usage Statements", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"Symbolize", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Symbolize", "::", "usage"}], " ", "=", 
     "\"\<Symbolize[boxes] forces any box structure matching boxes to be \
treated internally as a single symbol anywhere it appears in an input \
expression.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"RemoveSymbolize", "::", "usage"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveSymbolize", "::", "usage"}], " ", "=", 
     "\[IndentingNewLine]", 
     "\"\<RemoveSymbolize[boxes] removes the symbolization of boxes.\>\""}]}],
    "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"SymbolizeRootName", "::", "usage"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SymbolizeRootName", "::", "usage"}], " ", "=", 
     "\"\<SymbolizeRootName is an option for Symbolize specifying the name to \
be used internally for the symbolized boxes.\>\""}]}], "]"}], ";"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"InfixNotation", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"InfixNotation", "::", "usage"}], " ", "=", 
     "\"\<InfixNotation[infixOp, prefixHead] forces the box structure infixOp \
to be treated as an infix operator representing the function prefixHead in \
input and output.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"RemoveInfixNotation", "::", "usage"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveInfixNotation", "::", "usage"}], " ", "=", 
     "\"\<RemoveInfixNotation[infixOp, prefixHead] removes the infix operator \
infixOp\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"Notation", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Notation", "::", "usage"}], " ", "=", 
     "\"\<Notation[ExternalBoxes \[DoubleLongLeftRightArrow] InternalExpr] \
parses any input box structure ExternalBoxes internally as InternalExpr, and \
formats any expression matching InternalExpr as ExternalBoxes in output. To \
restrict Notation to only parsing, use Notation[ExternalBoxes \
\[DoubleLongRightArrow] InternalExpr], and to restrict Notation to only \
formatting, use Notation[ExternalBoxes \[DoubleLongLeftArrow] \
InternalExpr].\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"RemoveNotation", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"RemoveNotation", "::", "usage"}], " ", "=", 
     "\"\<RemoveNotation[ExternalBoxes \[DoubleLongLeftRightArrow] \
InternalExpr] removes the notation ExternalForm \[DoubleLongLeftRightArrow] \
InternalForm. To remove only the parsing, use RemoveNotation[ExternalBoxes \
\[DoubleLongRightArrow] InternalExpr], and to remove only the formatting, use \
RemoveNotation[ExternalBoxes \[DoubleLongLeftArrow] InternalExpr].\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"ParsedBoxWrapper", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"ParsedBoxWrapper", "::", "usage"}], " ", "=", 
     "\"\<ParsedBoxWrapper is a wrapper that wraps parsed boxes which come \
from the TemplateBoxes that are embedded in Notation, Symbolize and \
InfixNotation statements.  These embedded TemplateBoxes ensure correct \
parsing and retention of proper styling and grouping information.\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"ClearNotations", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"ClearNotations", "::", "usage"}], " ", "=", 
     "\"\<ClearNotations[] will remove all \\\"notations\\\" , \
\\\"symbolizations\\\" and \\\"infix notations\\\". It does not destroy any \
rules for MakeExpression and MakeBoxes. This function will reset the notation \
handling to a pristine state.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"WorkingForm", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"WorkingForm", "::", "usage"}], " ", "=", 
     "\"\<WorkingForm is an option of Notation, Symbolize and InfixNotation, \
which specifies which form the notation will be defined in. Possible forms \
include StandardForm, TraditionalForm, user defined forms, and Automatic \
which defaults to the default output format type.\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"Action", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Action", "::", "usage"}], " ", "=", 
     "\"\<Action is an option of Notation, Symbolize and InfixNotation. It \
defines what action will be performed with the given notation statement. The \
possible values are CreateNotationRules, PrintNotationRules and \
RemoveNotationRules\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"CreateNotationRules", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"CreateNotationRules", "::", "usage"}], " ", "=", 
     "\"\<CreateNotationRules is a possible value for the option Action which \
is used in Notation, Symbolize and InfixNotation. If the option Action is set \
to CreateNotationRules, then a notation statement will enter the given \
notation into the system.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"RemoveNotationRules", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"RemoveNotationRules", "::", "usage"}], " ", "=", 
     "\"\<RemoveNotationRules is a possible value for the option Action which \
is used in Notation, Symbolize and InfixNotation. If the option Action is set \
to RemoveNotationRules, then a notation statement will remove the given \
notation from the system.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"PrintNotationRules", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"PrintNotationRules", "::", "usage"}], " ", "=", 
     "\"\<PrintNotationRules is a possible value for the option Action which \
is used in Notation, Symbolize and InfixNotation. If the option Action is set \
to PrintNotationRules, then a notation statement will print out a cell \
containing the rules defining the given notation.\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"AutoLoadNotationPalette", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"AutoLoadNotationPalette", "::", "usage"}], " ", "=", 
     "\"\<AutoLoadNotationPalette is a boolean variable. If False then the \
Notation palette will not be loaded when the Notation package is loaded. If \
the value is undefined or True the Notation palette will be loaded when the \
Notation package loads. Other package designers can set this variable outside \
of the Notation package through a statement similar to \
Notation`AutoLoadNotationPalette = False.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"NotationMakeExpression", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"NotationMakeExpression", "::", "usage"}], " ", "=", 
     "\"\<NotationMakeExpression is a private version of MakeExpression. The \
Notation package uses NotationMakeExpression in an attempt to minimally \
interfere with other functions that use MakeExpression.\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"NotationMakeBoxes", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"NotationMakeBoxes", "::", "usage"}], " ", "=", 
     "\"\<NotationMakeBoxes is a private version of MakeBoxes. The Notation \
package uses NotationMakeBoxes in an attempt to minimally interfere with \
other functions that use MakeBoxes.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"NotationBoxTag", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"NotationBoxTag", "::", "usage"}], " ", "=", 
     "\"\<This is provided for compatibility with previous versions of saved \
notation files. It has been superseded by the use of the string tag \
NotationTemplateTag and by ParsedBoxWrapper.\>\""}]}], "]"}], ";"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"NotationPatternTag", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"NotationPatternTag", "::", "usage"}], " ", "=", 
     "\"\<This is provided for compatibility with previous versions of saved \
notation files. It has been superseded by the use of the string tag \
NotationPatternTag.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"NotationMadeBoxesTag", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"NotationMadeBoxesTag", "::", "usage"}], " ", "=", 
     "\"\<This is provided for compatibility with previous versions of saved \
notation files. It has been superseded by the use of the string tag \
NotationMadeBoxesTag and by ParsedBoxWrapper\>\""}]}], "]"}], ";"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"AddInputAlias", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"AddInputAlias", "::", "usage"}], " ", "=", 
     "\"\<AddInputAlias[\\\"shortForm\\\"->fullBoxes] adds the alias \
\[EscapeKey]shortForm\[EscapeKey] for fullBoxes to the aliases in the curret \
notebook. AddInputAlias[{\\\"sh1\\\"->boxes1, \\\"sh2\\\"->boxes2, \
...},notebook] adds the aliases sh1, sh2,... to the notebook \
notebook.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"ValueQ", "[", 
      RowBox[{"ActiveInputAliases", "::", "usage"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"ActiveInputAliases", "::", "usage"}], " ", "=", 
     "\"\<ActiveInputAliases[] returns a list of all active aliases in the \
current notebook. ActiveInputAliases[notebook] returns a list of all active \
aliases in the notebook notebook.\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell["Error Message Declarations", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["Options for Notation, Symbolize and InfixNotation", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Define the options for ",
 StyleBox["Notation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Options", " ", "@", " ", "Notation"}], " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WorkingForm", " ", "\[Rule]", " ", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Action", " ", "\[Rule]", " ", "CreateNotationRules"}]}], 
     "}"}]}], ";"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define the options for ",
 StyleBox["Symbolize", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", " ", "@", " ", "Symbolize"}], " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WorkingForm", " ", "\[Rule]", " ", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Action", " ", "\[Rule]", " ", "CreateNotationRules"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SymbolizeRootName", " ", "\[Rule]", " ", "\"\<\>\""}]}], 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define the options for ",
 StyleBox["InfixNotation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", " ", "@", " ", "InfixNotation"}], " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WorkingForm", " ", "\[Rule]", " ", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Action", " ", "\[Rule]", " ", "CreateNotationRules"}]}], 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Begin Private", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", " ", "@", " ", "\"\<`Private`\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["adjustedOptions", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["adjustedOptions", "MR"],
 " returns the normal options for a function but substitutes on the fly ",
 StyleBox["WorkingForm", "MR"],
 " \[Rule] ",
 StyleBox["Automatic", "MR"],
 " for WorkingForm \[Rule] ",
 StyleBox["Default Output FormatType", "MR",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.452602307859509*^9, 3.452602309104782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"adjustedOptions", "[", "form_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Options", "[", "form", "]"}], "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
       RowBox[{"WorkingForm", ",", "Automatic"}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{"WorkingForm", "\[Rule]", 
       RowBox[{"processWorkingForm", "@", 
        RowBox[{"AbsoluteCurrentValue", "[", 
         RowBox[{
          RowBox[{"InputNotebook", "[", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CommonDefaultFormatTypes", ",", "\"\<Output\>\""}], 
           "}"}]}], "]"}]}]}], ")"}]}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"processWorkingForm", " ", "@", " ", "InputForm"}], " ", ":=", " ", 
  "StandardForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"processWorkingForm", " ", "@", " ", "OutputForm"}], " ", ":=", " ",
   "StandardForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"processWorkingForm", " ", "@", " ", "form_"}], " ", ":=", " ", 
  "form"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Error Handling", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["General error routines", "NumberedSubsubtitle"],

Cell[TextData[{
 "Here are some basic functions which the error handling routines use. \n",
 StyleBox["heldLength", "MR"],
 " just gives the length of an expression without evaluating anything.\n",
 StyleBox["isNot", "MR"],
 " will return ",
 StyleBox["True", "MR"],
 " for anything that does not match the pattern.\n",
 StyleBox["headIsNot", "MR"],
 " will return ",
 StyleBox["True", "MR"],
 " for anything whose head does not match the pattern."
}], "Text",
 CellChangeTimes->{3.4526023188322163`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"heldLength", ",", "headIsNot", ",", "isNot"}], "}"}], ",", 
    "HoldAll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"heldLength", " ", "@", " ", "expr_"}], " ", ":=", " ", 
   RowBox[{"Length", " ", "@", " ", 
    RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isNot", " ", "@", " ", "pattern_"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"expr", ",", " ", 
     RowBox[{"\[Not]", 
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}], ",", "pattern"}], 
       "]"}]}], ",", " ", "HoldAll"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"headIsNot", " ", "@", " ", "pattern_"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"testHead", ",", 
     RowBox[{"\[Not]", 
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"Head", " ", "@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", "testHead"}]}], ",", 
        "pattern"}], "]"}]}], ",", " ", "HoldAll"}], "]"}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"General", "::", "badarg"}], " ", "=", 
   "\"\<`1` expected at position `2` in `3`\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"characterQ", " ", "@", " ", "a_String"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"StringLength", " ", "@", " ", "a"}], " ", "==", " ", "1"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"characterQ", " ", "@", " ", "other___"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frames shaded by depth", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["structuralBoxes", "MR"]], "NumberedSubsubsubtitle"],

Cell["\<\
structuralBoxes matches boxes which are structural in nature and affect the \
parsing of expressions.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"structuralBoxes", " ", "=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
    "FractionBox", " ", "|", "\[IndentingNewLine]", "GridBox", " ", "|", 
     "\[IndentingNewLine]", "InterpretationBox", " ", "|", 
     "\[IndentingNewLine]", "RadicalBox", " ", "|", "\[IndentingNewLine]", 
     "RowBox", " ", "|", "\[IndentingNewLine]", "SqrtBox", " ", "|", 
     "\[IndentingNewLine]", "SubscriptBox", " ", "|", "\[IndentingNewLine]", 
     "SuperscriptBox", " ", "|", "\[IndentingNewLine]", "SubsuperscriptBox", 
     " ", "|", "\[IndentingNewLine]", "TagBox", " ", "|", 
     "\[IndentingNewLine]", "TemplateBox", " ", "|", "\[IndentingNewLine]", 
     "UnderscriptBox", " ", "|", "\[IndentingNewLine]", "OverscriptBox", " ", 
     "|", "\[IndentingNewLine]", "UnderoverscriptBox"}], ")"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["colorizeStructuralBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["colorizeStructuralBoxes", "MR"],
 " will shade the background of a box structure according to its structure. \
In this way the user can visually observe the structure of an expression."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorizeStructuralBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", ":", " ", "structuralBoxes"}], ")"}], "[", "args__", 
      "]"}], ",", "depth_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StyleBox", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Background", "\[Rule]", 
          RowBox[{"Hue", "[", 
           RowBox[{"0", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "0.1579"}], " ", "depth"}]]}], ",", "1"}], 
           "]"}]}], ",", " ", 
         RowBox[{"FontColor", "\[Rule]", 
          RowBox[{"Hue", "[", 
           RowBox[{"0", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "0.1579"}], " ", "depth"}]]}], ",", "1"}], 
           "]"}]}]}], "]"}], "&"}], " ", "@", "\[IndentingNewLine]", 
      RowBox[{"FrameBox", " ", "@", " ", 
       RowBox[{"StyleBox", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"FontColor", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}]}], "&"}], 
    " ", "@", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{"a", " ", "@@", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"colorizeStructuralBoxes", "[", 
          RowBox[{"#", ",", 
           RowBox[{"depth", "+", "1"}]}], "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"{", "args", "}"}]}], ")"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colorizeStructuralBoxes", "[", 
    RowBox[{
     RowBox[{"a_", "[", "args__", "]"}], ",", "depth_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"a", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"colorizeStructuralBoxes", "[", 
        RowBox[{"#", ",", "depth"}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"{", "args", "}"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colorizeStructuralBoxes", "[", 
   RowBox[{"a_", ",", " ", "depth_"}], "]"}], " ", ":=", " ", "a"}]}], "Input",\

 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["parsableQ", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["parsableQ", "MR"],
 " will determine whether a given box structure or string is parsable under \
the given working form. If it is not, it will report the error message given \
by the first non-parsable object and return ",
 StyleBox["False", "MR"],
 ". ",
 StyleBox["silentParsableQ", "MR"],
 " performs exactly the same function, but will not report ANY error messages."
}], "Text",
 CellChangeTimes->{{3.452602372723613*^9, 3.45260237399314*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parsableQ", " ", "@", " ", "\"\<,\>\""}], " ", "=", " ", "True"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsableQ", " ", "@", " ", "boxexpr_"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"boxexpr", ",", " ", 
       RowBox[{"WorkingForm", "/.", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}], ",", " ", 
       "HoldComplete"}], "]"}]}], " ", "===", " ", "HoldComplete"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsableQ", " ", "[", " ", 
    RowBox[{"boxexpr_", ",", " ", "opts___"}], "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"boxexpr", ",", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}], ",", " ", 
       "HoldComplete"}], "]"}]}], " ", "===", " ", "HoldComplete"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"notParsableQ", " ", "@", " ", "boxexpr___"}], " ", ":=", 
   RowBox[{"\[Not]", " ", 
    RowBox[{"parsableQ", " ", "@", " ", "boxexpr"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"silentNotParsableQ", " ", "@", " ", "boxexpr___"}], " ", ":=", 
   RowBox[{"\[Not]", 
    RowBox[{"silentEvaluate", " ", "@", " ", 
     RowBox[{"parsableQ", " ", "@", " ", "boxexpr"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"silentParsableQ", " ", "@", " ", "boxexpr___"}], " ", ":=", " ", 
   RowBox[{"silentEvaluate", " ", "@", " ", 
    RowBox[{"parsableQ", " ", "@", " ", "boxexpr"}]}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["SilentCheck", "NumberedSubsubtitle",
 CellChangeTimes->{3.45260239885155*^9}],

Cell[TextData[{
 "Silently checking a message to see if it fails is not trivial. This should \
be built into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". The following code, which circumvents this oversight, was originally \
written by Todd Gayley and modified by Robby Villegas."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Attributes", " ", "@", " ", "SilentCheck"}], " ", "=", " ", 
    "HoldAll"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"SilentCheck", "[", 
   RowBox[{"expr_", ",", " ", "failexpr_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "returnValue", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Unprotect", " ", "@", " ", "Message"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"mesg", ":", 
        RowBox[{"Message", "[", "___", "]"}]}], "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$Messages", " ", "=", " ", 
           RowBox[{"{", "}"}]}], " ", "}"}], ",", " ", "mesg"}], "]"}], " ", "/;",
        " ", 
       RowBox[{"$Messages", " ", "=!=", " ", 
        RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"returnValue", " ", "=", " ", 
      RowBox[{"Check", "[", 
       RowBox[{"expr", ",", " ", "failexpr"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"mesg", ":", 
        RowBox[{"Message", "[", "___", "]"}]}], "]"}], " ", "=."}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Protect", " ", "@", " ", "Message"}], ";", 
     "\[IndentingNewLine]", "returnValue"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form Handling", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Define notation's versions of MakeExpression and MakeBoxes", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["NotationMakeExpression", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 "We create ",
 StyleBox["NotationMakeExpression", "MR"],
 " so the Notation package minimally interferes with ",
 StyleBox["MakeExpression", "MR"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeExpression", "[", 
    RowBox[{"boxes_", ",", "form_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"expr", "=", 
       RowBox[{"NotationMakeExpression", "[", 
        RowBox[{"boxes", ",", "form"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"expr", "/;", 
      RowBox[{
       RowBox[{"Head", " ", "@", " ", "expr"}], " ", "===", " ", 
       "HoldComplete"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["NotationMakeBoxes", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "We create ",
 StyleBox["NotationMakeBoxes", "MR"],
 " so the Notation package minimally interferes with ",
 StyleBox["MakeBoxes", "MR"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"NotationMakeBoxes", ",", "HoldAllComplete"}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeBoxes", "[", 
    RowBox[{"expr_", ",", "form_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"boxes", "=", 
       RowBox[{"NotationMakeBoxes", "[", 
        RowBox[{"expr", ",", "form"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"boxes", "/;", 
      RowBox[{
       RowBox[{"Head", " ", "@", " ", "boxes"}], " ", "=!=", " ", 
       "NotationMakeBoxes"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ParsedBoxWrapper", "NumberedSubsubtitle"],

Cell[TextData[{
 "These define how ",
 StyleBox["ParsedBoxWrapper", "MR"],
 " is handled both in input and output. Basically it is just the parsed form \
of a ",
 StyleBox["TemplateBox", "MR"],
 " wrapper with tag ",
 StyleBox["NotationTemplateTag", "MR"],
 ". It is used to allow ",
 StyleBox["Notation", "MR"],
 " and ",
 StyleBox["Symbolize", "MR"],
 " to grab style information etc."
}], "Text",
 CellChangeTimes->{{3.452602432761785*^9, 3.452602449880825*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wasProteced", "=", 
   RowBox[{"Unprotect", " ", "@", " ", "TemplateBox"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TemplateBox", "/:", 
   RowBox[{"MakeExpression", "[", 
    RowBox[{
     RowBox[{"TemplateBox", "[", 
      RowBox[{
       RowBox[{"{", "boxes_", "}"}], ",", "\"\<NotationTemplateTag\>\"", ",", 
       "opts___"}], "]"}], ",", "anyForm_"}], "]"}], ":=", 
   RowBox[{"HoldComplete", " ", "@", " ", 
    RowBox[{"ParsedBoxWrapper", " ", "@", " ", "boxes"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", " ", "@", " ", 
   RowBox[{"Evaluate", " ", "@", " ", "wasProteced"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NotationMakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", "ParsedBoxWrapper", "]"}], " ", "@", " ", 
      "boxes__"}], ",", " ", "anyForm_"}], "]"}], ":=", 
   RowBox[{"TemplateBox", "[", 
    RowBox[{
     RowBox[{"{", "boxes", "}"}], ",", "\"\<NotationTemplateTag\>\""}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"ParsedBoxWrapper", ",", "HoldAll"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Compatibility with old Notation versions", "NumberedSubsubsubtitle"],

Cell[TextData[{
 "For compatibility with all old Notations, recognize the tag ",
 StyleBox["NotationBoxTag", "MR"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4526024711290607`*^9, 3.4526025038033543`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NotationMakeExpression", "[", 
    RowBox[{
     RowBox[{"TagBox", "[", 
      RowBox[{"boxes_", ",", " ", "NotationBoxTag", ",", "opts___"}], "]"}], 
     ",", " ", "anyForm_"}], "]"}], " ", ":=", " ", 
   RowBox[{"HoldComplete", " ", "@", " ", 
    RowBox[{"ParsedBoxWrapper", " ", "@", " ", "boxes"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NotationMakeExpression", "[", 
    RowBox[{
     RowBox[{"TagBox", "[", 
      RowBox[{
      "boxes_", ",", " ", "\"\<NotationTemplateTag\>\"", ",", "opts___"}], 
      "]"}], ",", " ", "anyForm_"}], "]"}], " ", ":=", " ", 
   RowBox[{"HoldComplete", " ", "@", " ", 
    RowBox[{"ParsedBoxWrapper", " ", "@", " ", "boxes"}]}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NotationBoxTag", "[", "args__", "]"}], ":=", 
   RowBox[{"ParsedBoxWrapper", " ", "@", " ", "args"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"NotationBoxTag", ",", "HoldAll"}], "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["stripParsedBoxWrapper", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["stripParsedBoxWrapper", "MR"],
 " will remove any ",
 StyleBox["ParsedBoxWrapper", "MR"],
 " found in the box expression. ",
 StyleBox["ParsedBoxWrapper", "MR"],
 " is used to allow ",
 StyleBox["Notation", "MR"],
 " to grab boxes before the style information and other things are stripped \
out."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "any_"}], " ", ":=", " ", 
  RowBox[{"any", " ", "//.", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldPattern", "[", "ParsedBoxWrapper", "]"}], " ", "@", " ", 
     "stringPatternBoxes_"}], " ", "\[RuleDelayed]", " ", 
    "stringPatternBoxes"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["identityForm for output", "NumberedSubsubtitle"],

Cell[TextData[{
 "Boxes wrapped with this wrapper will appear as ",
 StyleBox["DisplayForm", "MR"],
 " would show them, i.e. ",
 StyleBox["identityForm[SuperscriptBox[\"x\",\"2\"]]", "MR"],
 " would appear as ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["x", "2"], "MR"]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"identityForm", "/:", " ", 
  RowBox[{"NotationMakeBoxes", "[", 
   RowBox[{
    RowBox[{"identityForm", " ", "@", " ", "any___"}], ",", " ", "form_"}], 
   "]"}], ":=", " ", "any"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"identityForm", ",", "HoldAll"}], "]"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["TransformLegacySyntax", "NumberedSubsubtitle"],

Cell[TextData[{
 "For compatibility with all old notations transform the old ",
 StyleBox["TagBoxes", "MR"],
 " into the new ",
 StyleBox["TemplateBoxes", "MR"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TransformLegacySyntax", "[", "contents__", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", "contents", "}"}], "//.", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{
         "stringPatternBoxes_", ",", "NotationPatternTag", ",", "opts___"}], 
         "]"}], "\[RuleDelayed]", 
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes", "}"}], ",", 
          "\"\<NotationPatternTag\>\"", ",", "opts"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{
         "stringPatternBoxes_", ",", "\"\<NotationPatternTag\>\"", ",", 
          "opts___"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes", "}"}], ",", 
          "\"\<NotationPatternTag\>\"", ",", "opts"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{
         "stringPatternBoxes_", ",", "\"\<NotationTemplateTag\>\"", ",", 
          "opts___"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes", "}"}], ",", 
          "\"\<NotationTemplateTag\>\"", ",", "opts"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{
         "stringPatternBoxes_", ",", "NotationMadeBoxesTag", ",", "opts___"}],
          "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes", "}"}], ",", 
          "\"\<NotationMadeBoxesTag\>\"", ",", "opts"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{
         "stringPatternBoxes_", ",", "\"\<NotationMadeBoxesTag\>\"", ",", 
          "opts___"}], "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes", "}"}], ",", 
          "\"\<NotationMadeBoxesTag\>\"", ",", "opts"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], ")"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Character Utility Functions", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["whiteSpaceQ", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["whiteSpaceQ", "MR"],
 " tests to see if the given string can be considered white space."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"whiteSpaceQ", " ", "@", " ", "string_String"}], " ", ":=", "\n", 
  "\t ", 
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Characters", " ", "@", " ", "string"}], ",", "\n", "\t ", 
     RowBox[{"(", " ", 
      RowBox[{
      "\"\<\\t\>\"", " ", "|", " ", "\"\<\\n\>\"", " ", "|", " ", "\"\< \>\"",
        " ", "|", " ", "\"\<\[InvisibleSpace]\>\"", " ", "|", " ", 
       "\"\<\[VeryThinSpace]\>\"", " ", "|", " ", "\"\<\[ThinSpace]\>\"", " ",
        "|", " ", "\"\<\[MediumSpace]\>\"", " ", "|", " ", 
       "\"\<\[ThickSpace]\>\"", " ", "|", " ", 
       "\"\<\[NegativeVeryThinSpace]\>\"", " ", "|", " ", 
       "\"\<\[NegativeThinSpace]\>\"", " ", "|", 
       "\"\<\[IndentingNewLine]\>\"", "|", " ", "\n", "\t\t\t ", 
       "\"\<\[NegativeMediumSpace]\>\"", " ", "|", " ", 
       "\"\<\[NegativeThickSpace]\>\"", " ", "|", " ", "\"\<\\r\>\"", " ", 
       "|", " ", "\"\<\[NoBreak]\>\"", " ", "|", " ", 
       "\"\<\[NonBreakingSpace]\>\"", " ", "|", " ", 
       "\"\<\[Continuation]\>\"", " ", "|", " ", "\"\<\[SpaceIndicator]\>\"", 
       " ", "|", " ", "\"\<\[RoundSpaceIndicator]\>\"", " ", "|", " ", 
       "\"\<\[AlignmentMarker]\>\"", " ", "|", " ", "\"\<\>\"", "|", 
       "\"\<\[LineSeparator]\>\"", "|", "\"\<\[ParagraphSeparator]\>\""}], 
      ")"}]}], "]"}], " ", "===", " ", 
   RowBox[{"{", "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"whiteSpaceQ", " ", "@", " ", "other___"}], " ", ":=", " ", 
  "False"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["notWhiteSpaceQ", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["notWhiteSpaceQ", "MR"],
 " tests to see if the given string is not considered white space."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"notWhiteSpaceQ", " ", "@", " ", "any_"}], " ", ":=", " ", 
  RowBox[{"Not", " ", "@", " ", 
   RowBox[{"whiteSpaceQ", " ", "@", " ", "any"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define ",
 StyleBox["setInternalCharacterInformation", "MR"]
}], "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["internalCharacterInformation", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 "This creates the ",
 StyleBox["internalCharacterInformation", "MR"],
 " function which gives information on the complete list of characters from \
the UnicodeCharacters.tr file. These are needed since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not currently have functions for testing things like ",
 StyleBox["OperatorQ", "MR"],
 ", ",
 StyleBox["PrefixQ", "MR"],
 ", etc."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setInternalCharacterInformation", " ", "@", 
    RowBox[{"{", 
     RowBox[{
     "theCode_", ",", "theCharacter_", ",", "shortforms_", ",", "theFixity_", 
      ",", "thePrecedence_", ",", "theGrouping_", ",", "theRightSpacing_", 
      ",", "theLeftSpacing_", ",", "other___"}], "}"}]}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"internalCharacterInformation", "[", 
      RowBox[{"ToExpression", " ", "[", 
       RowBox[{
       "\"\<\\\"\>\"", " ", "<>", " ", "theCharacter", " ", "<>", " ", 
        "\"\<\\\"\>\""}], "]"}], "]"}], " ", "=", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "theCode", ",", "theFixity", ",", "thePrecedence", ",", "theGrouping", 
       ",", "theRightSpacing", ",", "theLeftSpacing", ",", 
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{"theCharacter", ",", "2"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setInternalCharacterInformation", " ", "@", " ", 
    RowBox[{"{", 
     RowBox[{
     "theCode_", ",", "theCharacter_", ",", "shortforms_", ",", 
      "theFixity_"}], "}"}]}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"internalCharacterInformation", "[", 
      RowBox[{"ToExpression", " ", "[", 
       RowBox[{
       "\"\<\\\"\>\"", " ", "<>", " ", "theCharacter", " ", "<>", " ", 
        "\"\<\\\"\>\""}], "]"}], "]"}], " ", "=", 
     RowBox[{"{", 
      RowBox[{"theCode", ",", "theFixity", ",", 
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{"theCharacter", ",", "2"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
We need to handle the cases when the characters are not actually characters \
at all.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setInternalCharacterInformation", " ", "@", 
    RowBox[{"{", 
     RowBox[{
     "theCode_", ",", "\"\<\\\\[]\>\"", ",", "shortforms_", ",", "theFixity_",
       ",", "thePrecedence_", ",", "theGrouping_", ",", "theRightSpacing_", 
      ",", "theLeftSpacing_", ",", "other___"}], "}"}]}], ":=", 
   "$DoNothing"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setInternalCharacterInformation", " ", "@", " ", 
    RowBox[{"{", 
     RowBox[{
     "theCode_", ",", "\"\<\\\\[]\>\"", ",", "shortforms_", ",", 
      "theFixity_"}], "}"}]}], " ", ":=", "$DoNothing"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["setInternalCharacterInformation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The first argument of ",
 StyleBox["setInternalCharacterInformation", "MR"],
 " must be a list."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"setInternalCharacterInformation", "[", 
     RowBox[{
      RowBox[{"notList_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "List", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"setInternalCharacterInformation", "::", "list"}], ",", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}], ",", "1"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["setInternalCharacterInformation", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"setInternalCharacterInformation", "[", "___", "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"setInternalCharacterInformation", "::", "argx"}], ",", 
        RowBox[{
        "HoldForm", " ", "@", " ", "setInternalCharacterInformation"}], ",", 
        "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load internalCharacterInformation", "NumberedSubsubtitle"],

Cell[TextData[{
 "This creates the ",
 StyleBox["internalCharacterInformation", "MR"],
 " table which gives information on the complete list of characters from the \
UnicodeCharacters.tr file."
}], "Text"],

Cell[CellGroupData[{

Cell["Missing file UnicodeCharacters.tr.", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$FEUnicodeCharactersFile", "=", 
   RowBox[{"FrontEnd`FileName", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "FrontEnd`$InstallationDirectory", ",", "\"\<SystemFiles\>\"", ",", 
       " ", "\"\<FrontEnd\>\"", ",", " ", "\"\<TextResources\>\""}], "}"}], 
     ",", "\"\<UnicodeCharacters.tr\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnicodeCharactersContentsAsString", "=", " ", 
   RowBox[{"MathLink`CallFrontEnd", "[", 
    RowBox[{"MLFS`Get", "[", "$FEUnicodeCharactersFile", "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "In some installed versions of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the file UnicodeCharacters.tr is missing. If so report this error."
}], "Text",
 CellChangeTimes->{3.452602541608912*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"unicodeCharacters", "::", "missing"}], " ", "=", " ", 
   "\"\<It appears that the file 'UnicodeCharacters.tr' has not been included \
in your installation of Mathematica. The file 'UnicodeCharacters.tr' is \
necessary for Notation to determine the precedences of characters. \
Unfortunately Notation will not run without this file. This sometimes occurs \
in installations inside WRI.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Not", " ", "@", " ", 
      RowBox[{"StringQ", "[", "UnicodeCharactersContentsAsString", "]"}]}], 
     "\[Or]", 
     RowBox[{"(", 
      RowBox[{"UnicodeCharactersContentsAsString", "\[Equal]", "\"\<\>\""}], 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{"unicodeCharacters", "::", "missing"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Missing characters in UnicodeCharacters.tr.", "NumberedSubsubsubtitle"],

Cell["\<\
Warning: 4.0 Beta 2 has many characters which are not properly incorporated \
into UnicodeCharacters.tr. Things like Klingon characters, etc. (Who added \
these ?!?)\
\>", "Text",
 CellChangeTimes->{{3.4526025587616034`*^9, 3.452602561657105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnicodeCharactersContentsAsStream", " ", "=", 
   RowBox[{
   "StringToStream", " ", "@", " ", "UnicodeCharactersContentsAsString"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"silentEvaluate", " ", "@", " ", 
   RowBox[{"Union", "[", 
    RowBox[{
    "setInternalCharacterInformation", " ", "/@", "\[IndentingNewLine]", 
     RowBox[{"ReadList", "[", 
      RowBox[{
      "UnicodeCharactersContentsAsStream", ",", "\[IndentingNewLine]", "Word",
        ",", "\[IndentingNewLine]", 
       RowBox[{"RecordLists", " ", "\[Rule]", " ", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WordSeparators", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"FromCharacterCode", "@", " ", "9"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RecordSeparators", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FromCharacterCode", " ", "@", " ", "13"}], ",", 
          RowBox[{"FromCharacterCode", " ", "@", " ", "10"}]}], "}"}]}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", " ", "@", " ", "UnicodeCharactersContentsAsStream"}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Add standard characters to ",
 StyleBox["internalCharacterInformation", "MR"],
 "."
}], "NumberedSubsubsubtitle",
 CellChangeTimes->{3.452602578200982*^9}],

Cell[TextData[{
 "This adds the uppercase letters, lowercase letters, and digits to ",
 StyleBox["internalCharacterInformation", "MR"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"internalCharacterInformation", "[", 
      RowBox[{"FromCharacterCode", " ", "@", " ", "i"}], "]"}], " ", "=", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToString", "@", "i"}], ",", "\"\<Letter\>\"", ",", 
       RowBox[{"\"\<Raw\>\"", "<>", 
        RowBox[{"FromCharacterCode", "@", "i"}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "65", ",", "90"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"internalCharacterInformation", "[", 
      RowBox[{"FromCharacterCode", " ", "@", " ", "i"}], "]"}], " ", "=", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToString", "@", "i"}], ",", "\"\<Letter\>\"", ",", 
       RowBox[{"\"\<Raw\>\"", "<>", 
        RowBox[{"FromCharacterCode", "@", "i"}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "97", ",", "122"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"internalCharacterInformation", "[", 
      RowBox[{"FromCharacterCode", " ", "@", " ", "i"}], "]"}], " ", "=", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToString", "@", "i"}], ",", "\"\<Digit\>\"", ",", 
       RowBox[{"\"\<Raw\>\"", "<>", 
        RowBox[{"FromCharacterCode", "@", "i"}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "48", ",", "57"}], "}"}]}], "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define characterInformation", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["characterInformation", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["characterInformation", "MR"],
 " returns the information available on a character. "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"characterInformation", " ", "@", " ", 
     RowBox[{"char_String", "?", "characterQ"}]}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"characterInformationAux", " ", "@", " ", 
     RowBox[{"internalCharacterInformation", " ", "@", " ", "char"}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"characterInformation", "[", 
     RowBox[{"char_String", ",", "field_Symbol"}], "]"}], ":=", " ", 
    RowBox[{"field", " ", "/.", 
     RowBox[{"characterInformation", "[", "char", "]"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"characterInformationAux", " ", "@", " ", 
     RowBox[{"{", 
      RowBox[{
      "theCode_", ",", "theFixity_", ",", "thePrecedence_", ",", 
       "theGrouping_", ",", "theRightSpacing_", ",", "theLeftSpacing_", ",", 
       "theCharacterFullName_"}], "}"}]}], " ", ":=", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CharacterCode", " ", "\[Rule]", " ", "theCode"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CharacterFixity", " ", "\[Rule]", " ", "theFixity"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CharacterPrecedence", " ", "\[Rule]", " ", "thePrecedence"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"CharacterGrouping", " ", "\[Rule]", " ", "theGrouping"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "CharacterRightSpacing", " ", "\[Rule]", " ", "theRightSpacing"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CharacterLeftSpacing", " ", "\[Rule]", " ", "theLeftSpacing"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
      "CharacterFullName", " ", "\[Rule]", " ", "theCharacterFullName"}]}], 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"characterInformationAux", " ", "@", " ", 
    RowBox[{"{", 
     RowBox[{"theCode_", ",", "theFixity_", ",", "theCharacterFullName_"}], 
     "}"}]}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CharacterCode", " ", "\[Rule]", " ", "theCode"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CharacterFixity", " ", "\[Rule]", " ", "theFixity"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "CharacterFullName", " ", "\[Rule]", " ", "theCharacterFullName"}]}], 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["characterInformation", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The first argument of ",
 StyleBox["characterInformation", "MR"],
 " must be a string."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"characterInformation", "[", 
     RowBox[{
      RowBox[{"notString_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "String", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"characterInformation", "::", "string"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The second argument of ",
 StyleBox["characterInformation", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"characterInformation", "[", 
     RowBox[{"_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"characterInformation", "::", "sym"}], ",", "notSymb", ",", 
      "2"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["characterInformation", "MR"],
 " expects one or two arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"characterInformation", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"num", " ", "<", " ", "1"}], " ", "\[Or]", " ", 
         RowBox[{"num", " ", ">", "2"}]}], ")"}], " ", "\[And]", " ", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"characterInformation", "::", "argt"}], ",", 
         RowBox[{"HoldForm", " ", "@", " ", "characterInformation"}], ",", 
         RowBox[{"heldLength", " ", "@", " ", "error"}], ",", "1", ",", "2"}],
         "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Box and Character Querying Functions", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["\<\
Definition of isolatingBoxes and nonIsolatingBoxes and mutableIsolatingBoxes\
\>", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["isolatingBoxes", "MR"],
 " are the box structures that isolate the grouping nature and precedence \
nature of the internals of the box."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isolatingBoxes", " ", "=", " ", 
   RowBox[{"(", " ", 
    RowBox[{
    "ButtonBox", " ", "|", " ", "FormBox", " ", "|", " ", "FrameBox", " ", 
     "|", " ", "GridBox", " ", "|", " ", "RowBox", " ", "|", "RadicalBox", 
     " ", "|", " ", "SqrtBox"}], " ", ")"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["nonIsolatingBoxes", "MR"],
 " are the box structures that do not isolate the grouping nature and \
precedence nature of the internals of the box."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonIsolatingBoxes", " ", "=", 
   RowBox[{"(", " ", 
    RowBox[{
    "AdjustmentBox", " ", "|", " ", "ErrorBox", " ", "|", "FractionBox", "|", 
     " ", "StyleBox", " ", "|", " ", "SubscriptBox", " ", "|", " ", 
     "SuperscriptBox", " ", "|", "SubsuperscriptBox", " ", "|", " ", 
     "UnderscriptBox", " ", "|", " ", "OverscriptBox", " ", "|", " ", 
     "UnderoverscriptBox"}], ")"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["mutableIsolatingBoxes", "MR"],
 " are the box structures that possibly change the grouping nature and \
precedence nature of the internals of the box."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["mutableIsolatingBoxes", "MR"], " ", "=", 
   RowBox[{"(", 
    RowBox[{"TagBox", " ", "|", "TemplateBox", "|", "InterpretationBox"}], 
    ")"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"allTheBoxes", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
    "nonIsolatingBoxes", " ", "|", " ", "isolatingBoxes", " ", "|", " ", 
     StyleBox["mutableIsolatingBoxes", "MR"]}], 
    StyleBox["]", "MR"]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["boxStructureQ", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["boxStructureQ", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["boxStructureQ", "MR"],
 " tests an expression to see if its head is a known box."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"boxStructureQ", " ", "@", " ", 
    RowBox[{"nonIsolatingBoxes", " ", "@", " ", "args___"}]}], ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boxStructureQ", " ", "@", " ", 
    RowBox[{"isolatingBoxes", " ", "@", " ", "args___"}]}], ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boxStructureQ", " ", "@", " ", 
    RowBox[{
     StyleBox["mutableIsolatingBoxes", "MR\.7f"], " ", "@", " ", 
     "args___"}]}], ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boxStructureQ", " ", "@", " ", "_"}], ":=", " ", "False"}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["boxStructureQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["boxStructureQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"boxStructureQ", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"boxStructureQ", "::", "argx"}], ",", 
         RowBox[{"HoldForm", " ", "@", " ", "boxStructureQ"}], ",", "num", 
         ",", "1"}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["nonIsolatingBoxStructureQ", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["nonIsolatingBoxStructureQ", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["nonIsolatingBoxStructureQ", "MR"],
 " will give ",
 StyleBox["True", "MR"],
 " if the box structure does not isolate the grouping nature and precedence \
nature of the internals of the box."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nonIsolatingBoxStructureQ", " ", "@", " ", 
    RowBox[{"nonIsolatingBoxes", " ", "@", " ", "args___"}]}], ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nonIsolatingBoxStructureQ", " ", "@", " ", "other_"}], " ", ":=", 
  " ", "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["nonIsolatingBoxStructureQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["nonIsolatingBoxStructureQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"nonIsolatingBoxStructureQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"nonIsolatingBoxStructureQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "nonIsolatingBoxStructureQ"}], ",",
         "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mutableIsolatingBoxStructureQ", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["mutableIsolatingBoxStructureQ", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["mutableIsolatingBoxStructureQ", "MR"],
 " will give ",
 StyleBox["True", "MR"],
 " if the box structure does not isolate the grouping nature and precedence \
nature of the internals of the box."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mutableIsolatingBoxStructureQ", " ", "@", " ", 
    RowBox[{"mutableIsolatingBoxes", " ", "@", " ", "args___"}]}], ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mutableIsolatingBoxStructureQ", " ", "@", " ", "other_"}], " ", ":=",
   " ", "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["mutableIsolatingBoxStructureQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["mutableIsolatingBoxStructureQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"mutableIsolatingBoxStructureQ", "[", "___", "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"mutableIsolatingBoxStructureQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "mutableIsolatingBoxStructureQ"}], 
        ",", "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["effectiveBoxes", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["effectiveBoxes", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["effectiveBoxes", "MR"],
 " will give the string internal to the given box structure according to how \
the boxes \"act\". \nE.g., ",
 StyleBox["SubscriptBox[\"+\",\"R\"]", "Input"],
 " will \"act\" like ",
 StyleBox["\"+\"", "Input"],
 "."
}], "Text",
 CellChangeTimes->{3.452602615969035*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", " ", "@", " ", "string_String"}], " ", ":=", " ",
    "string"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", " ", "@", " ", 
    RowBox[{"nonIsolatingBoxes", "[", 
     RowBox[{"actsLike_", ",", "___"}], "]"}]}], " ", ":=", " ", 
   RowBox[{"effectiveBoxes", " ", "@", " ", "actsLike"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", " ", "@", " ", 
    RowBox[{"mutableIsolatingBoxes", "[", 
     RowBox[{"___", ",", 
      RowBox[{"SyntaxForm", " ", "\[Rule]", " ", "actsLike_"}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"effectiveBoxes", " ", "@", " ", "actsLike"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", " ", "@", " ", 
    RowBox[{"mutableIsolatingBoxes", "[", 
     RowBox[{"actsLike_", ",", "___"}], "]"}]}], ":=", " ", 
   RowBox[{"effectiveBoxes", " ", "@", " ", "actsLike"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", " ", "@", " ", 
    RowBox[{"isolatingBoxes", " ", "[", "___", "]"}]}], " ", ":=", " ", 
   "\"\<GenericSymbol\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"effectiveBoxes", " ", "@", " ", "other_"}], ":=", " ", 
  "\"\<GenericSymbol\>\""}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["effectiveBoxes", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The first argument of ",
 StyleBox["effectiveBoxes", "MR"],
 " must be a box structure."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"effectiveBoxes", "[", 
     RowBox[{
      RowBox[{"badArg_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "boxStructureQ"}], "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"effectiveBoxes", "::", "badarg"}], ",", " ", "1", ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"effectiveBoxes", "::", "badarg"}], " ", "=", 
   "\"\<Box structure or String expected at position `1` in `2`\>\""}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["effectiveBoxes", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"effectiveBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"effectiveBoxes", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "effectiveBoxes"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["prefixOperatorQ", "NumberedSubsubtitle"],

Cell[TextData[{
 "This Boolean function determines if the given expression is normally \
treated as a ",
 StyleBox["PrefixOperator", "MR"],
 ".\nIf the expression is a box structure, then look inside the structure to \
see how it acts."
}], "Text",
 CellChangeTimes->{3.4526026334501143`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "nonIsolatingBoxStructureQ"}]}], " ", ":=", " ", 
   RowBox[{"prefixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "mutableIsolatingBoxStructureQ"}]}], " ", ":=", 
   " ", 
   RowBox[{"prefixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["prefixOperatorQ", "MR"],
 ": exceptions"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<\[PartialD]\>\""}], " ", 
   "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<\[Integral]\>\""}], " ", 
   "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<\[ContourIntegral]\>\""}], 
   " ", "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorQ", " ", "@", " ", 
    "\"\<\[CounterClockwiseContourIntegral]\>\""}], " ", "=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorQ", " ", "@", " ", "\"\<\[ClockwiseContourIntegral]\>\""}], 
   " ", "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorQ", " ", "@", " ", "\"\<\[DoubleContourIntegral]\>\""}], 
   " ", "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<\[Sum]\>\""}], " ", "=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<\[Product]\>\""}], " ", "=",
    " ", "True"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["prefixOperatorQ", "MR"],
 ": the general case"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", "\"\<!\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorQ", " ", "@", " ", 
    RowBox[{"char_", "?", "characterQ"}]}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"\"\<Prefix\>\"", " ", "==", " ", 
     RowBox[{"characterInformation", " ", "[", 
      RowBox[{"char", ",", "CharacterFixity"}], "]"}]}], " ", ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"prefixOperatorQ", " ", "@", " ", "other_"}], " ", ":=", " ", 
  "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["prefixOperatorQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["prefixOperatorQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"prefixOperatorQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"prefixOperatorQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "prefixOperatorQ"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["infixOperatorQ", "NumberedSubsubtitle"],

Cell[TextData[{
 "This Boolean function determines if the given expression could normally be \
treated as an ",
 StyleBox["InfixOperator", "MR"],
 ".\nIf the expression is a box structure, then look inside the structure to \
see how it acts."
}], "Text",
 CellChangeTimes->{3.452602649121793*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "nonIsolatingBoxStructureQ"}]}], " ", ":=", " ", 
   RowBox[{"infixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "mutableIsolatingBoxStructureQ"}]}], " ", ":=", 
   " ", 
   RowBox[{"infixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["infixOperatorQ", "MR"],
 ": exceptions"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<+\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<*\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<^\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<.\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<-\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<->\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<:>\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<:=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<^=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<^:=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<+=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<-=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<*=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\</=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\</.\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<//.\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<//\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\</;\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\</\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<:\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<;\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<<=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<<\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<>\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<>=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<==\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<===\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<!\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<!=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<=!=\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<&&\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<||\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<?\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<@@\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<@\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\</@\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<||\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", "\"\<|\>\""}], " ", "=", " ", 
   "True"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["infixOperatorQ", "MR"],
 ": the general case"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorQ", " ", "@", " ", 
    RowBox[{"char_", "?", "characterQ"}]}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"\"\<Infix\>\"", " ", "==", " ", 
     RowBox[{"characterInformation", " ", "[", " ", 
      RowBox[{"char", ",", " ", "CharacterFixity"}], "]"}]}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"infixOperatorQ", " ", "@", " ", "other_"}], " ", ":=", " ", 
  "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["infixOperatorQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["infixOperatorQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"infixOperatorQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"infixOperatorQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "infixOperatorQ"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["postfixOperatorQ", "NumberedSubsubtitle"],

Cell[TextData[{
 "This Boolean function determines if the given string could normally be \
treated as a ",
 StyleBox["PostfixOperator", "MR"],
 ".\nIf the expression is a box structure, then look inside the structure to \
see how it acts."
}], "Text",
 CellChangeTimes->{3.452602668505808*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "nonIsolatingBoxStructureQ"}]}], " ", ":=", " ", 
   RowBox[{"postfixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "mutableIsolatingBoxStructureQ"}]}], " ", ":=", 
   " ", 
   RowBox[{"postfixOperatorQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["postfixOperatorQ", "MR"],
 ": exceptions"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<;\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<&\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<!!\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<!\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<'\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<--\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<++\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<=.\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<..\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "\"\<...\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "other_"}], " ", "=", " ", 
   "False"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["postfixOperatorQ", "MR"],
 ": the general case"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", 
    RowBox[{"char_", "?", "characterQ"}]}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"\"\<Postfix\>\"", " ", "==", " ", 
     RowBox[{"characterInformation", " ", "[", 
      RowBox[{"char", ",", " ", "CharacterFixity"}], "]"}]}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorQ", " ", "@", " ", "other_"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["postfixOperatorQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["postfixOperatorQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"postfixOperatorQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"postfixOperatorQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "postfixOperatorQ"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["operatorQ", "NumberedSubsubtitle"],

Cell[TextData[{
 "This Boolean function determines if the given string is normally treated as \
an ",
 StyleBox["Operator", "MR"],
 "."
}], "Text",
 CellChangeTimes->{3.452602679201481*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"operatorQ", " ", "@", " ", "boxes_"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"prefixOperatorQ", " ", "@", " ", "boxes"}], " ", "\[Or]", " ", 
    RowBox[{"infixOperatorQ", " ", "@", " ", "boxes"}], " ", "\[Or]", " ", 
    RowBox[{"postfixOperatorQ", " ", "@", " ", "boxes"}]}]}], " "}]], "Input",\

 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["operatorQ", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["operatorQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"operatorQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"operatorQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "operatorQ"}], ",", "num", ",", 
        "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["delimiterQ", "NumberedSubsubtitle",
 CellChangeTimes->{{3.4526027123773327`*^9, 3.452602713593913*^9}}],

Cell[TextData[{
 "This Boolean function determines if the given string could normally be \
treated as a ",
 StyleBox["Delimiter", "MR"],
 ".\nIf the expression is a box structure, then look inside the structure to \
see how it acts."
}], "Text",
 CellChangeTimes->{3.452602700593892*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "nonIsolatingBoxStructureQ"}]}], " ", ":=", " ", 
   RowBox[{"delimiterQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", 
    RowBox[{"struct_", "?", "mutableIsolatingBoxStructureQ"}]}], " ", ":=", 
   " ", 
   RowBox[{"delimiterQ", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}]}], "Input",\

 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["delimiterQ", "MR"],
 ": exceptions"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<\[InvisibleComma]\>\""}], " ", 
   "=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<,\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<[\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<]\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<(\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<)\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<{\>\""}], " ", "=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", "\"\<}\>\""}], " ", "=", " ", 
   "True"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["delimiterQ", "MR"],
 ": the general case"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"delimiterQ", " ", "@", " ", 
    RowBox[{"char_", "?", "characterQ"}]}], " ", ":=", "\[IndentingNewLine]", 
   
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"theFixity", " ", "=", " ", 
       RowBox[{"characterInformation", " ", "[", " ", 
        RowBox[{"char", ",", " ", "CharacterFixity"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"theFixity", " ", "==", " ", "\"\<Open\>\""}], " ", "\[Or]", 
      " ", 
      RowBox[{"theFixity", " ", "==", " ", "\"\<InfixOpen\>\""}], " ", 
      "\[Or]", " ", 
      RowBox[{"theFixity", " ", "==", " ", "\"\<Close\>\""}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"delimiterQ", " ", "@", " ", "other_"}], " ", ":=", " ", 
  "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["delimiterQ", "MR"]
}], "NumberedSubsubsubtitle",
 CellChangeTimes->{{3.452602751625619*^9, 3.452602763137163*^9}}],

Cell[TextData[{
 StyleBox["delimiterQ", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"delimiterQ", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"delimiterQ", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "delimiterQ"}], ",", "num", ",", 
        "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TokenToSymbol Functions", "NumberedSubsubtitle"],

Cell[TextData[{
 "These functions will take an operator string token that is not an exception \
and give the operator symbol that this token parses to.\nThe ",
 StyleBox["Check", "MR"],
 " is in case the symbol is not ",
 "recognized",
 ", in which case the precedence is reported as '",
 StyleBox["Times", "MR"],
 "'."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"infixOperatorTokenToSymbol", " ", "@", " ", "infixop_String"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"silentEvaluate", " ", "@", " ", "\[IndentingNewLine]", 
    RowBox[{"Check", "[", " ", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expr", "=", 
          RowBox[{"ToHeldExpression", "[", 
           RowBox[{
           "\"\<Notation`Private`a\>\"", " ", "<>", " ", "infixop", " ", "<>",
             " ", "\"\<Notation`Private`b\>\""}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", " ", "@", " ", "expr"}], " ", "==", "3"}], ",", 
          " ", 
          RowBox[{"expr", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], ",", "Times"}],
          "]"}]}], "]"}], ",", "Times"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", "\"\<\[PartialD]\>\""}], " ",
    "=", " ", "D"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", "\"\<\[Integral]\>\""}], " ",
    "=", " ", "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", 
    "\"\<\[ContourIntegral]\>\""}], " ", "=", " ", "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", 
    "\"\<\[CounterClockwiseContourIntegral]\>\""}], " ", "=", " ", 
   "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", 
    "\"\<\[ClockwiseContourIntegral]\>\""}], " ", "=", " ", "Integrate"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "prefixOperatorTokenToSymbol", " ", "@", " ", 
    "\"\<\[DoubleContourIntegral]\>\""}], " ", "=", " ", "Integrate"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prefixOperatorTokenToSymbol", " ", "@", " ", "prefixOp_String"}], 
   ":=", "\[IndentingNewLine]", 
   RowBox[{"silentEvaluate", " ", "@", "\[IndentingNewLine]", 
    RowBox[{"Check", "[", " ", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expr", "=", 
          RowBox[{"ToHeldExpression", "[", 
           RowBox[{"prefixOp", " ", "<>", " ", "\"\<Notation`Private`b\>\""}],
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", " ", "@", " ", "expr"}], " ", "==", "3"}], ",", 
          " ", 
          RowBox[{"expr", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], ",", "Times"}],
          "]"}]}], "]"}], ",", "Times"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postfixOperatorTokenToSymbol", " ", "@", " ", "\"\<'\>\""}], " ", 
   "=", " ", "Derivative"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"postfixOperatorTokenToSymbol", " ", "@", " ", "postfixOp_String"}],
   ":=", "\[IndentingNewLine]", 
  RowBox[{"silentEvaluate", " ", "@", "\[IndentingNewLine]", 
   RowBox[{"Check", "[", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"expr", "=", 
         RowBox[{"ToHeldExpression", "[", 
          RowBox[{"\"\<Notation`Private`b\>\"", " ", "<>", " ", "postfixOp"}],
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", " ", "@", " ", "expr"}], " ", "==", "3"}], ",", 
         " ", 
         RowBox[{"expr", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], ",", "Times"}], 
        "]"}]}], "]"}], ",", "Times"}], "]"}]}]}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error checking for Token to Symbol Functions", "NumberedSubsubtitle"],

Cell[TextData[{
 "The first argument of ",
 StyleBox["infixOperatorTokenToSymbol", "MR"],
 " must be a String."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"infixOperatorTokenToSymbol", "[", 
     RowBox[{
      RowBox[{"notString_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "String", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"infixOperatorTokenToSymbol", "::", "string"}], ",", " ", "1", 
      ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The first argument of ",
 StyleBox["prefixOperatorTokenToSymbol", "MR"],
 " must be a String."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"prefixOperatorTokenToSymbol", "[", 
     RowBox[{
      RowBox[{"notString_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "String", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"prefixOperatorTokenToSymbol", "::", "string"}], ",", " ", "1", 
      ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The first argument of ",
 StyleBox["postfixOperatorTokenToSymbol", "MR"],
 " must be a String."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"postfixOperatorTokenToSymbol", "[", 
     RowBox[{
      RowBox[{"notString_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "String", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"postfixOperatorTokenToSymbol", "::", "string"}], ",", " ", "1",
       ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["infixOperatorTokenToSymbol", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"infixOperatorTokenToSymbol", "[", "___", "]"}]}], " ", ":=", " ", 
  
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"infixOperatorTokenToSymbol", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "infixOperatorTokenToSymbol"}], 
        ",", "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["prefixOperatorTokenToSymbol", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"prefixOperatorTokenToSymbol", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"prefixOperatorTokenToSymbol", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "prefixOperatorTokenToSymbol"}], 
        ",", "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["postfixOperatorTokenToSymbol", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"postfixOperatorTokenToSymbol", "[", "___", "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"postfixOperatorTokenToSymbol", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "postfixOperatorTokenToSymbol"}], 
        ",", "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["effectiveOperator", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["effectiveOperator", "MR"],
 " gives the effective operator by which output boxes need to be grouped."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["effectiveOperator ", "MR"],
 ": exceptions"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", 
    RowBox[{"struct_", "?", "boxStructureQ"}]}], " ", ":=", " ", 
   RowBox[{"effectiveOperator", " ", "@", " ", 
    RowBox[{"effectiveBoxes", " ", "@", " ", "struct"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", "\"\<\[PartialD]\>\""}], " ", 
   "=", " ", "D"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", "\"\<\[Integral]\>\""}], " ", 
   "=", " ", "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", "\"\<\[ContourIntegral]\>\""}],
    " ", "=", " ", "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "effectiveOperator", " ", "@", " ", 
    "\"\<\[ClockwiseContourIntegral]\>\""}], " ", "=", " ", "Integrate"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "effectiveOperator", " ", "@", " ", 
    "\"\<\[CounterClockwiseContourIntegral]\>\""}], " ", "=", " ", 
   "Integrate"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "effectiveOperator", " ", "@", " ", 
    "\"\<\[ClockwiseContourIntegral]\>\""}], " ", "=", " ", "Integrate"}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["effectiveOperator ", "MR"],
 ": the general case"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", 
    RowBox[{"op_", "?", "prefixOperatorQ"}]}], " ", ":=", " ", 
   RowBox[{"prefixOperatorTokenToSymbol", " ", "@", " ", "op"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", 
    RowBox[{"op_", "?", "infixOperatorQ"}]}], " ", ":=", " ", 
   RowBox[{"infixOperatorTokenToSymbol", " ", "@", " ", "op"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", 
    RowBox[{"op_", "?", "postfixOperatorQ"}]}], " ", ":=", " ", 
   RowBox[{"postfixOperatorTokenToSymbol", " ", "@", " ", "op"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"effectiveOperator", " ", "@", " ", "other_"}], " ", ":=", " ", 
   "Times"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["effectiveOperator", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["effectiveOperator", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"effectiveOperator", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"effectiveOperator", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "effectiveOperator"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility Functions", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["myHold, releaseMyHold, flattenAllMyHold & toMyHeldExpression", \
"NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["myHold", "MR"],
 " and ",
 StyleBox["releaseMyHold", "MR"],
 " are exactly the same as the standard ",
 StyleBox["Hold", "MR"],
 " and ",
 StyleBox["releaseHold", "MR"],
 ", except they appear in a different context so they will not stomp on other \
uses of ",
 StyleBox["Hold", "MR"],
 " or held expressions."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", " ", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myHold", ",", "releaseMyHold"}], "}"}], ",", 
    "HoldAllComplete"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"releaseMyHold", " ", "@", " ", "expr___"}], " ", ":=", 
   RowBox[{"Evaluate", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HoldComplete", " ", "[", " ", "expr", " ", "]"}], " ", "//.", 
      " ", 
      RowBox[{
       RowBox[{"myHold", " ", "@", " ", "term___"}], " ", "\[Rule]", " ", 
       "term"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"flattenAllMyHold", " ", "@", " ", "expr_"}], " ", ":=", " ", 
   RowBox[{"myHold", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HoldComplete", " ", "@", " ", "expr"}], " ", "//.", " ", 
      RowBox[{
       RowBox[{"myHold", " ", "@", " ", "term___"}], " ", "\[Rule]", " ", 
       "term"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toMyHeldExpression", " ", "@", " ", "args___"}], " ", ":=", " ", 
   RowBox[{"myHold", " ", "@@", " ", 
    RowBox[{"MakeExpression", " ", "@", " ", "args"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["removePatternsAndBlanks", "NumberedSubsubtitle"],

Cell["\<\
This removes all pattern wrappers, optional wrappers, pattern tests and \
conditions, leaving just a pattern variable if possible.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"removePatternsAndBlanks", " ", "@", " ", "expr_"}], ":=", 
  RowBox[{"Evaluate", " ", "@@", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"myHold", " ", "@", " ", "expr"}], "//.", "\[IndentingNewLine]", 
     
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"holdHead", ":", "Optional"}], ")"}], "[", 
         RowBox[{"a_", ",", "___"}], "]"}], "\[Rule]", "a"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"holdHead", ":", "Pattern"}], ")"}], "[", 
         RowBox[{"a_", ",", "___"}], "]"}], "\[Rule]", "a"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"holdHead", ":", "PatternTest"}], ")"}], "[", 
         RowBox[{"a_", ",", "___"}], "]"}], "\[Rule]", "a"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"holdHead", ":", "Condition"}], ")"}], "[", 
         RowBox[{"a_", ",", "___"}], "]"}], "\[Rule]", "a"}]}], "}"}]}], 
    ")"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["removePatternsAndBlanks", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["removePatternsAndBlanks", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"removePatternsAndBlanks", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"removePatternsAndBlanks", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "removePatternsAndBlanks"}], ",", 
        "num", ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertPatterns", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["convertPatterns", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["convertPatterns", "MR"],
 " will remove all ",
 StyleBox["PatternTests", "MR"],
 ", ",
 StyleBox["Conditions", "MR"],
 " and ",
 StyleBox["Optionals", "MR"],
 ", as well as ",
 StyleBox["Heads", "MR"],
 ", leaving just named Patterns. It is useful for putting an expression into \
a form upon which further manipulations of the pattern variables may be \
performed."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertPatterns", " ", "@", " ", "expr_"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"myHold", " ", "@", " ", "expr"}], "//.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Optional"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "a"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Pattern"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "_Blank"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"singleBlank", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Pattern"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "_BlankSequence"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"doubleBlank", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Pattern"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "_BlankNullSequence"}], "]"}], " ", "\[Rule]", " ", 
      
      RowBox[{"tripleBlank", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Pattern"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "_"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"complexPattern", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "PatternTest"}], ")"}], "[", 
       RowBox[{"a_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "a"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"holdHead", ":", "Condition"}], ")"}], " ", "[", 
       RowBox[{"a_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "a"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"_Blank", " ", "\[Rule]", " ", 
      RowBox[{"singleBlank", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"_BlankSequence", " ", "\[Rule]", " ", 
      RowBox[{"doubleBlank", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"_BlankNullSequence", " ", "\[Rule]", " ", 
      RowBox[{"tripleBlank", "[", "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "singleBlank", ",", "doubleBlank", ",", "tripleBlank", ",", 
      "complexPattern"}], "}"}], ",", "HoldAll"}], "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["convertPatterns", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["convertPatterns", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"convertPatterns", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"convertPatterns", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "convertPatterns"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["cleanBoxes & tidyBoxes", "NumberedSubsubtitle"],

Cell[TextData[{
 "These two functions just clean up box structures by flattening single ",
 StyleBox["RowBoxes", "MR"],
 ", removing nested ",
 StyleBox["RowBoxes", "MR"],
 " and removing white space, where applicable."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["cleanBoxes", "MR"]], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanBoxes", " ", "@", " ", "boxes_"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Identity", " ", "@@", " ", 
   RowBox[{"StripBoxes", " ", "[", 
    RowBox[{"boxes", "//.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"RowBox", " ", "@", " ", 
         RowBox[{"{", "single_", "}"}]}], "\[RuleDelayed]", " ", "single"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RowBox", " ", "@", " ", 
         RowBox[{"{", 
          RowBox[{"RowBox", " ", "@", " ", 
           RowBox[{"{", "args___", "}"}]}], "}"}]}], "\[RuleDelayed]", " ", 
        RowBox[{"RowBox", " ", "@", " ", 
         RowBox[{"{", "args", "}"}]}]}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["tidyBoxes", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tidyBoxes", " ", "@", " ", "boxes_"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"boxes", "//.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"{", 
        RowBox[{"RowBox", " ", "@", " ", 
         RowBox[{"{", "args___", "}"}]}], "}"}]}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"{", "args", "}"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"{", 
        RowBox[{"l___", ",", 
         RowBox[{"RowBox", " ", "@", " ", 
          RowBox[{"{", "single_", "}"}]}], ",", "r___"}], "}"}]}], " ", 
      "\[RuleDelayed]", " ", 
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"{", 
        RowBox[{"l", ",", "single", ",", "r"}], "}"}]}]}]}], " ", 
    "}"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["cleanBoxes", "MR"],
 " and ",
 StyleBox["tidyBoxes", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["cleanBoxes", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"cleanBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"cleanBoxes", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "cleanBoxes"}], ",", "num", ",", 
        "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 StyleBox["tidyBoxes", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"tidyBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"tidyBoxes", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "tidyBoxes"}], ",", "num", ",", 
        "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["stripStylingBoxes", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["StripStylingBoxes", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["StripStylingBoxes", "MR"],
 " will remove any ",
 StyleBox["styleBoxes", "MR"],
 ", ",
 StyleBox["AdjustmentBoxes", "MR"],
 " or ",
 StyleBox["FrameBoxes", "MR"],
 " from an expressions."
}], "Text",
 CellChangeTimes->{3.452602929209631*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"stripStylingBoxes", ",", "HoldAll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"StyleBox", "[", 
     RowBox[{"boxes_", ",", "styles___"}], "]"}]}], ":=", " ", 
   RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"AdjustmentBox", "[", 
     RowBox[{"boxes_", ",", "styles___"}], "]"}]}], ":=", " ", 
   RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"FrameBox", "[", 
     RowBox[{"boxes_", ",", "styles___"}], "]"}]}], ":=", " ", 
   RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"TagBox", " ", "@", " ", "boxes___"}]}], " ", ":=", " ", 
   RowBox[{"TagBox", " ", "@", " ", "boxes"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"RowBox", " ", "@", " ", "boxes___"}]}], " ", ":=", " ", 
   RowBox[{"RowBox", " ", "[", " ", 
    RowBox[{"stripStylingBoxes", " ", "/@", " ", "boxes"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stripStylingBoxes", " ", "@", " ", 
     RowBox[{"a_", " ", "@", " ", "args__"}]}], " ", "/;", " ", 
    RowBox[{"boxStructureQ", "[", " ", 
     RowBox[{"a", " ", "@", " ", "args"}], "]"}]}], " ", ":=", " ", 
   RowBox[{"a", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"stripStylingBoxes", " ", "/@", " ", 
      RowBox[{"{", "args", "}"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stripStylingBoxes", " ", "@", " ", 
    RowBox[{"{", "args__", "}"}]}], ":=", " ", 
   RowBox[{"stripStylingBoxes", " ", "/@", " ", 
    RowBox[{"{", "args", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stripStylingBoxes", " ", "@", " ", "a_"}], " ", ":=", " ", 
  "a"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["stripStylingBoxes", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["stripStylingBoxes", "MR"],
 " expects only one argument."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", " ", ":", 
   RowBox[{"stripStylingBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", " ", "=", " ", 
      RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"num", " ", "\[NotEqual]", " ", "1"}], " ", "\[And]", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"stripStylingBoxes", "::", "argx"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "stripStylingBoxes"}], ",", "num", 
        ",", "1"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Conversions, Handling, and Testing", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["boxedStringPatternsToPatterns", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["boxedStringPatternsToPatterns", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["boxedStringPatternsToPatterns", "MR"],
 " will take an expression consisting of boxes and convert all patterns \
present in the boxes\[LongDash]patterns that are currently still unparsed \
strings and not yet expressions\[LongDash]to the corresponding patterned \
expressions, leaving the other boxes alone."
}], "Text",
 CellChangeTimes->{{3.4526029609945593`*^9, 3.45260297246614*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"boxedStringPatternsToPatterns", "[", 
   RowBox[{"patternBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"WorkingFormOpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"WorkingForm", " ", "/.", " ", 
        RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
       RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"stripStylingBoxes", " ", "@@", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"patternBoxes", " ", "//.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HoldPattern", "[", "ParsedBoxWrapper", "]"}], " ", "@", 
           " ", "stringPatternBoxes_"}], " ", "\[RuleDelayed]", " ", 
          "stringPatternBoxes"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TemplateBox", "[", 
           RowBox[{
            RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
            "\"\<NotationPatternTag\>\"", ",", "___"}], "]"}], " ", 
          "\[RuleDelayed]", " ", 
          RowBox[{"toMyHeldExpression", " ", "[", " ", 
           RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TemplateBox", "[", 
           RowBox[{
            RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
            "\"\<NotationMadeBoxesTag\>\"", ",", "___"}], "]"}], " ", 
          "\[RuleDelayed]", " ", 
          RowBox[{"toMyHeldExpression", " ", "[", " ", 
           RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"string_String", " ", "/;", " ", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{"string", ",", "\"\<*_\>\""}], "]"}]}], " ", 
          "\[RuleDelayed]", " ", 
          RowBox[{"ToExpression", " ", "[", " ", 
           RowBox[{"string", ",", " ", "WorkingFormOpt"}], "]"}]}]}], "}"}]}],
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["boxedStringPatternsToPatterns", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The second argument and beyond of ",
 StyleBox["boxedStringPatternsToPatterns", "MR"],
 " must be Options."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"boxedStringPatternsToPatterns", "[", 
     RowBox[{"_", ",", "___", ",", 
      RowBox[{"notOption_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "OptionQ"}], "]"}], ")"}]}], ",", "___"}], "]"}]}],
    " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"boxedStringPatternsToPatterns", "::", "nonopt"}], ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["patternToGeneralQ", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["patternToGeneralQ", "MR"],
 " tests to see if a pattern is too general to be used in a Symbolization or \
Notation ",
 "statement",
 "."
}], "Text",
 CellChangeTimes->{{3.452603077402357*^9, 3.4526030866903276`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"patternToGeneralQ", ",", "HoldAll"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"patternToGeneralQ", " ", "@", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "Blank", "|", "BlankNull", "|", "BlankSequence", "|", 
       "BlankNullSequence"}], ")"}], "[", "___", "]"}]}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"patternToGeneralQ", " ", "@", " ", 
    RowBox[{
     RowBox[{"HoldPattern", "[", "Pattern", "]"}], "[", 
     RowBox[{"_", ",", "patternContent_"}], "]"}]}], " ", ":=", " ", 
   RowBox[{"patternToGeneralQ", " ", "@", " ", "patternContent"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"patternToGeneralQ", " ", "@", " ", 
    RowBox[{"myHold", "[", "patternContent___", "]"}]}], ":=", 
   RowBox[{"patternToGeneralQ", " ", "@", " ", "patternContent"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"patternToGeneralQ", " ", "@", " ", "___"}], " ", ":=", " ", 
  "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["makeHeldSequenceOfBoxes and makeHeldRowBoxOfBoxes", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["makeHeldSequenceOfBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " inserts commas (i.e. \"",
 StyleBox[",", "MR"],
 "\" ) between every boxed expression in the sequence of boxes given to ",
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 ". ",
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " holds its arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"makeHeldSequenceOfBoxes", ",", "makeHeldRowBoxOfBoxes"}], "}"}],
     ",", 
    RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "form_Symbol", ",", " ", "None"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Sequence", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "None"}], "]"}], " ", ":=", " ", 
   RowBox[{"MakeBoxes", " ", "[", " ", 
    RowBox[{"expr", ",", " ", "form"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Parenthesize", "[", " ", 
    RowBox[{"expr", ",", " ", "form", ",", " ", "parenthesizedBy"}], " ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeHeldSequenceOfBoxes", " ", "[", " ", 
     RowBox[{
      RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
      "None"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Sequence", " ", "@@", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"#", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"term", ",", " ", 
            RowBox[{"MakeBoxes", "[", " ", 
             RowBox[{"term", ",", " ", "form"}], "]"}], ",", 
            RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
          RowBox[{"Unevaluated", " ", "@", " ", 
           RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
   ";"}], "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sequence", " ", "@@", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"term", ",", " ", 
           RowBox[{"Parenthesize", "[", " ", 
            RowBox[{"term", ",", " ", "form", ",", " ", "parenthesizedBy"}], 
            "]"}], ",", 
           RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", 
          RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["makeHeldRowBoxOfBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " inserts commas (i.e. \"",
 StyleBox[",", "MR"],
 "\" ) between every boxed expression in the sequence of boxes given to ",
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 "; in addition it returns the result wrapped in a RowBox.",
 " ",
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " holds its arguments."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "form_Symbol", ",", " ", "None"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"RowBox", " ", "@", " ", 
    RowBox[{"{", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "None"}], "]"}], " ", ":=", " ", 
   RowBox[{"MakeBoxes", " ", "[", " ", 
    RowBox[{"expr", ",", " ", "form"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Parenthesize", "[", " ", 
    RowBox[{"expr", ",", " ", "form", ",", " ", "parenthesizedBy"}], " ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeHeldRowBoxOfBoxes", " ", "[", " ", 
     RowBox[{
      RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
      "None"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"#", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"term", ",", " ", 
            RowBox[{"MakeBoxes", "[", " ", 
             RowBox[{"term", ",", " ", "form"}], "]"}], ",", 
            RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
          RowBox[{"Unevaluated", " ", "@", " ", 
           RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
   ";"}], "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeHeldRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RowBox", " ", "@", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"term", ",", " ", 
           RowBox[{"Parenthesize", "[", " ", 
            RowBox[{"term", ",", " ", "form", ",", " ", "parenthesizedBy"}], 
            "]"}], ",", 
           RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", 
          RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["makeEvaluatedSequenceOfBoxes and makeEvaluatedRowBoxOfBoxes", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["makeEvaluatedSequenceOfBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " inserts commas (i.e. \",\" ) between every boxed expression in the \
sequence of boxes given to ",
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 ". ",
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " evaluates its arguments."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "form_Symbol", ",", " ", "None"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Sequence", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "None"}], "]"}], " ", ":=", " ", 
   RowBox[{"MakeBoxes", " ", "[", " ", 
    RowBox[{"expr", ",", " ", "form"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Parenthesize", "[", " ", 
    RowBox[{"expr", ",", " ", "form", ",", " ", "parenthesizedBy"}], " ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedSequenceOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "None"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sequence", " ", "@@", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"term", ",", " ", 
           RowBox[{"MakeBoxes", "[", " ", 
            RowBox[{"term", ",", " ", "form"}], "]"}], ",", 
           RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", 
          RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
  "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{"makeEvaluatedSequenceOfBoxes", " ", "[", " ", 
   RowBox[{
    RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
    "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"Sequence", " ", "@@", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
   RowBox[{"Flatten", " ", "@", " ", 
    RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"term", ",", " ", 
          RowBox[{"Parenthesize", "[", " ", 
           RowBox[{"term", ",", " ", "form", ",", " ", "parenthesizedBy"}], 
           "]"}], ",", 
          RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", 
         RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], 
      "}"}]}]}]}]}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " inserts commas (i.e. \",\" ) between every boxed expression in the \
sequence of boxes given to ",
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 "; in addition it returns the result wrapped in a RowBox.",
 " ",
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " evaluates its arguments."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "form_Symbol", ",", " ", "None"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"RowBox", " ", "@", " ", 
    RowBox[{"{", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "None"}], "]"}], " ", ":=", " ", 
   RowBox[{"MakeBoxes", " ", "[", " ", 
    RowBox[{"expr", ",", " ", "form"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr_", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Parenthesize", "[", " ", 
    RowBox[{"expr", ",", " ", "form", ",", " ", "parenthesizedBy"}], " ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeEvaluatedRowBoxOfBoxes", " ", "[", " ", 
     RowBox[{
      RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
      "None"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"#", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"term", ",", " ", 
            RowBox[{"MakeBoxes", "[", " ", 
             RowBox[{"term", ",", " ", "form"}], "]"}], ",", 
            RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
          RowBox[{"Unevaluated", " ", "@", " ", 
           RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
   ";"}], "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeEvaluatedRowBoxOfBoxes", " ", "[", " ", 
    RowBox[{
     RowBox[{"{", "expr___", "}"}], " ", ",", " ", "form_Symbol", ",", " ", 
     "parenthesizedBy_Symbol"}], " ", "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RowBox", " ", "@", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "&"}], " ", "@", " ", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"Thread", " ", "@", "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"term", ",", " ", 
           RowBox[{"Parenthesize", "[", " ", 
            RowBox[{"term", ",", " ", "form", ",", " ", "parenthesizedBy"}], 
            "]"}], ",", 
           RowBox[{"{", "HoldAll", "}"}]}], "]"}], " ", "/@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", 
          RowBox[{"{", "expr", "}"}]}]}], ",", "\"\<,\>\""}], "}"}]}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error checking for makeHeldSequenceOfBoxes", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " expects three arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldSequenceOfBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"num", " ", "==", " ", "1"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeHeldSequenceOfBoxes", "::", "argr"}], ",", " ", 
          RowBox[{"HoldForm", " ", "@", " ", "makeHeldSequenceOfBoxes"}], ",",
           "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"num", " ", "\[NotEqual]", " ", "3"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeHeldSequenceOfBoxes", "::", "argrx"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "makeHeldSequenceOfBoxes"}], ",",
           "num", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", "True", ",", 
        " ", "False"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 1st argument of ",
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " must be a list."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldSequenceOfBoxes", "[", 
     RowBox[{
      RowBox[{"notList_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "List", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldSequenceOfBoxes", "::", "list"}], ",", 
      RowBox[{"HoldForm", "@", "error"}], ",", "1"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 2nd argument of ",
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldSequenceOfBoxes", "[", 
     RowBox[{"_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldSequenceOfBoxes", "::", "sym"}], ",", "notSymb", ",", 
      "2"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 3rd argument of ",
 StyleBox["makeHeldSequenceOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldSequenceOfBoxes", "[", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldSequenceOfBoxes", "::", "sym"}], ",", "notSymb", ",", 
      "3"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error checking for makeHeldRowBoxOfBoxes", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " expects three arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldRowBoxOfBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"num", " ", "==", " ", "1"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeHeldRowBoxOfBoxes", "::", "argr"}], ",", " ", 
          RowBox[{"HoldForm", " ", "@", " ", "makeHeldRowBoxOfBoxes"}], ",", 
          "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"num", " ", "\[NotEqual]", " ", "3"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeHeldRowBoxOfBoxes", "::", "argrx"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "makeHeldRowBoxOfBoxes"}], ",", 
          "num", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", "True", ",", 
        " ", "False"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 1st argument of ",
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " must be a list."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldRowBoxOfBoxes", "[", 
     RowBox[{
      RowBox[{"notList_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "List", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldRowBoxOfBoxes", "::", "list"}], ",", 
      RowBox[{"HoldForm", "@", "error"}], ",", "1"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 2nd argument of ",
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldRowBoxOfBoxes", "[", 
     RowBox[{"_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldRowBoxOfBoxes", "::", "sym"}], ",", "notSymb", ",", 
      "2"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 3rd argument of ",
 StyleBox["makeHeldRowBoxOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeHeldRowBoxOfBoxes", "[", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeHeldRowBoxOfBoxes", "::", "sym"}], ",", "notSymb", ",", 
      "3"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error checking for makeEvaluatedSequenceOfBoxes", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " expects 3 arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedSequenceOfBoxes", "[", "___", "]"}]}], " ", ":=", 
   " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"num", " ", "==", " ", "1"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeEvaluatedSequenceOfBoxes", "::", "argr"}], ",", " ", 
          RowBox[{"HoldForm", " ", "@", " ", "makeEvaluatedSequenceOfBoxes"}],
           ",", "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"num", " ", "\[NotEqual]", " ", "3"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeEvaluatedSequenceOfBoxes", "::", "argrx"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "makeEvaluatedSequenceOfBoxes"}],
           ",", "num", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", "True", 
        ",", " ", "False"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 1st argument of ",
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " must be a list."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedSequenceOfBoxes", "[", 
     RowBox[{
      RowBox[{"notList_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "List", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedSequenceOfBoxes", "::", "list"}], ",", 
      RowBox[{"HoldForm", "@", "error"}], ",", "1"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 2nd argument of ",
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedSequenceOfBoxes", "[", 
     RowBox[{"_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedSequenceOfBoxes", "::", "sym"}], ",", "notSymb", 
      ",", "2"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 3rd argument of ",
 StyleBox["makeEvaluatedSequenceOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedSequenceOfBoxes", "[", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedSequenceOfBoxes", "::", "sym"}], ",", "notSymb", 
      ",", "3"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error checking for makeEvaluatedRowBoxOfBoxes", "NumberedSubsubtitle"],

Cell[TextData[{
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " expects three arguments."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"num", " ", "==", " ", "1"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeEvaluatedRowBoxOfBoxes", "::", "argr"}], ",", " ", 
          RowBox[{"HoldForm", " ", "@", " ", "makeEvaluatedRowBoxOfBoxes"}], 
          ",", "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"num", " ", "\[NotEqual]", " ", "3"}], " ", ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"makeEvaluatedRowBoxOfBoxes", "::", "argrx"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "makeEvaluatedRowBoxOfBoxes"}], 
          ",", "num", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", "True", 
        ",", " ", "False"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 1st argument of ",
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " must be a list."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
     RowBox[{
      RowBox[{"notList_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "List", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedRowBoxOfBoxes", "::", "list"}], ",", 
      RowBox[{"HoldForm", "@", "error"}], ",", "1"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 2nd argument of ",
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
     RowBox[{"_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedRowBoxOfBoxes", "::", "sym"}], ",", "notSymb", 
      ",", "2"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The 3rd argument of ",
 StyleBox["makeEvaluatedRowBoxOfBoxes", "MR"],
 " must be a symbol."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"notSymb_", "?", 
       RowBox[{"(", 
        RowBox[{"headIsNot", "[", "Symbol", "]"}], ")"}]}], ",", "___"}], 
     "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"makeEvaluatedRowBoxOfBoxes", "::", "sym"}], ",", "notSymb", 
      ",", "3"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolize Name Handling", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["operatorStringsToSymbolStrings", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "deleteMultipleUnderBrackets", " ", "@", " ", "exprString_String"}], " ", ":=",
    " ", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"exprString", ",", 
     RowBox[{
     "\"\<\[UnderBracket]\[UnderBracket]\>\"", "\[Rule]", 
      "\"\<\[UnderBracket]\>\""}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pruneEnclosingCharacters", "[", 
    RowBox[{"str_String", " ", "/;", " ", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"str", ",", "\"\<\\\"\\\\[*]\\\"\>\""}], "]"}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"StringDrop", "[", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"str", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pruneEnclosingCharacters", " ", "@", " ", "other_"}], " ", ":=", 
   " ", "\"\<\>\""}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "convertNonLettersToFullNames", " ", "@", " ", "exprString_String"}], " ", 
   ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"StringJoin", " ", "[", " ", 
    RowBox[{
     RowBox[{"Characters", "[", " ", "exprString", " ", "]"}], " ", "/.", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"str_String", " ", "/;", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Not]", " ", 
          RowBox[{"LetterQ", " ", "@", " ", "str"}]}], " ", "\[And]", " ", 
         RowBox[{"\[Not]", " ", 
          RowBox[{"DigitQ", " ", "@", " ", "str"}]}], " ", "\[And]", 
         RowBox[{
         "str", " ", "\[NotEqual]", " ", "\"\<\[UnderBracket]\>\""}]}], 
        ")"}]}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"pruneEnclosingCharacters", " ", "@", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"FullForm", " ", "@", " ", "str"}]}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "deletePossibleLeadingAndTrailingUnderBrackets", " ", "@", " ", 
    "exprString_String"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"exprString", ",", "\"\<\[UnderBracket]*\[UnderBracket]\>\""}], 
      "]"}], ",", " ", 
     RowBox[{"StringDrop", "[", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"exprString", ",", "1"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"exprString", ",", "\"\<\[UnderBracket]*\>\""}], "]"}], ",", 
     " ", 
     RowBox[{"StringDrop", "[", 
      RowBox[{"exprString", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"exprString", ",", "\"\<*\[UnderBracket]\>\""}], "]"}], ",", 
     " ", 
     RowBox[{"StringDrop", "[", 
      RowBox[{"exprString", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", "True", ",", 
     " ", "exprString"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"\t\t", "\n", 
  RowBox[{
   RowBox[{
   "operatorStringsToSymbolStrings", " ", "@", " ", "exprString_String"}], 
   " ", ":=", "\[IndentingNewLine]", 
   RowBox[{
   "deletePossibleLeadingAndTrailingUnderBrackets", " ", "@", 
    "\[IndentingNewLine]", 
    RowBox[{"deleteMultipleUnderBrackets", " ", "@", "\[IndentingNewLine]", 
     RowBox[{
     "convertNonLettersToFullNames", " ", "@", "\[IndentingNewLine]", 
      RowBox[{"StringReplace", "[", "\t\t", 
       RowBox[{"exprString", ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "\"\< \>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Space\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<->\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Rule\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<:>\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]RuleDelayed\[UnderBracket]\>\""}], ",", 
          "\t\t\t\t", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<:=\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]SetDelayed\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<!\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Exclamation\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<\\\"\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]DoubleQuote\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<#\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Hash\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<$\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Dollar\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<%\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Percent\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<&&\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]And\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<&\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Ampersand\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<'\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Quote\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<(\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]LeftParenthesis\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<)\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]RightParenthesis\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<*\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Times\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<+\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Plus\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<,\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Comma\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<-\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Dash\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<.\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Dot\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\</.\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Replace\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<//.\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]ReplaceRepeated\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<//\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]BackAt\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\</;\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Condition\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\</\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Slash\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<:\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Colon\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<;\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Semicolon\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<<=\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]LessEqual\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<<\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Less\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<===\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]SameQ\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<==\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Equal\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<=\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Set\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<>=\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]GreaterEqual\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<>\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Greater\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<?\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Question\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<@@\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Apply\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\</@\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Map\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<@\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]At\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<[\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]LeftBracket\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<]\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]RightBracket\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<\\\\\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Backslash\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<^\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Wedge\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<_\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Underscore\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<`\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Backquote\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<{\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]LeftBrace\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<||\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Or\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<|\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]VerticalBar\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<}\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]RightBrace\[UnderBracket]\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<~\>\"", " ", "\[Rule]", " ", 
           "\"\<\[UnderBracket]Tilde\[UnderBracket]\>\""}]}], "}"}]}], 
       "]"}]}]}]}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertBoxesToStringRepresentation", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertBoxesToStringRepresentation", "[", "boxes_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"operatorStringsToSymbolStrings", " ", "@", " ", 
   RowBox[{"StringJoin", " ", "@", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", "boxes", "}"}], " ", "//.", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AdjustmentBox", "[", 
          RowBox[{"a_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "a"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ButtonBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ErrorBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FormBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FractionBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Over\[UnderBracket]\>\"", ",", "b"}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FrameBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GridBox", "[", 
          RowBox[{"args_", ",", "___"}], "]"}], " ", "\[Rule]", " ", 
         RowBox[{"{", "args", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InterpretationBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RadicalBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Root\[UnderBracket]\>\"", ",", "b"}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RowBox", "[", "a_", "]"}], " ", "\[Rule]", " ", "a"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SqrtBox", "[", 
          RowBox[{"a_", ",", "___"}], "]"}], "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<Sqrt\[UnderBracket]\>\"", ",", "a"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"StyleBox", "[", 
          RowBox[{"a_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "a"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SubscriptBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "___"}], "]"}], "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Subscript\[UnderBracket]\>\"", ",", 
           "b"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SuperscriptBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "___"}], "]"}], "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Superscript\[UnderBracket]\>\"", ",", 
           "b"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SubsuperscriptBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "c_", ",", "___"}], "]"}], " ", 
         "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Subsuperscript\[UnderBracket]\>\"", 
           ",", "b", ",", "\"\<\[UnderBracket]and\[UnderBracket]\>\"", ",", 
           "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TagBox", "[", 
          RowBox[{"b_", ",", "___"}], "]"}], " ", "\[Rule]", " ", "b"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TemplateBox", "[", 
          RowBox[{
           RowBox[{"{", "b__", "}"}], ",", "tag_"}], "]"}], " ", 
         "\[RuleDelayed]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{
             RowBox[{"{", "b", "}"}], ",", 
             "\"\<\[UnderBracket]TemplateArg\[UnderBracket]\>\""}], "]"}], 
           ",", "\"\<\[UnderBracket]Template\[UnderBracket]\>\"", ",", 
           "tag"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"UnderscriptBox", "[", 
          RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Underscript\[UnderBracket]\>\"", ",", 
           "b"}], "}"}]}], ",", "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{"OverscriptBox", "[", 
          RowBox[{"a_", ",", "b_"}], "]"}], " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Overscript\[UnderBracket]\>\"", ",", 
           "b"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"UnderoverscriptBox", "[", 
          RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "a", ",", "\"\<\[UnderBracket]Underoverscript\[UnderBracket]\>\"", 
           ",", "b", ",", "\"\<\[UnderBracket]and\[UnderBracket]\>\"", ",", 
           "c"}], "}"}]}]}], "}"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolize Implementation", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Setups before the Symbolize", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Transform from the legacy syntax for symbolizations to the new syntax.\
\>", "NumberedSubsubsubtitle"],

Cell["\<\
We transform all of the contents of the Symbolize statement from the old \
legacy syntaxes if they are present to the new syntax which allows us to use \
only the new syntax in the code which implements the Symbolize statements.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TransformedLegacySymbolizeSyntax", " ", "=", " ", "False"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Symbolize", "[", "anyContents___", "]"}], "/;", 
    RowBox[{"!", "$TransformedLegacySymbolizeSyntax"}]}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$TransformedLegacySymbolizeSyntax", "=", "True"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Symbolize", " ", "@", " ", 
      RowBox[{"TransformLegacySyntax", " ", "@", " ", "anyContents"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Symbolize for parsing and valid options.", "NumberedSubsubtitle",
 Background->GrayLevel[1]],

Cell[TextData[{
 "The condition /; True attached to some of the rules is to circumvent rule \
reordering bugs in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.452603259621541*^9, 3.452603260634548*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Handle ",
 StyleBox["RemoveSymbolize", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveSymbolize", "[", 
   RowBox[{"symbolizeBoxes_", ",", " ", "opts___"}], "]"}], " ", ":=", 
  RowBox[{"Symbolize", "[", 
   RowBox[{"symbolizeBoxes", ",", 
    RowBox[{"Action", "->", "RemoveNotationRules"}], ",", " ", "opts"}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Symbolize", "MR"],
 " statement must be created from the Palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badSymbolize", ":", " ", 
   RowBox[{"Symbolize", "[", 
    RowBox[{"symbolizeBoxes_", ",", "___"}], "]"}]}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Symbolize", "::", "noboxtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "symbolizeBoxes"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badSymbolize"}]}], "]"}], ";", " ",
      "$Failed"}], ")"}], "/;", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "symbolizeBoxes"}], " ", "=!=", " ", 
    "ParsedBoxWrapper"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "noboxtag"}], " ", "=", " ", 
   "\"\<The Symbolize boxes `1` do not have an embedded TemplateBox with tag \
NotationTemplateTag. The Symbolize statement `2` may not have been entered \
using the palette, or the embedded TemplateBox may have been deleted. The \
embedded TemplateBox ensures correct parsing and retention of proper styling \
and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The other arguments of ",
 StyleBox["Symbolize", "MR"],
 " must be options."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badSymbolize", " ", ":", 
   RowBox[{"Symbolize", "[", 
    RowBox[{"symbolizeBoxes_", ",", "___", ",", "notOption_", ",", "___"}], 
    "]"}]}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Symbolize", "::", "nonopt"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
       " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badSymbolize"}]}], " ", "]"}], ";",
      "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"OptionQ", " ", "@", " ", "notOption"}]}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check that the ",
 StyleBox["Action", "MR"],
 " option is valid."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The value of option ",
 StyleBox["Action", "MR"],
 " should be valid."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badSymbolize", " ", ":", 
   RowBox[{"Symbolize", "[", 
    RowBox[{"symbolizeBoxes_", ",", " ", "___", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
      RowBox[{"Action", ",", " ", "badValue_"}], "]"}], ",", "___"}], "]"}]}],
   " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Symbolize", "::", "optcrp"}], ",", " ", "Action", ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badValue"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badSymbolize"}]}], "]"}], ";", 
     "$Failed"}], ")"}], "/;", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"MatchQ", "[", " ", 
     RowBox[{"badValue", ",", 
      RowBox[{
      "CreateNotationRules", " ", "|", " ", "RemoveNotationRules", " ", "|", 
       " ", "PrintNotationRules"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "optcrp"}], " ", "=", " ", 
   "\"\<Value of option '`1` \[Rule] `2`\\' in `3` should be \
CreateNotationRules, RemoveNotationRules or PrintNotationRules.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check not wrapped by ",
 StyleBox["RowBox", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The boxes to be symbolized must also not have a head of ",
 StyleBox["RowBox", "MR"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"badSymbolize", " ", ":", 
    RowBox[{"Symbolize", "[", " ", 
     RowBox[{
      RowBox[{"ParsedBoxWrapper", " ", "[", " ", 
       RowBox[{
        RowBox[{"RowBox", " ", "@", " ", "boxes___"}], ",", "___"}], "]"}], 
      ",", "opts___"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Symbolize", "::", "rowboxh"}], ",", " ", 
        RowBox[{"identityForm", " ", "@@", " ", 
         RowBox[{"{", 
          RowBox[{"RowBox", " ", "@", " ", "boxes"}], "}"}]}], ",", " ", 
        RowBox[{"HoldForm", " ", "@", " ", "badSymbolize"}]}], "]"}], ";", 
      " ", "$Failed"}], ")"}], "/;", " ", "True"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "rowboxh"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<The box structure '`1`' in `2` is not of the right form. Structures \
to be symbolized cannot have a RowBox as their head. Examine the full box \
structures for possible unintended groupings.\>\""}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell["Options have all been checked and are o.k.", "NumberedSubsubsubtitle"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check form of the patterns in the Symbolize", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["boxes too general", "NumberedSubsubsubtitle"],

Cell["The boxes to be symbolized must not be too general.", "Text",
 CellChangeTimes->{3.452603302698876*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"badSymbolize", " ", ":", 
    RowBox[{"Symbolize", "[", " ", 
     RowBox[{
      RowBox[{"ParsedBoxWrapper", " ", "[", 
       RowBox[{"boxes_", ",", "___"}], "]"}], ",", "opts___"}], "]"}]}], ":=",
    " ", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"patternedBoxes", " ", "=", " ", 
       RowBox[{
       "boxedStringPatternsToPatterns", " ", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cleanBoxes", " ", "@", " ", "boxes"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"WorkingForm", " ", "\[Rule]", " ", "WorkingForm"}], " ", "/.",
            " ", 
           RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
          RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}], " ", 
        "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Symbolize", "::", "ptogen"}], ",", "patternedBoxes", ",", 
          RowBox[{"identityForm", " ", "@", " ", "boxes"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "badSymbolize"}]}], "]"}], ";", 
        "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
      RowBox[{"patternToGeneralQ", " ", "@", " ", "patternedBoxes"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "ptogen"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<The pattern `1` appearing in the symbolize statement Symbolize[`2`] \
is too general to be used.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Symbolize", "MR"],
 " is o.k."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The ",
 StyleBox["Symbolize", "MR"],
 " has been correctly parsed and checked. Now create the symbolization."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", " ", 
   RowBox[{"symbolizeBoxes_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"externalBoxes", " ", "=", " ", 
      RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "symbolizeBoxes"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"createSymbolize", "[", 
      RowBox[{"externalBoxes", ",", " ", "opts"}], "]"}], ";"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unknown error", "NumberedSubsubsubtitle"],

Cell["\<\
Have encountered an unknown error in symbolization parsing... Report it!\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Symbolize", "[", "all___", "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Symbolize", "::", "unknpars"}], ",", " ", 
        RowBox[{"identityForm", " ", "@@", " ", 
         RowBox[{"{", 
          RowBox[{"{", "all", "}"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CellPrint", "[", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"BoxData", "[", " ", 
          RowBox[{"colorizeStructuralBoxes", "[", " ", 
           RowBox[{"all", " ", ",", " ", "1"}], "]"}], "]"}], ",", 
         "\"\<Output\>\""}], "]"}], "]"}], ";", "$Failed"}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "unknpars"}], " ", "=", " ", 
   "\"\<Unknown error occurred in parsing the Symbolize definition `1`. \
Please report this to jasonh@wri.com, Please carefully examine the following \
box structures for spurious characters, weird groupings etc.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of Symbolize containing patterns.", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["createSymbolize", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["createSymbolize", "MR"],
 " handles the symbolization of boxes containing a pattern."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createSymbolize", " ", "[", 
   RowBox[{"boxes_", " ", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ActionOpt", "=", " ", 
       RowBox[{
        RowBox[{"Action", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"instantiationContext", " ", "=", " ", 
       RowBox[{"Context", "[", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"patternedBoxes", " ", "=", " ", 
        RowBox[{"boxedStringPatternsToPatterns", " ", "[", " ", 
         RowBox[{
          RowBox[{"cleanBoxes", " ", "@", " ", "boxes"}], ",", " ", 
          RowBox[{"WorkingForm", " ", "\[Rule]", " ", "WorkingFormOpt"}]}], 
         " ", "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"patternedBoxes", ",", 
           RowBox[{
           "Pattern", "|", "Blank", "|", "BlankNull", "|", "BlankSequence", 
            "|", "BlankNullSequence"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"createSymbolizeSingleInstance", " ", "[", " ", 
          RowBox[{"boxes", ",", "instantiationContext", ",", " ", "opts"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"executeSymbolizeAction", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myHold", " ", "@", " ", 
            RowBox[{"NotationMakeExpression", "[", 
             RowBox[{
              RowBox[{"matchedBoxes", " ", ":", " ", "patternedBoxes"}], ",", 
              "WorkingFormOpt"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"myHold", " ", "[", 
            RowBox[{
             RowBox[{"createSymbolizeSingleInstance", "[", " ", 
              RowBox[{
              "matchedBoxes", ",", "instantiationContext", ",", "opts"}], 
              "]"}], ";", "\[IndentingNewLine]", " ", 
             RowBox[{"MakeExpression", "[", 
              RowBox[{"matchedBoxes", ",", "WorkingFormOpt"}], "]"}]}], " ", 
            "]"}], ",", "\[IndentingNewLine]", "WorkingFormOpt", ",", " ", 
           "instantiationContext", ",", "ActionOpt"}], "]"}]}], "]"}], 
       ";"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["executeSymbolizeAction", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["executeSymbolizeAction", "MR"],
 " enters, removes or prints the symbolization statement depending on \
action."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeSymbolizeAction", "[", " ", 
   RowBox[{
   "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",", 
    " ", "instantiationContext_", ",", "CreateNotationRules"}], "]"}], ":=", 
  " ", 
  RowBox[{"releaseMyHold", "[", " ", 
   RowBox[{
    RowBox[{"external", " ", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], ":=", 
    " ", "internal"}], " ", "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"executeSymbolizeAction", "[", " ", 
    RowBox[{
    "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",",
      "instantiationContext_", ",", " ", "RemoveNotationRules"}], "]"}], ":=",
    " ", 
   RowBox[{"releaseMyHold", "[", " ", 
    RowBox[{
     RowBox[{"external", "/;", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], " ", 
     "=."}], " ", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"executeSymbolizeAction", "[", " ", 
    RowBox[{
    "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",",
      "instantiationContext_", ",", "PrintNotationRules"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"releaseMyHold", " ", "@", " ", 
    RowBox[{"CellPrint", " ", "@", " ", 
     RowBox[{"Cell", "[", " ", 
      RowBox[{
       RowBox[{"BoxData", " ", "@", " ", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"external", "/;", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], 
           " ", ":=", " ", "internal"}], ",", " ", "StandardForm"}], "]"}]}], 
       ",", "\"\<Output\>\"", ",", 
       RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of Symbolize without patterns.", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["createSymbolizeSingleInstance", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["createSymbolizeSingleInstance", "MR"],
 " sets up ",
 StyleBox["MakeExpression", "MR"],
 " & ",
 StyleBox["MakeBoxes", "MR"],
 " rules for a given symbol without patterns in it."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createSymbolizeSingleInstance", " ", "[", " ", 
   RowBox[{"boxes_", ",", " ", "instantiationContext_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SymbolizeRootNameOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"SymbolizeRootName", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ActionOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"Action", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Symbolize"}]}]}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newSymbolString", " ", "=", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SymbolizeRootNameOpt", " ", "===", " ", "\"\<\>\""}], ",", 
          
          RowBox[{"convertBoxesToStringRepresentation", " ", "@", " ", 
           RowBox[{"cleanBoxes", " ", "@", " ", "boxes"}]}], ",", " ", 
          "SymbolizeRootNameOpt"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"executeSymbolizeSingleInstanceAction", "[", " ", 
       RowBox[{
       "boxes", ",", " ", "newSymbolString", ",", " ", "WorkingFormOpt", ",", 
        " ", "instantiationContext", ",", "ActionOpt"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["executeSymbolizeSingleInstanceAction", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["executeSymbolizeSingleInstanceAction", "MR"],
 " enters, removes or prints the single symbolization instance depending on \
action."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeSymbolizeSingleInstanceAction", "[", 
   RowBox[{
   "boxes_", ",", " ", "newSymbolString_", " ", ",", " ", "WorkingFormOpt_", 
    ",", "instantiationContext_", ",", " ", "CreateNotationRules"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Names", "[", "newSymbolString", "]"}], " ", "\[NotEqual]", 
       " ", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Message", "[", 
       RowBox[{"Symbolize", "::", "bsymbexs"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newSymbol", " ", "=", 
        RowBox[{"Symbol", " ", "@", " ", "newSymbolString"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"releaseMyHold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"NotationMakeExpression", "[", 
           RowBox[{
            RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}], ",", 
            "WorkingFormOpt"}], "]"}], "/;", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], ":=",
          " ", 
         RowBox[{"HoldComplete", " ", "@", " ", "newSymbol"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"NotationMakeBoxes", "[", 
           RowBox[{"newSymbol", ",", "WorkingFormOpt"}], "]"}], "/;", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], 
         " ", ":=", " ", "boxes"}], ";", "\[IndentingNewLine]", 
        RowBox[{"HoldComplete", " ", "@", " ", "newSymbol"}]}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeSymbolizeSingleInstanceAction", "[", " ", 
   RowBox[{
   "boxes_", ",", " ", "newSymbolString_", " ", ",", " ", "WorkingFormOpt_", 
    ",", " ", "instantiationContext_", ",", "RemoveNotationRules"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"silentEvaluate", " ", "@", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"symbol", " ", "=", " ", 
       RowBox[{"myHold", " ", "@@", " ", 
        RowBox[{"MakeExpression", "[", 
         RowBox[{"boxes", ",", "WorkingFormOpt"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"releaseMyHold", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NotationMakeExpression", "[", 
          RowBox[{
           RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}], ",", 
           "WorkingFormOpt"}], "]"}], "/;", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], " ",
         "=."}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NotationMakeBoxes", "[", 
         RowBox[{"symbol", ",", "WorkingFormOpt"}], "]"}], " ", "=."}]}], " ",
       "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeSymbolizeSingleInstanceAction", "[", " ", 
   RowBox[{
   "boxes_", ",", " ", "newSymbolString_", " ", ",", " ", "WorkingFormOpt_", 
    ",", "instantiationContext_", ",", "PrintNotationRules"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"newSymbol", " ", "=", 
       RowBox[{"Symbol", " ", "@", " ", "newSymbolString"}]}], ",", 
      RowBox[{"stripedBoxes", " ", "=", " ", 
       RowBox[{"stripStylingBoxes", " ", "@", " ", "boxes"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"releaseMyHold", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CellPrint", " ", "@", "\[IndentingNewLine]", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"BoxData", " ", "@", " ", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"NotationMakeExpression", "[", 
               RowBox[{"stripedBoxes", ",", "WorkingFormOpt"}], "]"}], "/;", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}],
              ":=", " ", 
             RowBox[{"HoldComplete", " ", "@", " ", "newSymbol"}]}], ",", " ",
             "StandardForm"}], "]"}]}], ",", "\"\<Output\>\"", ",", 
         RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CellPrint", " ", "@", " ", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"BoxData", " ", "@", " ", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"NotationMakeBoxes", "[", 
               RowBox[{"newSymbol", ",", "WorkingFormOpt"}], "]"}], "/;", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}],
              " ", ":=", " ", "boxes"}], ",", " ", "StandardForm"}], "]"}]}], 
         ",", "\"\<Output\>\"", ",", " ", 
         RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}]}], ";"}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "bsymbexs"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Warning: The box structure attempting to be symbolized has a similar \
or identical symbol already defined, possibly overriding previously \
symbolized box structure.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Modify ",
 StyleBox["Remove", "MR"],
 " for symbolized symbols."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "It was nice to be able to modify ",
 StyleBox["Remove", "MR"],
 " to take into account the removal of ",
 StyleBox["MakeExpression", "MR"],
 " & ",
 StyleBox["MakeBoxes", "MR"],
 " rules for a symbolized symbol, but in v 9.0.0 and later ",
 StyleBox["Remove", "MR"],
 " is ",
 StyleBox["Locked", "MR"],
 " so it is not possible to attach behaviors to ",
 StyleBox["Remove", "MR"],
 "."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolize Error Handling Catch All", "NumberedSubsubtitle"],

Cell[TextData[{
 "Have encountered an unknown error in ",
 StyleBox["Symbolize", "MR"],
 " checking... Report it!"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"createSymbolize", "[", 
    RowBox[{"all_", ",", "other___"}], "]"}], " ", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Symbolize", "::", "unknproc"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CellPrint", "[", 
      RowBox[{"Cell", "[", 
       RowBox[{
        RowBox[{"BoxData", "[", " ", 
         RowBox[{"colorizeStructuralBoxes", "[", " ", 
          RowBox[{"all", " ", ",", " ", "1"}], "]"}], "]"}], ",", 
        "\"\<Output\>\""}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"HoldComplete", " ", "@", " ", 
      RowBox[{"Symbol", " ", "@", " ", "\"\<$Failed\>\""}]}]}], ")"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Symbolize", "::", "unknproc"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Unknown error occurred in processing the Symbolize definition.  \
\\t\\tPlease report this to jasonh@wri.com, Please carefully examine the \
following box structures for spurious characters, weird groupings etc.\>\""}],
   ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["InfixNotation Implementation", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Setups before the InfixNotation", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Transform from the legacy syntax for infix notations to the new syntax.\
\>", "NumberedSubsubsubtitle"],

Cell["\<\
We transform all of the contents of the InfixNotation statement from the old \
legacy syntaxes if they are present to the new syntax which allows us to use \
only the new syntax in the code which implements the InfixNotation statements.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TransformedLegacyInfixNotationSyntax", " ", "=", " ", "False"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InfixNotation", "[", "anyContents___", "]"}], "/;", 
    RowBox[{"!", "$TransformedLegacyInfixNotationSyntax"}]}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$TransformedLegacyInfixNotationSyntax", "=", "True"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"InfixNotation", " ", "@", " ", 
      RowBox[{"TransformLegacySyntax", " ", "@", " ", "anyContents"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check InfixNotation for parsing and valid options.", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Handle ",
 StyleBox["RemoveInfixNotation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveInfixNotation", "[", 
   RowBox[{"infixopBoxes_", ",", "prefixHead_", ",", " ", "opts___"}], "]"}], 
  " ", ":=", 
  RowBox[{"InfixNotation", "[", 
   RowBox[{"infixopBoxes", ",", "prefixHead", ",", 
    RowBox[{"Action", "->", "RemoveNotationRules"}], ",", " ", "opts"}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["InfixNotation", "MR"],
 " statement must be created from the palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInfixNotation", " ", ":", " ", 
   RowBox[{"InfixNotation", "[", 
    RowBox[{"infixopBoxes_", ",", "___"}], "]"}]}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"InfixNotation", "::", "noboxtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "infixopBoxes"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInfixNotation"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "infixopBoxes"}], " ", "=!=", " ", 
    "ParsedBoxWrapper"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InfixNotation", "::", "noboxtag"}], " ", "=", " ", 
   "\"\<The InfixNotation boxes `1` do not have an embedded TemplateBox with \
tag NotationTemplateTag. The InfixNotation statement `2` may not have been \
entered using the palette, or the embedded TemplateBox may have been deleted. \
The embedded TemplateBox ensures correct parsing and retention of proper \
styling and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The other arguments of ",
 StyleBox["InfixNotation", "MR"],
 " must be options."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInfixNotation", " ", ":", " ", 
   RowBox[{"InfixNotation", "[", 
    RowBox[{
    "infixop_", ",", "prefixHead_", ",", " ", "___", ",", "notOption_", ",", 
     "___"}], "]"}]}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"InfixNotation", "::", "nonopt"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
       " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInfixNotation"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"OptionQ", " ", "@", " ", "notOption"}]}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check that the ",
 StyleBox["Action", "MR"],
 " option is valid."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The value of option ",
 StyleBox["Action", "MR"],
 " should be valid."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInfixNotation", " ", ":", " ", 
   RowBox[{"InfixNotation", "[", 
    RowBox[{"infixop_", ",", "prefixHead_", ",", "___", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
      RowBox[{"Action", ",", " ", "badValue_"}], "]"}], ",", "___"}], "]"}]}],
   " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"InfixNotation", "::", "optcrp"}], ",", " ", "Action", ",", 
       " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badValue"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInfixNotation"}]}], "]"}], ";", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"MatchQ", "[", " ", 
     RowBox[{"badValue", ",", 
      RowBox[{
      "CreateNotationRules", " ", "|", " ", "RemoveNotationRules", " ", "|", 
       " ", "PrintNotationRules"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InfixNotation", "::", "optcrp"}], " ", "=", " ", 
   "\"\<Value of option '`1` \[Rule] `2`' in `3` should be \
CreateNotationRules, RemoveNotationRules or PrintNotationRules.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check not wrapped by ",
 StyleBox["RowBox", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The boxes to be ",
 StyleBox["InfixNotation", "MR"],
 " must also not have a head of ",
 StyleBox["RowBox", "MR"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"badInfixNotation", ":", " ", 
    RowBox[{"InfixNotation", "[", " ", 
     RowBox[{
      RowBox[{"ParsedBoxWrapper", " ", "[", " ", 
       RowBox[{
        RowBox[{"RowBox", " ", "@", " ", "boxes___"}], ",", "___"}], "]"}], 
      ",", "prefixHead_", ",", "opts___"}], "]"}]}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"InfixNotation", "::", "rowboxh"}], ",", " ", 
        RowBox[{"identityForm", " ", "@@", " ", 
         RowBox[{"{", 
          RowBox[{"RowBox", " ", "@", " ", "boxes"}], "}"}]}], ",", " ", 
        RowBox[{"HoldForm", " ", "@", " ", "badInfixNotation"}]}], "]"}], ";",
       " ", "$Failed"}], ")"}], "/;", "True"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfixNotation", "::", "rowboxh"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<The InfixNotation box structure '`1`' is not of the right form. \
Structures to be used as an infix operator cannot have a RowBox as their \
head. Examine the full box structures of `2` for possible unintended \
groupings.\>\""}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The prefixHead argument to ",
 StyleBox["InfixNotation", "MR"],
 " must be a symbol."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"badInfixNotation", ":", 
    RowBox[{"InfixNotation", "[", " ", 
     RowBox[{
      RowBox[{"ParsedBoxWrapper", " ", "[", 
       RowBox[{"infixopBoxes_", ",", "___"}], "]"}], ",", "badPrefixHead_", 
      ",", "opts___"}], "]"}]}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"InfixNotation", "::", "bprfxh"}], ",", " ", 
        RowBox[{"HoldForm", " ", "@", " ", "badPrefixHead"}], ",", " ", 
        RowBox[{"identityForm", " ", "@@", " ", 
         RowBox[{"{", "infixopBoxes", "}"}]}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "badInfixNotation"}]}], "]"}], ";",
       " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Head", " ", "@", " ", "badPrefixHead"}], " ", "=!=", " ", 
     "Symbol"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfixNotation", "::", "bprfxh"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<In `3`, the prefix head '`1`' corresponding to the infix operator \
'`2`' is not a symbol.\>\""}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["InfixNotation", "MR"],
 " is ok. Create the ",
 StyleBox["InfixNotation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "The ",
 StyleBox["InfixNotation", "MR"],
 " has been correctly parsed and checked. Now create the ",
 StyleBox["InfixNotation", "MR"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InfixNotation", "[", " ", 
   RowBox[{"infixop_", ",", "prefixHead_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"infixopBoxes", " ", "=", " ", 
      RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "infixop"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"createInfixNotation", "[", 
      RowBox[{"infixopBoxes", ",", "prefixHead", ",", " ", "opts"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Have encountered an unknown error in ",
 StyleBox["InfixNotation", "MR"],
 " parsing... Report it!"
}], "NumberedSubsubsubtitle"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InfixNotation", "[", 
     RowBox[{"all_", ",", "other___"}], "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"InfixNotation", "::", "unknpars"}], ",", " ", 
        RowBox[{"identityForm", " ", "@@", " ", 
         RowBox[{"{", "all", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"CellPrint", "[", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"BoxData", "[", " ", 
          RowBox[{"colorizeStructuralBoxes", "[", " ", 
           RowBox[{"all", " ", ",", " ", "1"}], "]"}], "]"}], ",", 
         "\"\<Output\>\""}], "]"}], "]"}], ";", "$Failed"}], ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfixNotation", "::", "unknpars"}], " ", "=", " ", 
   "\"\<Unknown error occurred in parsing the InfixNotation definition `1`. \
Please report this to jasonh@wri.com, Please carefully examine the following \
box structures for spurious characters weird groupings etc.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"InFixNotation", "[", " ", 
    RowBox[{"infixOp", ",", "prefixOp", ",", "precedence", ",", " ", "opts"}],
     " ", "]"}], TraditionalForm]]]
}], "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["createInfixNotation", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["createInfixNotation", "MR"],
 " creates the ",
 StyleBox["MakeExpression", "MR"],
 " and ",
 StyleBox["MakeBoxes", "MR"],
 " rules that create the infix notation."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createInfixNotation", "[", 
   RowBox[{"infixop_", ",", "prefixHead_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "InfixNotation"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ActionOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"Action", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "InfixNotation"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"instantiationContext", " ", "=", " ", 
       RowBox[{"Context", "[", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"executeInfixNotationAction", "[", 
     RowBox[{"infixop", ",", "prefixHead", ",", " ", 
      RowBox[{"effectiveOperator", " ", "@", " ", "infixop"}], ",", " ", 
      "WorkingFormOpt", ",", "instantiationContext", ",", " ", "ActionOpt"}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["executeInfixNotationAction", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["executeInfixNotationAction", "MR"],
 " enters, removes or prints the ",
 StyleBox["InfixNotation", "MR"],
 " statement depending on the action."
}], "Text",
 CellChangeTimes->{{3.45260343507006*^9, 3.452603436130992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeInfixNotationAction", "[", 
   RowBox[{
   "infixop_", ",", "prefixHead_", ",", "groupingPrecedence_", " ", ",", " ", 
    "WorkingFormOpt_", ",", " ", "instantiationContext_", ",", 
    "CreateNotationRules"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"NotationMakeExpression", "[", 
       RowBox[{
        RowBox[{"RowBox", " ", "@", " ", "a_"}], ",", " ", "WorkingFormOpt"}],
        "]"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"a", ",", " ", "infixop"}], "]"}], "\[And]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}]}], " ",
      ":=", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MakeExpression", "[", 
       RowBox[{
        RowBox[{"parseFlatInfix", "[", 
         RowBox[{"prefixHead", ",", " ", "infixop", ",", " ", "a"}], "]"}], 
        ",", " ", "WorkingFormOpt"}], "]"}], "/;", 
      RowBox[{"appearsInfix", "[", 
       RowBox[{"infixop", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NotationMakeBoxes", "[", 
       RowBox[{
        RowBox[{"prefixHead", " ", "[", " ", 
         RowBox[{"arg1_", ",", "args__"}], "]"}], ",", "WorkingFormOpt"}], 
       "]"}], "/;", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RowBox", " ", "@", " ", 
        RowBox[{"Riffle", "[", 
         RowBox[{"#", ",", "infixop"}], "]"}]}], " ", "&"}], " ", "@", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Parenthesize", "[", 
          RowBox[{"#", ",", "WorkingFormOpt", ",", "groupingPrecedence"}], 
          "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"Unevaluated", " ", "/@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", 
          RowBox[{"{", 
           RowBox[{"arg1", ",", "args"}], "}"}]}]}]}], ")"}]}]}], ";"}], 
   ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeInfixNotationAction", "[", 
   RowBox[{
   "infixop_", ",", "prefixHead_", ",", "groupingPrecedence_", " ", ",", " ", 
    "WorkingFormOpt_", ",", " ", "instantiationContext_", ",", 
    "RemoveNotationRules"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"silentEvaluate", " ", "@", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"NotationMakeExpression", "[", 
        RowBox[{
         RowBox[{"RowBox", " ", "@", " ", "a_"}], ",", " ", 
         "WorkingFormOpt"}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"a", ",", " ", "infixop"}], "]"}], "\[And]", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}]}], 
      " ", "=."}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NotationMakeBoxes", "[", 
        RowBox[{
         RowBox[{"prefixHead", " ", "[", " ", 
          RowBox[{"arg1_", ",", "args__"}], "]"}], ",", "WorkingFormOpt"}], 
        "]"}], "/;", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], 
      "=."}], ";"}], ")"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"executeInfixNotationAction", "[", 
   RowBox[{
   "infixop_", ",", "prefixHead_", ",", "groupingPrecedence_", " ", ",", " ", 
    "WorkingFormOpt_", ",", "instantiationContext_", ",", " ", 
    "PrintNotationRules"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CellPrint", "[", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", "[", " ", 
        RowBox[{"MakeBoxes", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"NotationMakeExpression", "[", 
             RowBox[{
              RowBox[{"RowBox", " ", "@", " ", "a_"}], ",", " ", 
              "WorkingFormOpt"}], "]"}], " ", "/;", " ", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"a", ",", " ", "infixop"}], "]"}], "\[And]", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"$ContextPath", ",", "instantiationContext"}], 
              "]"}]}]}], " ", ":=", 
           RowBox[{
            RowBox[{"MakeExpression", "[", 
             RowBox[{
              RowBox[{"parseFlatInfix", "[", 
               RowBox[{"prefixHead", ",", " ", "infixop", ",", " ", "a"}], 
               "]"}], ",", " ", "WorkingFormOpt"}], "]"}], "/;", 
            RowBox[{"appearsInfix", "[", 
             RowBox[{"infixop", ",", "a"}], "]"}]}]}], ",", "StandardForm"}], 
         "]"}], "]"}], ",", "\"\<Output\>\"", ",", 
       RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"CellPrint", "[", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", "[", " ", 
        RowBox[{"MakeBoxes", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{"prefixHead", " ", "[", " ", 
               RowBox[{"arg1_", ",", "args__"}], "]"}], ",", 
              "WorkingFormOpt"}], "]"}], "/;", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"$ContextPath", ",", "instantiationContext"}], "]"}]}], ":=",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"RowBox", " ", "@", " ", 
              RowBox[{"Riffle", "[", 
               RowBox[{"#", ",", "infixop"}], "]"}]}], " ", "&"}], " ", "@", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Parenthesize", "[", 
                RowBox[{
                "#", ",", "WorkingFormOpt", ",", "groupingPrecedence"}], 
                "]"}], " ", "&"}], " ", "/@", " ", 
              RowBox[{"Unevaluated", " ", "/@", " ", 
               RowBox[{"Unevaluated", " ", "@", " ", 
                RowBox[{"{", 
                 RowBox[{"arg1", ",", "args"}], "}"}]}]}]}], ")"}]}]}], ",", 
          "StandardForm"}], "]"}], "]"}], ",", "\"\<Output\>\"", ",", 
       RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}], "]"}], ";"}], 
   ")"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["parseFlatInfix", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["parseFlatInfix", "MR"],
 " parses a chain of operands separated by the infix operator"
}], "Text"],

Cell["\<\
Note the following coding semi breaks the style of the rest of the notebook \
somewhat, but the algorithm needs to be this way due to speed.\
\>", "Text",
 CellChangeTimes->{3.452603462219269*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"parseFlatInfix", ",", "parseFlatInfixAux"}], "}"}], ",", 
    "HoldAll"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseFlatInfix", "[", 
   RowBox[{"prefixHead_", ",", " ", "infixop_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"l___", ",", 
      RowBox[{"first_", "?", "notWhiteSpaceQ"}], ",", 
      RowBox[{"___", "?", "whiteSpaceQ"}], ",", "infixop_", ",", 
      RowBox[{"___", "?", "whiteSpaceQ"}], ",", 
      RowBox[{"b_", "?", "notWhiteSpaceQ"}], ",", "rest___"}], "}"}]}], "]"}],
   ":=", 
  RowBox[{"parseFlatInfixAux", "[", 
   RowBox[{"prefixHead", ",", " ", "infixop", ",", " ", "first", ",", 
    RowBox[{"{", "l", "}"}], ",", 
    RowBox[{"{", " ", 
     RowBox[{"b", ",", "rest"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"parseFlatInfixAux", "[", 
    RowBox[{"prefixHead_", ",", " ", "infixop_", ",", " ", "first_", ",", 
     RowBox[{"{", "l___", "}"}], ",", 
     RowBox[{"{", " ", "rest___", "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parseOperator", ",", "parseArgument", ",", "returnAnswer"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetAttributes", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"parseOperator", ",", "parseArgument"}], "}"}], ",", 
        "HoldAll"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parseOperator", "[", 
        RowBox[{
         RowBox[{"_", "?", "whiteSpaceQ"}], ",", " ", "r___"}], "]"}], ":=", 
       RowBox[{"parseOperator", " ", "@", " ", "r"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parseOperator", "[", 
        RowBox[{"infixop", ",", " ", "r___"}], "]"}], ":=", 
       RowBox[{"parseArgument", " ", "@", " ", "r"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parseArgument", "[", 
        RowBox[{
         RowBox[{"_", "?", "whiteSpaceQ"}], ",", " ", "r___"}], "]"}], ":=", 
       RowBox[{"parseArgument", " ", "@", " ", "r"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parseArgument", "[", 
        RowBox[{"a_", ",", "r___"}], "]"}], ":=", 
       RowBox[{"Sequence", "[", " ", 
        RowBox[{"a", ",", 
         RowBox[{"parseOperator", " ", "@", " ", "r"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"returnAnswer", " ", "@", " ", 
        RowBox[{"{", 
         RowBox[{"parsed__", ",", 
          RowBox[{"parseOperator", " ", "@", " ", "r___"}]}], "}"}]}], " ", ":=",
        " ", 
       RowBox[{"returnFormatedOutput", "[", 
        RowBox[{"prefixHead", ",", " ", 
         RowBox[{"{", "l", "}"}], ",", " ", 
         RowBox[{"{", "parsed", "}"}], ",", 
         RowBox[{"{", "r", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"returnAnswer", " ", "@", " ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$RecursionLimit", "=", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"first", ",", 
           RowBox[{"parseArgument", " ", "@", " ", "rest"}]}], "}"}]}], 
        "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"appearsInfix", "[", 
   RowBox[{"op_", ",", 
    RowBox[{"{", 
     RowBox[{"___", ",", 
      RowBox[{"_", "?", "notWhiteSpaceQ"}], ",", 
      RowBox[{"___", "?", "whiteSpaceQ"}], ",", "op_", ",", 
      RowBox[{"___", "?", "whiteSpaceQ"}], ",", 
      RowBox[{"_", "?", "notWhiteSpaceQ"}], ",", "___"}], "}"}]}], "]"}], ":=",
   "True"}], "\n", 
 RowBox[{
  RowBox[{"appearsInfix", " ", "@", " ", "_"}], " ", ":=", 
  "False"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"returnFormatedOutput", "[", 
    RowBox[{"prefixHead_", ",", " ", 
     RowBox[{"{", "l___", "}"}], ",", " ", 
     RowBox[{"{", "parsed__", "}"}], ",", 
     RowBox[{"{", "r___", "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RowBox", " ", "@", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{"RowBox", " ", "@", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"ToString", " ", "@", " ", "prefixHead"}], ",", "\"\<[\>\"",
           ",", 
          RowBox[{"RowBox", " ", "@", " ", 
           RowBox[{"Riffle", "[", 
            RowBox[{
             RowBox[{"{", "parsed", "}"}], ",", "\"\<,\>\""}], "]"}]}], ",", 
          " ", "\"\<]\>\""}], "}"}]}], ",", " ", "r"}], "}"}]}], " ", "/;", 
    " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "r"}], "}"}], "=!=", 
     RowBox[{"{", "}"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"returnFormatedOutput", "[", 
   RowBox[{"prefixHead_", ",", " ", 
    RowBox[{"{", "l___", "}"}], ",", " ", 
    RowBox[{"{", "parsed__", "}"}], ",", 
    RowBox[{"{", "r___", "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RowBox", " ", "@", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ToString", " ", "@", " ", "prefixHead"}], ",", "\"\<[\>\"", 
      ",", 
      RowBox[{"RowBox", " ", "@", " ", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"{", "parsed", "}"}], ",", "\"\<,\>\""}], "]"}]}], ",", " ", 
      "\"\<]\>\""}], "}"}]}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "r"}], "}"}], "===", 
    RowBox[{"{", "}"}]}]}]}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AddInputAlias and ActiveInputAliases Implementation", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["\<\
Check AddInputAlias for parsing and valid options. (Legacy case of \
two-argument form.)\
\>", "NumberedSubsubtitle",
 CellChangeTimes->{3.45260347624352*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["AddInputAlias", "MR"],
 " statement must be created from the palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{"badBoxes_", ",", "___"}], "]"}]}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "noboxtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badBoxes"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"!", 
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", "badBoxes"}], ",", " ", 
      RowBox[{"ParsedBoxWrapper", "|", " ", "List", "|", "Rule"}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "noboxtag"}], " ", "=", " ", 
   "\"\<The InputAliasBoxes boxes `1` do not have an embedded TemplateBox \
with tag NotationTemplateTag. The AddInputAlias statement `2` may not have \
been entered using the palette, or the embedded TemplateBox may have been \
deleted. The embedded TemplateBox ensures correct parsing and retention of \
proper styling and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The second argument of ",
 StyleBox["AddInputAlias", "MR"],
 " must be a string."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{"fullBoxes_ParsedBoxWrapper", ",", "badShortForm_", ",", "___"}], 
    "]"}]}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "bshfrm"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badShortForm"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badShortForm"}], " ", "=!=", " ", 
    "String"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "bshfrm"}], " ", "=", " ", 
   "\"\<The short form `1` in the AddInputAlias statement `2` is not a \
string.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The third argument of ",
 StyleBox["AddInputAlias", "MR"],
 " must be a notebook object."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
    "fullBoxes_ParsedBoxWrapper", ",", "shortForm_String", ",", 
     "badNotebook_"}], "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "badrnb"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotebook"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badNotebook"}], " ", "=!=", " ", 
    "NotebookObject"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "badrnb"}], " ", "=", " ", 
   "\"\<The third argument of `2` is not a notebook object.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check AddInputAlias for parsing and valid options. (in rule form)\
\>", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["validAliasRule", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["validAliasRule", "MR"],
 " checks to see ",
 "whether",
 " the given argument is a valid input alias rule before processing."
}], "Text",
 CellChangeTimes->{3.452603508270544*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validAliasRule", " ", "@", " ", 
    RowBox[{
     RowBox[{"HoldPattern", "[", "Rule", "]"}], "[", 
     RowBox[{"_String", ",", "_ParsedBoxWrapper"}], "]"}]}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"validAliasRule", " ", "@", " ", "_"}], " ", ":=", 
  "False"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The first argument of ",
 StyleBox["AddInputAlias", "MR"],
 " (in rule form) must be a string."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
     RowBox[{"badShortForm_", "\[Rule]", "fullBoxes_ParsedBoxWrapper"}], ",", 
     "___"}], "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "bshfrm"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badShortForm"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badShortForm"}], " ", "=!=", " ", 
    "String"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "bshfrm"}], " ", "=", " ", 
   "\"\<The short form `1` in the AddInputAlias statement `2` is not a \
string.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["AddInputAlias", "MR"],
 " statement (in rule form) must be created from the palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
     RowBox[{"_", "\[Rule]", "badBoxes_"}], ",", "___"}], "]"}]}], " ", ":=", 
  " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "noboxtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badBoxes"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badBoxes"}], "=!=", " ", 
    "ParsedBoxWrapper"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "noboxtag"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<The InputAliasBoxes boxes `1` do not have an embedded TemplateBox \
with tag NotationTemplateTag. The AddInputAlias statement `2` may not have \
been entered using the palette, or the embedded TemplateBox may have been \
deleted. The embedded TemplateBox ensures correct parsing and retention of \
proper styling and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The second argument of ",
 StyleBox["AddInputAlias", "MR"],
 " must be a notebook object or $FrontEnd."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
     RowBox[{"_", "?", "validAliasRule"}], ",", "badNotebook_"}], "]"}]}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "badnb"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotebook"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", "badNotebook"}], " ", "=!=", " ", 
      "NotebookObject"}], ")"}], "\[And]", " ", 
    RowBox[{"badNotebook", " ", "=!=", "System`$FrontEnd"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "badnb"}], " ", "=", " ", 
   "\"\<The second argument of `2` is not a notebook object.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check AddInputAlias for parsing and valid options. (in lists-of-rules form)\
\>", "NumberedSubsubtitle",
 CellChangeTimes->{{3.452603556174637*^9, 3.452603559899688*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["AddInputAlias", "MR"],
 " statement with lists must have a non-empty list of aliases."
}], "NumberedSubsubsubtitle",
 CellChangeTimes->{3.4526035680045967`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAliases", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "___"}], "]"}]}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"AddInputAlias", "::", "emptyals"}], ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "badInputAliases"}]}], "]"}], ";", 
    " ", "$Failed"}], ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "emptyals"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<The input aliases list in `1` is empty. It must contain at least one \
valid input alias.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["AddInputAlias", "MR"],
 " statement with lists must be created from the palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAliases", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{"badBoxesList_List", ",", "___"}], "]"}]}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "noboxtgl"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badBoxesList"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAliases"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"silentEvaluate", " ", "@", " ", 
     RowBox[{"Union", "[", 
      RowBox[{"Head", " ", "/@", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "&"}], ")"}], " ", "/@", " ", "badBoxesList"}]}], "]"}]}], " ", "=!=", 
    RowBox[{"{", "ParsedBoxWrapper", "}"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "noboxtgl"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<The InputAliasBoxes boxes list `1` contains a rule which does not \
have an embedded TemplateBox with tag NotationTemplateTag. The AddInputAlias \
statement `2` may not have been entered using the palette, or the embedded \
TemplateBox may have been deleted. The embedded TemplateBox ensures correct \
parsing and retention of proper styling and grouping information.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The first arguments in the list of rules of ",
 StyleBox["AddInputAlias", "MR"],
 " statement with lists must be a string."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAliases", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{"badShortFormList_List", ",", "___"}], "]"}]}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "bshfrml"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAliases"}]}], "]"}], ";", 
     " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"silentEvaluate", " ", "@", " ", 
     RowBox[{"Union", "[", 
      RowBox[{"Head", " ", "/@", " ", 
       RowBox[{"First", " ", "/@", " ", "badShortFormList"}]}], "]"}]}], " ", 
    "=!=", 
    RowBox[{"{", "String", "}"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "bshfrml"}], " ", "=", " ", 
   "\"\<One of the short forms in the AddInputAlias `1` statement is not a \
string.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The second argument of ",
 StyleBox["AddInputAlias", "MR"],
 " must be a notebook object or $FrontEnd."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badInputAlias", " ", ":", " ", 
   RowBox[{"AddInputAlias", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"__", "?", "validAliasRule"}], "}"}], ",", "badNotebook_"}], 
    "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"AddInputAlias", "::", "badnb"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotebook"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badInputAlias"}]}], "]"}], ";", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", "badNotebook"}], " ", "=!=", " ", 
      "NotebookObject"}], ")"}], "\[And]", " ", 
    RowBox[{"badNotebook", " ", "=!=", "System`$FrontEnd"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddInputAlias", "::", "badnb"}], " ", "=", " ", 
   "\"\<The second argument of `2` is not a notebook object.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["AddInputAlias", "MR"],
 " expects 1, 2, or 3 arguments."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"AddInputAlias", "[", "___", "]"}]}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"heldLength", " ", "@", " ", "error"}]}], "}"}], ",", " ", 
     RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", " ", ">", " ", "num"}], " ", "\[Or]", " ", 
         RowBox[{"num", " ", ">", " ", "3"}]}], ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"AddInputAlias", "::", "argb"}], ",", 
          RowBox[{"HoldForm", " ", "@", " ", "AddInputAlias"}], ",", "num", 
          ",", "1", ",", " ", "3"}], "]"}], ",", "\[IndentingNewLine]", 
        "True", ",", " ", "False"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition of ",
 Cell[BoxData[
  FormBox["AddInputAlias", TraditionalForm]]]
}], "NumberedSubsubtitle"],

Cell[TextData[{
 "The ",
 StyleBox["AddInputAlias", "MR"],
 " has been correctly parsed and checked. Now add the alias(es) to the \
notebook. Basically just get the current aliases and add new one(s) to this \
list."
}], "Text"],

Cell[CellGroupData[{

Cell["Handles adding a list of rule aliases (much faster.)", \
"NumberedSubsubsubtitle"],

Cell["\<\
The following handles adding a list of rule aliases at one time (It is much \
faster since communication with the front end is very slow.)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddInputAlias", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"aliases__Rule", "?", "validAliasRule"}], "}"}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"notebook_:", 
      RowBox[{"InputNotebook", "[", "]"}]}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"stripedAliases", " ", "=", " ", 
       RowBox[{"stripParsedBoxWrapper", " ", "@", " ", 
        RowBox[{"{", "aliases", "}"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"oldAliases", "=", 
       RowBox[{
        RowBox[{"Options", "[", 
         RowBox[{"notebook", ",", "InputAliases"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"prunedAliases", "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"oldAliases", ",", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{"Rule", "|", "RuleDelayed"}], "]"}], "[", 
           RowBox[{
            RowBox[{"Alternatives", " ", "@@", " ", 
             RowBox[{"First", " ", "/@", " ", "stripedAliases"}]}], ",", 
            "_"}], "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SetOptions", "[", 
       RowBox[{"notebook", ",", 
        RowBox[{"InputAliases", "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{"prunedAliases", ",", "stripedAliases"}], "]"}]}]}], 
       "]"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["The following handles adding a single rule alias.", \
"NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddInputAlias", "[", 
   RowBox[{
    RowBox[{"alias_Rule", "?", "validAliasRule"}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"notebook_:", 
      RowBox[{"InputNotebook", "[", "]"}]}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"stripedAlias", " ", "=", " ", 
       RowBox[{"stripParsedBoxWrapper", " ", "@", " ", 
        RowBox[{"{", "alias", "}"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"oldAliases", "=", 
       RowBox[{
        RowBox[{"Options", "[", 
         RowBox[{"notebook", ",", "InputAliases"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"prunedAliases", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"oldAliases", ",", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{"Rule", "|", "RuleDelayed"}], "]"}], "[", 
           RowBox[{
            RowBox[{"Alternatives", " ", "@@", " ", 
             RowBox[{"First", " ", "/@", " ", "stripedAlias"}]}], ",", "_"}], 
           "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SetOptions", "[", 
       RowBox[{"notebook", ",", 
        RowBox[{"InputAliases", "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{"prunedAliases", ",", "stripedAlias"}], "]"}]}]}], "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["The original calling syntax for compatibility.", \
"NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddInputAlias", "[", 
   RowBox[{"fullBoxes_ParsedBoxWrapper", ",", "shortForm_String", ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"notebook_:", 
      RowBox[{"InputNotebook", "[", "]"}]}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"AddInputAlias", "[", 
   RowBox[{
    RowBox[{"shortForm", "\[Rule]", "fullBoxes"}], ",", "notebook"}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check ActiveInputAliases for parsing and valid options.", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "The first argument of ",
 StyleBox["ActiveInputAliases", "MR"],
 " must be a notebook object."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badActiveInputAliases", ":", " ", 
   RowBox[{"ActiveInputAliases", "[", 
    RowBox[{"badNotebook_", ",", "___"}], "]"}]}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"ActiveInputAliases", "::", "badnb"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotebook"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badActiveInputAliases"}]}], "]"}], 
     ";", " ", "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badNotebook"}], " ", "=!=", " ", 
    "NotebookObject"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ActiveInputAliases", "::", "badnb"}], " ", "=", " ", 
   "\"\<The first argument of `2` is not a notebook object.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ActiveInputAliases", "MR"],
 " expects zero arguments or one argument"
}], "NumberedSubsubsubtitle",
 CellChangeTimes->{{3.4526036299730873`*^9, 3.452603652507349*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"ActiveInputAliases", "[", 
     RowBox[{"_", ",", "__"}], "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", " ", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ActiveInputAliases", "::", "argt"}], ",", 
      RowBox[{"HoldForm", " ", "@", " ", "ActiveInputAliases"}], ",", 
      RowBox[{"heldLength", " ", "@", " ", "error"}], ",", "0", ",", "1"}], 
     "]"}]}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition of ",
 Cell[BoxData[
  FormBox["ActiveInputAliases", TraditionalForm]]]
}], "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["ActiveInputAliases", "MR"],
 " has been correctly parsed and checked. Now list the active Aliases."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ActiveInputAliases", " ", "@", " ", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"notebook_:", 
     RowBox[{"InputNotebook", "[", "]"}]}], "]"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", 
      RowBox[{"notebook", ",", "InputAliases"}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "//", "TableForm"}], 
   "//", "DisplayForm"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation Preprocessing", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Setups before the Notation", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Transform from the legacy syntax for notations to the new syntax.\
\>", "NumberedSubsubsubtitle"],

Cell["\<\
We transform all of the contents of the Notation statement from the old \
legacy syntaxes if they are present to the new syntax which allows us to use \
only the new syntax in the code which implements the Notation statements.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TransformedLegacyNotationSyntax", " ", "=", " ", "False"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Notation", "[", "anyContents___", "]"}], "/;", 
    RowBox[{"!", "$TransformedLegacyNotationSyntax"}]}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$TransformedLegacyNotationSyntax", "=", "True"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Notation", " ", "@", " ", 
      RowBox[{"TransformLegacySyntax", " ", "@", " ", "anyContents"}]}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Notation for parsing and valid options.", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Handle ",
 StyleBox["RemoveNotation", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveNotation", "[", 
   RowBox[{"notation_", ",", " ", "opts___"}], "]"}], " ", ":=", 
  RowBox[{"Notation", "[", 
   RowBox[{"notation", ",", 
    RowBox[{"Action", "\[Rule]", "RemoveNotationRules"}], ",", " ", "opts"}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Warn of legacy use of \[DoubleLeftRightArrow] vs. \
\[DoubleLongLeftRightArrow].", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Notation", "[", 
   RowBox[{"oldNotation_", ",", "rest___"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Notation", "::", "oldnota"}], "]"}], ";", 
     RowBox[{"Notation", "[", 
      RowBox[{
       RowBox[{"DoubleLongLeftRightArrow", " ", "@@", " ", "oldNotation"}], 
       ",", "rest"}], "]"}]}], ")"}], "/;", 
   RowBox[{"MatchQ", "[", 
    RowBox[{
     RowBox[{"SymbolName", " ", "@", " ", 
      RowBox[{"Head", " ", "@", " ", "oldNotation"}]}], ",", " ", 
     "\"\<DoubleLeftRightArrow\>\""}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "oldnota"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Future versions of the Notation package will no longer support \
\[DoubleLeftRightArrow], instead they will use \[DoubleLongLeftRightArrow]. \
Please make this change to all your Notations.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The main argument to ",
 StyleBox["Notation", "MR"],
 " must be of the form (external notation) arrow (internal notation)."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"validNotationHeads", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
    "\"\<DoubleLongRightArrow\>\"", "|", " ", "\"\<DoubleLongLeftArrow\>\"", 
     "|", " ", "\"\<DoubleLongLeftRightArrow\>\""}], ")"}]}], ";"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "[", 
    RowBox[{"badNotation_", ",", "rest___"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "badnota"}], ",", "badNotation"}], "]"}], 
      ";", "$Failed"}], ")"}], "/;", " ", 
    RowBox[{"\[Not]", 
     RowBox[{"MatchQ", "[", 
      RowBox[{
       RowBox[{"SymbolName", " ", "@", " ", 
        RowBox[{"Head", " ", "@", " ", "badNotation"}]}], ",", " ", 
       "validNotationHeads"}], "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "badnota"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<The notation '`1`' is not of the form externalBoxes \
\[DoubleLongLeftRightArrow] internalExpression or externalBoxes \
\[DoubleLongRightArrow] internalExpression or externalBoxes \
\[DoubleLongLeftArrow] internalExpression. Examine the full box structures \
for possible unintended groupings.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Notation", "MR"],
 " statement must be created from the Palette."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badNotation", " ", ":", " ", 
   RowBox[{"Notation", "[", 
    RowBox[{
     RowBox[{"direction_", "[", 
      RowBox[{"badExternalNotation_", ",", "_"}], "]"}], ",", "rest___"}], 
    "]"}]}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "noexbtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badExternalNotation"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotation"}]}], "]"}], ";", " ", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badExternalNotation"}], " ", "=!=", " ", 
    "ParsedBoxWrapper"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "noexbtag"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<The external representation `1` does not have an embedded TemplateBox \
with tag NotationTemplateTag. The Notation statement `2` may not have been \
entered using the palette, or the embedded TemplateBox may have been deleted. \
The embedded TemplateBox ensures correct parsing and retention of proper \
styling and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"badNotation", " ", ":", " ", 
   RowBox[{"Notation", "[", 
    RowBox[{
     RowBox[{"direction_", "[", 
      RowBox[{"_", ",", "badInternalNotation_"}], "]"}], ",", "rest___"}], 
    "]"}]}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "noinbtag"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badInternalNotation"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotation"}]}], "]"}], ";", " ", 
     "$Failed"}], ")"}], "/;", 
   RowBox[{
    RowBox[{"Head", " ", "@", " ", "badInternalNotation"}], " ", "=!=", " ", 
    "ParsedBoxWrapper"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "noinbtag"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<The internal representation `1` does not have an embedded TemplateBox \
with tag NotationTemplateTag. The Notation statement `2` may not have been \
entered using the palette, or the embedded TemplateBox may have been deleted. \
The embedded TemplateBox ensures correct parsing and retention of proper \
styling and grouping information.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The other arguments of ",
 StyleBox["Notation", "MR"],
 " must be options."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badNotation", " ", ":", " ", 
   RowBox[{"Notation", "[", 
    RowBox[{"notation_", ",", " ", "___", ",", "notOption_", ",", "___"}], 
    "]"}]}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "nonopt"}], ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
       " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotation"}]}], " ", "]"}], ";", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"OptionQ", " ", "@", " ", "notOption"}]}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The value of option ",
 StyleBox["Action", "MR"],
 " should be valid."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"badNotation", " ", ":", " ", 
   RowBox[{"Notation", "[", 
    RowBox[{"notation_", ",", " ", "___", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
      RowBox[{"Action", ",", " ", "badValue_"}], "]"}], ",", "___"}], "]"}]}],
   " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "optcrp"}], ",", " ", "Action", ",", " ", 
       RowBox[{"HoldForm", " ", "@", " ", "badValue"}], ",", 
       RowBox[{"HoldForm", " ", "@", " ", "badNotation"}]}], "]"}], ";", " ", 
     "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
   RowBox[{"Not", " ", "@", " ", 
    RowBox[{"MatchQ", "[", " ", 
     RowBox[{"badValue", ",", 
      RowBox[{
      "CreateNotationRules", " ", "|", " ", "RemoveNotationRules", " ", "|", 
       " ", "PrintNotationRules"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "optcrp"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Value of option '`1` \[Rule] `2`' in `3` should be \
CreateNotationRules, RemoveNotationRules or PrintNotationRules.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Checks that the internal expression argument of ",
 StyleBox["Notation", "MR"],
 " is a parsable expression."
}], "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"badNotation", " ", ":", " ", 
    RowBox[{"Notation", "[", 
     RowBox[{
      RowBox[{"notationType_", "[", 
       RowBox[{"external_", ",", "internal_"}], "]"}], ",", " ", "opts___"}], 
     "]"}]}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "brepbxs"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "internal"}], ",", 
        RowBox[{"HoldForm", " ", "@", " ", "badNotation"}]}], "]"}], ";", " ",
       "$Failed"}], ")"}], "/;", "\[IndentingNewLine]", 
    RowBox[{"silentEvaluate", " ", "@", " ", 
     RowBox[{"\[Not]", " ", 
      RowBox[{"parsableQ", " ", "[", " ", 
       RowBox[{
        RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "internal"}], " ", 
        ",", " ", "opts"}], "]"}]}]}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "brepbxs"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Cannot parse the internal representation '`1`' occurring in \
`2`\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell["Options have all been checked and are o.k.", "NumberedSubsubsubtitle"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check form of complex NotationPatterns.", "NumberedSubsubtitle",
 CellChangeTimes->{3.45260376114773*^9}],

Cell[CellGroupData[{

Cell["\<\
Check that the complex external patterns are of the right form.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Notation", "[", 
   RowBox[{
    RowBox[{"notationType_", "[", 
     RowBox[{"external_", ",", "internal_"}], "]"}], ",", "opts___"}], "]"}], 
  ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"complexExternalPatterns", " ", "=", " ", 
      RowBox[{"complexPatternsInBoxes", "[", 
       RowBox[{"external", ",", "opts"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "externalPatternTooComplex"}], ",", " ", 
         RowBox[{"HoldForm", " ", "@@", " ", 
          RowBox[{"First", " ", "@", " ", "complexExternalPatterns"}]}], ",", 
         
         RowBox[{"identityForm", " ", "@@", " ", "external"}]}], " ", "]"}], 
       ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
     RowBox[{"complexExternalPatterns", " ", "=!=", " ", 
      RowBox[{"{", "}"}]}]}]}], "]"}]}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "externalPatternTooComplex"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<Pattern '`1`' appearing in the external representation '`2`' cannot \
be used since its head is not Optional, Pattern, PatternTest, or Condition.\>\
\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check that the complex internal patterns are of the right form.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Notation", "[", 
   RowBox[{
    RowBox[{"notationType_", "[", 
     RowBox[{"external_", ",", "internal_"}], "]"}], ",", "opts___"}], "]"}], 
  ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"complexInternalPatterns", " ", "=", " ", 
      RowBox[{"complexPatternsInBoxes", "[", 
       RowBox[{"external", ",", "opts"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "internalPatternTooComplex"}], ",", " ", 
         RowBox[{"HoldForm", " ", "@@", " ", 
          RowBox[{"First", " ", "@", " ", "complexInternalPatterns"}]}], ",", 
         
         RowBox[{"identityForm", " ", "@@", " ", "internal"}]}], " ", "]"}], 
       ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
     RowBox[{"complexInternalPatterns", " ", "=!=", " ", 
      RowBox[{"{", "}"}]}]}]}], "]"}]}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "internalPatternTooComplex"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<Pattern '`1`' appearing in the internal representation '`2`' cannot \
be used since its head is not Optional, Pattern, PatternTest, or Condition.\>\
\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["complexPatternsInBoxes", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 "Where ",
 StyleBox["complexPatternsInBoxes", "MR"],
 " is defined by:"
}], "Text",
 CellChangeTimes->{3.4526037902602367`*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"complexPatternsInBoxes", " ", "[", " ", 
    RowBox[{"boxes_", ",", " ", "opts___"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Union", " ", "@", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"boxes", " ", "//.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HoldPattern", "[", "ParsedBoxWrapper", "]"}], " ", "@", 
             " ", "stringPatternBoxes_"}], "  ", "\[RuleDelayed]", " ", 
            "stringPatternBoxes"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TemplateBox", "[", 
             RowBox[{
              RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
              "\"\<NotationPatternTag\>\"", ",", "___"}], "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"HoldPattern", " ", "@@", " ", 
             RowBox[{"toMyHeldExpression", " ", "[", " ", 
              RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
              "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TemplateBox", "[", 
             RowBox[{
              RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
              "\"\<NotationMadeBoxesTag\>\"", ",", "___"}], "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"HoldPattern", " ", "@@", " ", 
             RowBox[{"toMyHeldExpression", " ", "[", " ", 
              RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
              "]"}]}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"patt_HoldPattern", "/;", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"headIsNot", "[", 
            RowBox[{"singleBlank", "|", "doubleBlank", "|", "tripleBlank"}], 
            "]"}], " ", "@@", " ", 
           RowBox[{"(", 
            RowBox[{"convertPatterns", " ", "@", " ", "patt"}], ")"}]}], 
          ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check form of the patterns in the Notation", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["Compare the external and internal patterns for consistency", \
"NumberedSubsubsubtitle"],

Cell["\<\
The external and internal patterns now have to be compared to see if they are \
consistent with the notation.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullArrowsToShortArrowsRules", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "\"\<DoubleLongRightArrow\>\"", " ", "\[Rule]", " ", 
      "\"\<\[DoubleLongRightArrow]\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<DoubleLongLeftArrow\>\"", " ", "\[Rule]", " ", 
      "\"\<\[DoubleLongLeftArrow]\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<DoubleLongLeftRightArrow\>\"", " ", "\[Rule]", " ", 
      "\"\<\[DoubleLongLeftRightArrow]\>\""}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Notation", "[", 
   RowBox[{
    RowBox[{"notationType_", "[", 
     RowBox[{"external_", ",", "internal_"}], "]"}], ",", "opts___"}], "]"}], 
  ":=", "\[IndentingNewLine]", 
  RowBox[{"checkNotationPatterns", "[", "\[IndentingNewLine]", 
   RowBox[{"external", ",", " ", 
    RowBox[{"patternsInBoxes", " ", "[", 
     RowBox[{"external", ",", " ", "opts"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SymbolName", " ", "@", " ", "notationType"}], " ", "/.", 
     "fullArrowsToShortArrowsRules"}], ",", "\[IndentingNewLine]", "internal",
     ",", " ", 
    RowBox[{"patternsInBoxes", " ", "[", 
     RowBox[{"internal", ",", " ", "opts"}], "]"}], ",", " ", "opts"}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["patternsInBoxes", "Input"]], "NumberedSubsubsubtitle"],

Cell["\<\
Where the patterns present in the boxes can be found from the following.\
\>", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"patternsInBoxes", " ", "[", " ", 
    RowBox[{"boxes_", ",", " ", "opts___"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Union", " ", "@", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"boxes", " ", "//.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"TemplateBox", "[", 
             RowBox[{
              RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
              "\"\<NotationPatternTag\>\"", ",", "___"}], "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"eval", "=", 
                RowBox[{"convertPatterns", " ", "@", " ", 
                 RowBox[{"toMyHeldExpression", " ", "[", " ", 
                  RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
                  "]"}]}]}], "}"}], ",", 
              RowBox[{"eval", "/;", "True"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TemplateBox", "[", 
             RowBox[{
              RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
              "\"\<NotationMadeBoxesTag\>\"", ",", "___"}], "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"eval", "=", 
                RowBox[{"convertPatterns", " ", "@", " ", 
                 RowBox[{"toMyHeldExpression", " ", "[", " ", 
                  RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
                  "]"}]}]}], "}"}], ",", 
              RowBox[{"eval", "/;", "True"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"string_String", " ", "/;", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{"string", ",", "\"\<*_\>\""}], "]"}]}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"eval", "=", 
                RowBox[{"convertPatterns", " ", "@", " ", 
                 RowBox[{"toMyHeldExpression", " ", "[", " ", 
                  RowBox[{"string", ",", " ", "WorkingFormOpt"}], "]"}]}]}], 
               "}"}], ",", 
              RowBox[{"eval", "/;", "True"}]}], "]"}]}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "a_singleBlank", "|", "a_doubleBlank", "|", "a_tripleBlank", "|", 
          "a_complexPattern"}], "\[Rule]", "a"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" checkNotationPatterns for free blanks.", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["Free blanks cannot occur in the output.", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{"externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    RowBox[{
    "\"\<\[DoubleLongLeftArrow]\>\"", " ", "|", " ", 
     "\"\<\[DoubleLongLeftRightArrow]\>\""}], ",", " ", "internalBoxes_", ",",
     " ", "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "frepatex"}], ",", 
       RowBox[{"identityForm", " ", "@@", " ", "externalBoxes"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
   RowBox[{"containsFreeBlanksQ", "[", "externalPatterns", "]"}]}]}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "frepatex"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<All patterns in the external representation must be able to be \
filled.  Free blank patterns found inside the external representation \
'`1`'.\>\""}], ";"}]], "Input",
 PageWidth->WindowWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Free blanks cannot occur in the input.", "NumberedSubsubsubtitle",
 CellChangeTimes->{3.452604561528985*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{"externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    RowBox[{
    "\"\<\[DoubleLongRightArrow]\>\"", " ", "|", " ", 
     "\"\<\[DoubleLongLeftRightArrow]\>\""}], ",", " ", "internalBoxes_", ",",
     " ", "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"Notation", "::", "frepatin"}], ",", 
       RowBox[{"identityForm", " ", "@@", " ", "internalBoxes"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
   RowBox[{"containsFreeBlanksQ", "[", "internalPatterns", "]"}]}]}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "frepatin"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<All patterns in the internal representation must be able to be \
filled.  Free blank patterns found inside the internal representation \
'`1`'.\>\""}], ";"}]], "Input",
 PageWidth->WindowWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["containsFreeBlanksQ", "MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "Where ",
 StyleBox["containsFreeBlanksQ", "MR"],
 " is defined by:"
}], "Text",
 CellChangeTimes->{3.452604590942176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"containsFreeBlanksQ", " ", "[", " ", "patterns_", " ", "]"}], ":=",
   " ", 
  RowBox[{"\[Not]", " ", 
   RowBox[{"FreeQ", "[", 
    RowBox[{"patterns", ",", " ", 
     RowBox[{
      RowBox[{"singleBlank", "[", "]"}], "|", 
      RowBox[{"doubleBlank", "[", "]"}], "|", 
      RowBox[{"tripleBlank", "[", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 checkNotationPatterns to catch patterns that are not fillable.\
\>", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Check for patterns in the external representation which are not being filled.\
\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{"externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    RowBox[{
    "\"\<\[DoubleLongLeftArrow]\>\"", " ", "|", " ", 
     "\"\<\[DoubleLongLeftRightArrow]\>\""}], ",", " ", "internalBoxes_", ",",
     " ", "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lhsPatternsNotInrhs", " ", "=", " ", 
      RowBox[{"Complement", "[", " ", 
       RowBox[{"externalPatterns", " ", ",", " ", "internalPatterns"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "expatnf"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HoldForm", " ", "@@", " ", 
          RowBox[{"First", " ", "@", " ", "lhsPatternsNotInrhs"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"identityForm", " ", "@@", " ", "externalBoxes"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"identityForm", " ", "@@", " ", "internalBoxes"}]}], " ", 
        "]"}], ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
     RowBox[{"lhsPatternsNotInrhs", " ", "=!=", " ", 
      RowBox[{"{", "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "expatnf"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Pattern '`1`' appearing in the external representation '`2`' cannot \
be filled since '`1`' does not appear in the internal representation '`3`'.\>\
\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check for patterns in the internal representation which are not being filled.\
\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{"externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    RowBox[{
    "\"\<\[DoubleLongRightArrow]\>\"", " ", "|", " ", 
     "\"\<\[DoubleLongLeftRightArrow]\>\""}], ",", " ", "internalBoxes_", ",",
     " ", "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rhsPatternsNotInlhs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{"internalPatterns", ",", " ", "externalPatterns"}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "inpatnf"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HoldForm", " ", "@@", " ", 
          RowBox[{"First", " ", "@", " ", "rhsPatternsNotInlhs"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"identityForm", " ", "@@", " ", "internalBoxes"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"identityForm", " ", "@@", " ", "externalBoxes"}]}], " ", 
        "]"}], ";", "\[IndentingNewLine]", "$Failed"}], ")"}], " ", "/;", " ", 
     RowBox[{"rhsPatternsNotInlhs", " ", "=!=", " ", 
      RowBox[{"{", "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "inpatnf"}], " ", "=", "\n", 
   "\"\<Pattern '`1`' appearing in the internal representation '`2`' cannot \
be filled since '`1`' does not appear in the external representation '`3`'.\>\
\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["checkNotationPatterns for patterns that are not used.", \
"NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["\<\
Check for named patterns in the external representation which are not being \
used.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{
   "externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    "\"\<\[DoubleLongRightArrow]\>\"", ",", " ", "internalBoxes_", ",", " ", 
    "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lhsPatternsNotInrhs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{"externalPatterns", ",", " ", "internalPatterns", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"singleBlank", "[", "]"}], ",", 
          RowBox[{"doubleBlank", "[", "]"}], ",", 
          RowBox[{"tripleBlank", "[", "]"}]}], "}"}]}], " ", "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"$Failed", " ", "/;", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"lhsPatternsNotInrhs", " ", "=!=", " ", 
        RowBox[{"{", "}"}]}], ")"}], " ", "\[And]", "\[IndentingNewLine]", 
      " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "expatnu"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"HoldForm", " ", "@@", " ", "#"}], ")"}], "&"}], " ", "/@",
          " ", "lhsPatternsNotInrhs"}], ",", "\[IndentingNewLine]", 
        RowBox[{"identityForm", " ", "@@", " ", "externalBoxes"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"identityForm", " ", "@@", " ", "internalBoxes"}]}], " ", 
       "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "expatnu"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Warning: The pattern(s) '`1`' appearing in the external \
representation '`2`' are not used in the internal representation \
'`3`'.\>\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check for named patterns in the internal representation which are not being \
used. \
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{
   "externalBoxes_", ",", " ", "externalPatterns_", ",", " ", 
    "\"\<\[DoubleLongLeftArrow]\>\"", ",", " ", "internalBoxes_", ",", " ", 
    "internalPatterns_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rhsPatternsNotInlhs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{"internalPatterns", ",", " ", "externalPatterns", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"singleBlank", "[", "]"}], ",", 
          RowBox[{"doubleBlank", "[", "]"}], ",", 
          RowBox[{"tripleBlank", "[", "]"}]}], "}"}]}], " ", "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"$Failed", " ", "/;", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rhsPatternsNotInlhs", " ", "=!=", " ", 
        RowBox[{"{", "}"}]}], ")"}], " ", "\[And]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "inpatnu"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"HoldForm", " ", "@@", " ", "#"}], ")"}], "&"}], " ", "/@",
          " ", "rhsPatternsNotInlhs"}], ",", "\[IndentingNewLine]", 
        RowBox[{"identityForm", " ", "@@", " ", "externalBoxes"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"identityForm", " ", "@@", " ", "internalBoxes"}]}], " ", 
       "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "inpatnu"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Warning: The pattern(s) '`1`' appearing in the internal \
representation '`2`' are not used in the external representation \
'`3`'.\>\""}], ";"}]], "Input",
 PageWidth->PaperWidth,
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["checkNotationPatterns for patterns that are too general.", \
"NumberedSubsubtitle",
 CellChangeTimes->{3.4526046528722973`*^9}],

Cell[CellGroupData[{

Cell["\<\
Check for patterns that are too general in the external representation.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{
   "externalBoxes_", ",", " ", "externalPatterns_", ",", " ", "type_", ",", 
    " ", "internalBoxes_", ",", " ", "internalPatterns_", ",", " ", 
    "opts___"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"patternedBoxes", " ", "=", " ", 
      RowBox[{"boxedStringPatternsToPatterns", " ", "[", " ", 
       RowBox[{
        RowBox[{"cleanBoxes", " ", "@@", " ", "externalBoxes"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"WorkingForm", " ", "\[Rule]", " ", "WorkingForm"}], " ", "/.",
           " ", 
          RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
         RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], " ", 
       "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "expattg"}], ",", "patternedBoxes", ",", 
         " ", "externalBoxes", ",", 
         RowBox[{"identityForm", " ", "@", " ", "type"}], ",", " ", 
         "internalBoxes"}], "]"}], ";", "\[IndentingNewLine]", "$Failed"}], 
      ")"}], "/;", " ", 
     RowBox[{"patternToGeneralQ", " ", "@", " ", "patternedBoxes"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "expattg"}], " ", "=", " ", 
   "\"\<The external pattern `1` appearing in Notation[`2` `3` `4`] is too \
general to be used. Almost anything will match the external pattern \
`1`.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check for patterns that are too general in the internal representation.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{
   "externalBoxes_", ",", " ", "externalPatterns_", ",", " ", "type_", ",", 
    " ", "internalBoxes_", ",", " ", "internalPatterns_", ",", " ", 
    "opts___"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"patternedBoxes", " ", "=", " ", 
      RowBox[{"boxedStringPatternsToPatterns", " ", "[", " ", 
       RowBox[{
        RowBox[{"cleanBoxes", " ", "@@", " ", "internalBoxes"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"WorkingForm", " ", "\[Rule]", " ", "WorkingForm"}], " ", "/.",
           " ", 
          RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
         RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], " ", 
       "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Notation", "::", "inpattg"}], ",", "patternedBoxes", ",", 
         " ", "externalBoxes", ",", 
         RowBox[{"identityForm", " ", "@", " ", "type"}], ",", " ", 
         "internalBoxes"}], "]"}], ";", "\[IndentingNewLine]", "$Failed"}], 
      ")"}], "/;", " ", 
     RowBox[{"patternToGeneralQ", " ", "@", " ", "patternedBoxes"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "inpattg"}], " ", "=", " ", 
   "\"\<The internal pattern `1` appearing in Notation[`2` `3` `4`] is too \
general to be used. Almost anything will match the internal pattern \
`1`.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of Notation.", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["O.K. Now create the notation.", "NumberedSubsubsubtitle",
 CellChangeTimes->{{3.452604697210546*^9, 3.452604701246332*^9}}],

Cell["\<\
The notation has been correctly parsed and checked. Now create the notation.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkNotationPatterns", "[", " ", 
   RowBox[{
   "externalBoxes_", ",", " ", "externalPatterns_", ",", " ", "type_", ",", 
    " ", "internalBoxes_", ",", " ", "internalPatterns_", ",", " ", 
    "opts___"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"executeNotation", "[", 
   RowBox[{
   "externalBoxes", ",", " ", "type", ",", " ", "internalBoxes", ",", " ", 
    "opts"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"allok", " ", ":", " ", 
   RowBox[{"executeNotation", "[", " ", 
    RowBox[{
    "external_", ",", "\"\<\[DoubleLongLeftRightArrow]\>\"", ",", "internal_",
      ",", "opts___"}], "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"internalBoxes", " ", "=", " ", 
       RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "internal"}]}], ",", 
      RowBox[{"externalBoxes", " ", "=", " ", 
       RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "external"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"createExternalToInternalRule", "[", 
      RowBox[{"externalBoxes", ",", " ", "internalBoxes", ",", " ", "opts"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"createInternalToExternalRule", "[", 
      RowBox[{"internalBoxes", ",", " ", "externalBoxes", ",", " ", "opts"}], 
      "]"}], ";"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allok", " ", ":", " ", 
    RowBox[{"executeNotation", "[", " ", 
     RowBox[{
     "external_", ",", "\"\<\[DoubleLongRightArrow]\>\"", ",", "internal_", 
      ",", "opts___"}], "]"}]}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"internalBoxes", " ", "=", " ", 
        RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "internal"}]}], ",", 
       RowBox[{"externalBoxes", " ", "=", " ", 
        RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "external"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"createExternalToInternalRule", "[", 
      RowBox[{"externalBoxes", ",", " ", "internalBoxes", ",", " ", "opts"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allok", " ", ":", " ", 
    RowBox[{"executeNotation", "[", " ", 
     RowBox[{
     "external_", ",", "\"\<\[DoubleLongLeftArrow]\>\"", ",", "internal_", 
      ",", "opts___"}], "]"}]}], " ", ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"internalBoxes", " ", "=", " ", 
        RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "internal"}]}], ",", 
       RowBox[{"externalBoxes", " ", "=", " ", 
        RowBox[{"stripParsedBoxWrapper", " ", "@", " ", "external"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"createInternalToExternalRule", "[", 
      RowBox[{"internalBoxes", ",", " ", "externalBoxes", ",", " ", "opts"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation error handling catchalls.", "NumberedSubsubtitle",
 CellChangeTimes->{{3.452604720006369*^9, 3.452604723254361*^9}}],

Cell[CellGroupData[{

Cell["\<\
Have encountered an unknown error in notation parsing... Report it!\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "[", "other___", "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Notation", "::", "unknpars"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StylePrint", "[", 
      RowBox[{
       RowBox[{"identityForm", " ", "@", " ", 
        RowBox[{"colorizeStructuralBoxes", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"HoldForm", "[", "Notation", "]"}], "[", "other", "]"}], 
          " ", ",", " ", "1"}], "]"}]}], ",", "\"\<Output\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", "$Failed"}], ")"}]}], ";"}]], "Input",
 PageWidth->DirectedInfinity[1],
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "unknpars"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Unknown error occurred in parsing the notation statement. Please \
report this to jasonh@wri.com, Please carefully examine the following box \
structures for spurious characters weird groupings etc.\>\""}], 
  ";"}]], "Input",
 PageWidth->WindowWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Have encountered an unknown error in notation pattern checking... Report it!\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkNotationPatterns", "[", "other___", "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Notation", "::", "unknpatu"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StylePrint", "[", 
      RowBox[{
       RowBox[{"identityForm", " ", "@", " ", 
        RowBox[{"colorizeStructuralBoxes", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"HoldForm", "[", "Notation", "]"}], "[", "other", "]"}], 
          " ", ",", " ", "1"}], "]"}]}], ",", "\"\<Output\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", "$Failed"}], ")"}]}], ";"}]], "Input",
 PageWidth->DirectedInfinity[1],
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "unknpatu"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Unknown error occurred in checking the pattern used in the notation \
statement. It appears to have parsed ok. Please report this to \
jasonh@wri.com, Please carefully examine the following box structures for \
spurious characters weird groupings etc.\>\""}], ";"}]], "Input",
 PageWidth->WindowWidth,
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Have encountered an unknown error in notation execution... Report it!\
\>", "NumberedSubsubsubtitle"],

Cell["\<\
executeNotation[all_,other___] :=
 (Message[Notation::unknexec];
  CellPrint[Cell[BoxData[ colorizeStructuralBoxes[ all , 1]],\"Output\"]];
  HoldComplete @ Symbol @ \"$Failed\");\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "unknexec"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Unknown error occurred in executing the notation statement. It \
appears to have parsed and been processed ok. Please report this to \
jasonh@wri.com, Please carefully examine the following box structures for \
spurious characters weird groupings etc.\>\""}], ";"}]], "Input",
 PageWidth->WindowWidth,
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation InternalToExternal", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["convertInternalPatternsForInternalToExternal", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertInternalPatternsForInternalToExternal", "[", 
   RowBox[{"patternBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"WorkingFormOpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"WorkingForm", " ", "/.", " ", 
        RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
       RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cleanBoxes", " ", "@", " ", "patternBoxes"}], " ", "//.", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
          "\"\<NotationPatternTag\>\"", ",", "___"}], "]"}], " ", 
        "\[RuleDelayed]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MakeBoxes", "[", 
            RowBox[{"#", ",", "WorkingFormOpt"}], "]"}], "&"}], " ", "@@", 
          " ", 
          RowBox[{"toInert", " ", "@", " ", 
           RowBox[{"toMyHeldExpression", "[", 
            RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
            "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
          "\"\<NotationMadeBoxesTag\>\"", ",", "___"}], "]"}], " ", 
        "\[RuleDelayed]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MakeBoxes", "[", 
            RowBox[{"#", ",", "WorkingFormOpt"}], "]"}], "&"}], " ", "@@", 
          " ", 
          RowBox[{"toInert", " ", "@", " ", 
           RowBox[{"toMyHeldExpression", "[", 
            RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
            "]"}]}]}], ")"}]}]}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertInternalBoxesForInternalToExternal", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertInternalBoxesForInternalToExternal", "[", 
   RowBox[{"internalBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"WorkingFormOpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"WorkingForm", " ", "/.", " ", 
        RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
       RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"internal", " ", "=", " ", 
        RowBox[{"toMyHeldExpression", " ", "[", " ", 
         RowBox[{
          RowBox[{
          "convertInternalPatternsForInternalToExternal", " ", "[", " ", 
           RowBox[{"internalBoxes", " ", ",", "opts"}], "]"}], ",", 
          "WorkingFormOpt"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"fromInert", " ", "@", " ", 
       RowBox[{"transformNotationalPatterns", " ", "@", " ", 
        RowBox[{"flattenAllMyHold", " ", "@", " ", 
         RowBox[{"myHold", " ", "@", " ", 
          RowBox[{"NotationMakeBoxes", " ", "[", " ", 
           RowBox[{"internal", " ", ",", "WorkingFormOpt"}], "]"}]}]}]}]}]}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["toInert", "MR"],
 " & ",
 StyleBox["fromInert", "MR"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["toInert", "MR"],
 " & ",
 StyleBox["fromInert", "MR"],
 " transform all system patterns into inert patterns and back again."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toInert", "[", "expr_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"expr", " ", "/.", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Pattern", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Pattern\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PatternTest", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`PatternTest\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Condition", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Condition\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Alternatives", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Alternatives\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Optional", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Optional\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Repeated", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Repeated\>\""}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"RepeatedNull", " ", "->", 
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`RepeatedNull\>\""}], 
        "]"}]}]}], "}"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fromInert", "[", "expr_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"expr", " ", "/.", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Pattern\>\""}], 
        "]"}], " ", "->", " ", "Pattern"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`PatternTest\>\""}], 
        "]"}], " ", "->", " ", "PatternTest"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Condition\>\""}], 
        "]"}], " ", "->", " ", "Condition"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Alternatives\>\""}], 
        "]"}], " ", "->", " ", "Alternatives"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Optional\>\""}], 
        "]"}], " ", "->", " ", "Optional"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`Repeated\>\""}], 
        "]"}], " ", "->", " ", "Repeated"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{
         RowBox[{"Context", "[", "]"}], "<>", "\"\<inert`RepeatedNull\>\""}], 
        "]"}], "->", " ", "RepeatedNull"}]}], "}"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"inertHold", ",", "HoldAll"}], "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["transformNotationalPatterns", "MR"]], \
"NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["transformNotationalPatterns", "MR"],
 " transforms all patterns that are not genuine patterns and converts them to \
match literal expressions."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"transformNotationalPatterns", "[", "patterns_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"patterns", "//.", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"HoldPattern", "[", "HoldPattern", "]"}], "[", "patt_", "]"}],
        "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Verbatim", "[", "HoldPattern", "]"}], "[", "patt", "]"}]}]}], 
    ")"}], "//.", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{
          RowBox[{"HoldPattern", "[", "Pattern", "]"}], "[", 
          RowBox[{"patternVariable_", ",", " ", "patternContent_"}], "]"}], 
         "]"}], "/;", 
        RowBox[{"Not", " ", "@", " ", 
         RowBox[{"MatchQ", "[", 
          RowBox[{"patternContent", ",", 
           RowBox[{
            RowBox[{"HoldPattern", "[", 
             RowBox[{
             "Blank", "|", "BlankSequence", "|", "BlankNullSequence"}], "]"}],
             "[", "]"}]}], "]"}]}]}], "/;", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", "[", 
            RowBox[{
             RowBox[{"HoldForm", " ", "[", " ", "Pattern", "]"}], "[", 
             RowBox[{"patternVariable", ",", "patternContent"}], "]"}], 
            "]"}]}], "]"}], ";", "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"patt", ":", "Pattern"}], ")"}], "[", 
       RowBox[{"patternVariable", ",", "patternContent"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "PatternTest", "]"}], "[", 
         RowBox[{"patt_", ",", "patternTest_"}], "]"}], "]"}], "/;", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"PatternTest", "[", 
             RowBox[{"patt", ",", "patternTest"}], "]"}]}]}], "]"}], ";", 
         "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "PatternTest", "]"}], "[", 
       RowBox[{"patt", ",", 
        RowBox[{"HoldPattern", "[", "patternTest", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "Condition", "]"}], "[", 
         RowBox[{"patt_", ",", "cond_"}], "]"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"Condition", "[", 
             RowBox[{"patt", ",", "cond"}], "]"}]}]}], "]"}], ";", "True"}], 
        ")"}]}], "\[Rule]", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"HoldPattern", "[", "Condition", "]"}], "[", 
        RowBox[{"patt", ",", "cond"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "Alternatives", "]"}], "[", "patt__", 
         "]"}], "]"}], "/;", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"Alternatives", " ", "@", " ", "patt"}]}]}], "]"}], ";", 
         "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "Alternatives", "]"}], "[", "patt", 
       "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "Optional", "]"}], "[", "patt__", "]"}], 
        "]"}], "/;", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"Optional", " ", "@", " ", "patt"}]}]}], "]"}], ";", 
         "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "Optional", "]"}], "[", "patt", "]"}]}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "Repeated", "]"}], "[", "patt__", "]"}], 
        "]"}], "/;", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"Repeated", " ", "@", " ", "patt"}]}]}], "]"}], ";", 
         "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "Repeated", "]"}], "[", "patt", "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"HoldPattern", "[", "RepeatedNull", "]"}], "[", "patt__", 
         "]"}], "]"}], "/;", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Notation", "::", "notapatu"}], ",", 
           RowBox[{"HoldForm", " ", "@", " ", 
            RowBox[{"RepeatedNull", " ", "@", " ", "patt"}]}]}], "]"}], ";", 
         "True"}], ")"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "RepeatedNull", "]"}], "[", "patt", 
       "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "notapatu"}], " ", "=", "\[IndentingNewLine]", 
   "\"\<Warning: The pattern `1` is being interpreted as a notation and not a \
pattern. Use an embedded NotationPatternTag TemplateBox wrapper if you want \
this pattern to be treated as a genuine pattern.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertExternalPatternsForInternalToExternal", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["convertExternalPatternsForInternalToExternal", \
"MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["convertExternalPatternsForInternalToExternal", "MR"],
 " will take an expression consisting of boxes and convert all patterns \
present in the boxes\[LongDash]patterns that are currently still unparsed \
strings and not yet expressions\[LongDash]to the corresponding patterned \
expressions, leaving the other boxes alone."
}], "Text",
 CellChangeTimes->{3.452604775095509*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertExternalPatternsForInternalToExternal", "[", 
   RowBox[{"patternBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"WorkingFormOpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"WorkingForm", " ", "/.", " ", 
        RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
       RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"flattenAllMyHold", " ", "[", " ", 
     RowBox[{"myHold", " ", "@@", " ", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"patternBoxes", " ", "//.", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"TemplateBox", "[", 
            RowBox[{
             RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
             "\"\<NotationMadeBoxesTag\>\"", ",", "___"}], "]"}], " ", 
           "\[RuleDelayed]", " ", 
           RowBox[{"myHold", " ", "@@", " ", 
            RowBox[{"removePatternsAndBlanks", " ", "[", " ", 
             RowBox[{"complexPattern", " ", "@@", " ", 
              RowBox[{"toMyHeldExpression", " ", "[", " ", 
               RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
               "]"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TemplateBox", "[", 
            RowBox[{
             RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
             "\"\<NotationPatternTag\>\"", ",", "___"}], "]"}], " ", 
           "\[RuleDelayed]", " ", 
           RowBox[{"removePatternsAndBlanks", " ", "[", " ", 
            RowBox[{"complexPattern", " ", "@@", " ", 
             RowBox[{"toMyHeldExpression", " ", "[", " ", 
              RowBox[{"stringPatternBoxes", ",", " ", "WorkingFormOpt"}], 
              "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TemplateBox", "[", 
            RowBox[{
             RowBox[{"{", "stringPatternBoxes_", "}"}], ",", 
             "\"\<NotationTemplateTag\>\"", ",", "___"}], "]"}], 
           "\[RuleDelayed]", " ", "stringPatternBoxes"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"string_String", " ", "/;", " ", 
            RowBox[{"StringMatchQ", "[", 
             RowBox[{"string", ",", "\"\<*_\>\""}], "]"}]}], " ", 
           "\[RuleDelayed]", " ", 
           RowBox[{"convertPatterns", " ", "@", " ", 
            RowBox[{"toMyHeldExpression", " ", "[", " ", 
             RowBox[{"string", ",", " ", "WorkingFormOpt"}], "]"}]}]}]}], 
         "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["convertExternalPatternsForInternalToExternal", "Input"]
}], "NumberedSubsubsubtitle"],

Cell["\<\
The second argument and beyond of \
convertExternalPatternsForInternalToExternal must be Options.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"convertExternalPatternsForInternalToExternal", "[", 
     RowBox[{"_", ",", "___", ",", 
      RowBox[{"notOption_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "OptionQ"}], "]"}], ")"}]}], ",", "___"}], "]"}]}],
    " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{
      "convertExternalPatternsForInternalToExternal", "::", "nonopt"}], ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertExternalBoxesForInternalToExternal", "NumberedSubsubtitle"],

Cell[TextData[{
 "When redoing this move the ",
 StyleBox["With", "Input"],
 " outside the calculation, thus creating the set of rules only once. Then \
just apply it each time when needed. Profiling seems to indicate that a fair \
amount of time is spent here. Not changing this now since not retesting it to \
make sure everything is working."
}], "JasonComment",
 CellChangeTimes->{{3.452604800296102*^9, 3.4526048011991377`*^9}}],

Cell["\<\
I might be able to get away with using myHold instead of myOtherHold but to \
be safe use myOtherHold since the expression might already contain myHold and \
I am not imediatly familary enough with the my own code (which I haven\
\[CloseCurlyQuote]t changed for quite a while...) so play it safe here.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", " ", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myOtherHold", ",", "releaseMyHold"}], "}"}], ",", 
    "HoldAllComplete"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"releaseMyOtherHold", " ", "@", " ", "expr___"}], " ", ":=", 
   RowBox[{"Evaluate", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HoldComplete", " ", "[", " ", "expr", " ", "]"}], " ", "//.", 
      " ", 
      RowBox[{
       RowBox[{"myOtherHold", " ", "@", " ", "term___"}], " ", "\[Rule]", " ",
        "term"}]}], ")"}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertExternalBoxesForInternalToExternal", "[", 
   RowBox[{"externalBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"releaseMyOtherHold", " ", "@", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "CommaQ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"CommaQ", "[", 
        RowBox[{"\"\<,\>\"", "|", "\"\<\[InvisibleComma]\>\""}], "]"}], ":=", 
       "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CommaQ", " ", "@", " ", "other_"}], " ", ":=", "False"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"With", " ", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"RB", " ", "=", " ", "RowBox"}], ",", " ", 
          RowBox[{"B", " ", "=", " ", "singleBlank"}], ",", " ", 
          RowBox[{"BB", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{"doubleBlank", " ", "|", " ", "tripleBlank"}], ")"}]}], 
          ",", " ", 
          RowBox[{"CP", " ", "=", " ", "complexPattern"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"OpQ", " ", "=", " ", "operatorQ"}], ",", " ", 
          RowBox[{"InQ", " ", "=", " ", "infixOperatorQ"}], ",", " ", 
          RowBox[{"PreQ", " ", "=", " ", "prefixOperatorQ"}], ",", " ", 
          RowBox[{"PostQ", " ", "=", " ", "postfixOperatorQ"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"DelimQ", " ", "=", " ", "delimiterQ"}], ",", " ", 
          RowBox[{"EffOp", " ", "=", " ", "effectiveOperator"}], " ", ",", 
          " ", 
          RowBox[{"Paren", " ", "=", " ", "Parenthesize"}], ",", " ", 
          RowBox[{"WhQ", " ", "=", " ", "whiteSpaceQ"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MH", " ", "=", " ", "myOtherHold"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"form", " ", "=", " ", 
           RowBox[{
            RowBox[{"WorkingForm", " ", "/.", " ", 
             RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
            RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "convertExternalPatternsForInternalToExternal", " ", "[", " ", 
          RowBox[{
           RowBox[{"tidyBoxes", " ", "@", " ", "externalBoxes"}], ",", " ", 
           "opts"}], " ", "]"}], " ", "//.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"op_", "?", "PreQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"prec", " ", "=", " ", 
                RowBox[{"EffOp", " ", "@", " ", "op"}]}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"MH", " ", "@", " ", 
                RowBox[{"RB", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", " ", "op", ",", " ", "w", ",", " ", 
                   RowBox[{"Paren", "[", 
                    RowBox[{"symb", ",", " ", "form", ",", " ", "prec"}], 
                    "]"}], ",", " ", "r"}], "}"}]}]}], "/;", " ", "True"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"op_", "?", "InQ"}], ",", " ", "r___"}], "}"}]}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"prec", " ", "=", " ", 
                RowBox[{"EffOp", " ", "@", " ", "op"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"MH", " ", "@", " ", 
                RowBox[{"RB", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", " ", 
                   RowBox[{"Paren", "[", 
                    RowBox[{"symb", ",", " ", "form", ",", " ", "prec"}], 
                    "]"}], ",", " ", "w", ",", " ", "op", ",", " ", "r"}], 
                  "}"}]}]}], "/;", " ", "True"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"op_", "?", "InQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"prec", " ", "=", " ", 
                RowBox[{"EffOp", " ", "@", " ", "op"}]}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"MH", " ", "@", " ", 
                RowBox[{"RB", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", " ", "op", ",", " ", "w", ",", " ", 
                   RowBox[{"Paren", "[", 
                    RowBox[{"symb", ",", " ", "form", ",", " ", "prec"}], 
                    "]"}], ",", " ", "r"}], "}"}]}]}], "/;", " ", "True"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"op_", "?", "PostQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"prec", " ", "=", " ", 
                RowBox[{"EffOp", " ", "@", " ", "op"}]}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"MH", " ", "@", " ", 
                RowBox[{"RB", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", " ", 
                   RowBox[{"Paren", "[", 
                    RowBox[{"symb", ",", " ", "form", ",", " ", "prec"}], 
                    "]"}], ",", " ", "w", ",", " ", "op", ",", " ", "r"}], 
                  "}"}]}]}], "/;", " ", "True"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", 
               RowBox[{"d_", "?", "DelimQ"}], ",", "m___", ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", "d", ",", "m", ",", " ", 
               RowBox[{"MakeBoxes", "[", 
                RowBox[{"symb", ",", " ", "form"}], "]"}], ",", " ", "r"}], 
              "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", "m___", ",", 
               RowBox[{"d_", "?", "DelimQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", 
               RowBox[{"MakeBoxes", "[", 
                RowBox[{"symb", ",", " ", "form"}], "]"}], ",", "m", ",", "d",
                ",", " ", "r"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"B", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{
             RowBox[{"RB", " ", "@", " ", 
              RowBox[{"{", 
               RowBox[{"l", ",", " ", 
                RowBox[{"Paren", "[", 
                 RowBox[{"symb", ",", " ", "form", ",", " ", "Times"}], "]"}],
                 ",", " ", "r"}], "}"}]}], "/;", 
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"l", ",", "r"}], "}"}], "===", 
                RowBox[{"{", "}"}]}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"B", " ", "@", " ", "symb_"}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{"symb", ",", " ", "form"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"d_", "?", "CommaQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"BB", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", "d", ",", " ", "w", ",", " ", 
               RowBox[{"makeHeldSequenceOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "symb", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "r"}], "}"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"BB", " ", "@", " ", "symb_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"d_", "?", "CommaQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", 
               RowBox[{"makeHeldSequenceOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "symb", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "w", ",", " ", "d", ",", " ", 
               "r"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"d_", "?", "DelimQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"BB", " ", "@", " ", "symb_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", "d", ",", " ", "w", ",", " ", 
               RowBox[{"makeHeldRowBoxOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "symb", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "r"}], "}"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"BB", " ", "@", " ", "symb_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"d_", "?", "DelimQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", 
               RowBox[{"makeHeldRowBoxOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "symb", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "w", ",", " ", "d", ",", " ", 
               "r"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"BB", " ", "@", " ", "symb_"}], " ", "\[RuleDelayed]", 
            " ", 
            RowBox[{"makeHeldRowBoxOfBoxes", "[", 
             RowBox[{
              RowBox[{"{", "symb", "}"}], ",", " ", "form", ",", " ", 
              "None"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"d_", "?", "CommaQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"CP", " ", "@", " ", "expr_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", "d", ",", " ", "w", ",", " ", 
               RowBox[{"makeEvaluatedSequenceOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "expr", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "r"}], "}"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"CP", " ", "@", " ", "expr_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"d_", "?", "CommaQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", 
               RowBox[{"makeEvaluatedSequenceOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "expr", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "w", ",", " ", "d", ",", " ", 
               "r"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"d_", "?", "DelimQ"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"CP", " ", "@", " ", "expr_"}], ",", " ", "r___"}], 
              "}"}]}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", "d", ",", " ", "w", ",", " ", 
               RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "expr", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "r"}], "}"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l___", ",", " ", 
               RowBox[{"CP", " ", "@", " ", "expr_"}], ",", " ", 
               RowBox[{"w___", "?", "WhQ"}], ",", " ", 
               RowBox[{"d_", "?", "DelimQ"}], ",", " ", "r___"}], "}"}]}], 
            " ", "\[RuleDelayed]", " ", 
            RowBox[{"RB", " ", "@", " ", 
             RowBox[{"{", 
              RowBox[{"l", ",", " ", 
               RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
                RowBox[{
                 RowBox[{"{", "expr", "}"}], ",", " ", "form", ",", " ", 
                 "None"}], "]"}], ",", " ", "w", ",", " ", "d", ",", " ", 
               "r"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CP", " ", "@", " ", "patt_"}], " ", "\[RuleDelayed]", 
            " ", 
            RowBox[{"makeEvaluatedRowBoxOfBoxes", "[", 
             RowBox[{
              RowBox[{"{", "patt", "}"}], ",", " ", "form", ",", " ", 
              "None"}], "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["\<\
The 2nd argument and beyond of convertExternalBoxesForInternalToExternal must \
be Options.\
\>", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"convertExternalBoxesForInternalToExternal", "[", 
     RowBox[{"_", ",", "___", ",", 
      RowBox[{"notOption_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "OptionQ"}], "]"}], ")"}]}], ",", "___"}], "]"}]}],
    " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"convertExternalBoxesForInternalToExternal", "::", "nonopt"}], 
      ",", " ", 
      RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of createInternalToExternalRule", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creates appropriate ",
 StyleBox["MakeBoxes", "MR"],
 " rule"
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "This creates a ",
 StyleBox["MakeBoxes", "MR"],
 " rule that will format an internal expression into an external box \
structure."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createInternalToExternalRule", "[", 
   RowBox[{
   "internalBoxes_", ",", " ", "externalBoxes_", ",", " ", "opts___"}], "]"}],
   ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"external", " ", "=", " ", 
       RowBox[{"convertExternalBoxesForInternalToExternal", " ", "[", " ", 
        RowBox[{"externalBoxes", ",", " ", "opts"}], " ", "]"}]}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"internal", " ", "=", " ", 
       RowBox[{"convertInternalBoxesForInternalToExternal", " ", "[", " ", 
        RowBox[{"internalBoxes", ",", " ", "opts"}], " ", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"WorkingFormOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"WorkingForm", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ActionOpt", " ", "=", " ", 
       RowBox[{
        RowBox[{"Action", " ", "/.", " ", 
         RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
        RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"executeInternalToExternalAction", "[", 
      RowBox[{
      "internal", ",", " ", "external", ",", " ", "WorkingFormOpt", ",", " ", 
       "ActionOpt"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enter, remove or print rule", "NumberedSubsubsubtitle",
 CellChangeTimes->{3.452604853166998*^9}],

Cell["\<\
This determines if the rule should be entered, removed or printed.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"executeInternalToExternalAction", "[", " ", 
   RowBox[{
   "internal_", " ", ",", " ", "external_", " ", ",", " ", "WorkingFormOpt_", 
    ",", " ", "CreateNotationRules"}], "]"}], ":=", " ", 
  RowBox[{"releaseMyHold", "[", " ", 
   RowBox[{"internal", " ", ":=", " ", "external"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"executeInternalToExternalAction", "[", " ", 
   RowBox[{
   "internal_", " ", ",", " ", "external_", " ", ",", " ", "WorkingFormOpt_", 
    ",", " ", "RemoveNotationRules"}], "]"}], ":=", 
  RowBox[{"releaseMyHold", "[", " ", 
   RowBox[{"silentEvaluate", " ", "@", " ", 
    RowBox[{"(", 
     RowBox[{"internal", " ", "=."}], " ", ")"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"executeInternalToExternalAction", "[", " ", 
    RowBox[{
    "internal_", " ", ",", " ", "external_", " ", ",", " ", "WorkingFormOpt_",
      ",", " ", "PrintNotationRules"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"releaseMyHold", " ", "@", " ", 
    RowBox[{"CellPrint", " ", "@", " ", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", " ", "@", " ", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{
          RowBox[{"internal", " ", ":=", " ", "external"}], ",", " ", 
          "StandardForm"}], "]"}]}], ",", "\"\<Output\>\"", ",", 
       RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation ExternalToInternal", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["convertInternalPatternsForExternalToInternal", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["convertInternalPatternsForExternalToInternal", "MR",
 FontFamily->"Helvetica"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["convertInternalPatternsForExternalToInternal", "MR",
  FontFamily->"Helvetica"],
 StyleBox[" will take an expression consisting of boxes and convert all \
patterns present in the boxes\[LongDash]patterns that are currently still \
unparsed strings and not yet expressions\[LongDash]to the corresponding naked \
patterned variables, stripping out the pattern content and leaving all other \
boxes alone.",
  FontFamily->"Helvetica"]
}], "Text",
 CellChangeTimes->{{3.45260488379521*^9, 3.45260490539196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertInternalPatternsForExternalToInternal", "[", 
   RowBox[{"patternBoxes_", ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"convertPatterns", " ", "@", " ", 
    RowBox[{"flattenAllMyHold", " ", "@", " ", 
     RowBox[{"boxedStringPatternsToPatterns", "[", 
      RowBox[{"patternBoxes", ",", "opts"}], "]"}]}]}], "//.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"singleBlank", " ", "@", " ", "a_"}], " ", "\[Rule]", " ", 
      "a"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleBlank", " ", "@", " ", "a_"}], " ", "\[RuleDelayed]", 
      " ", 
      RowBox[{"stripSpuriousRowBox", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tripleBlank", " ", "@", " ", "a_"}], " ", "\[RuleDelayed]", 
      " ", 
      RowBox[{"stripSpuriousRowBox", " ", "@", " ", "a"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"complexPattern", " ", "@", " ", "a_"}], " ", "\[RuleDelayed]", 
      " ", 
      RowBox[{"stripSpuriousRowBox", " ", "@", " ", "a"}]}]}], 
    "}"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["convertInternalPatternsForExternalToInternal", "MR",
  FontFamily->"Helvetica"]
}], "NumberedSubsubsubtitle"],

Cell["\<\
The 2nd argument and beyond of convertInternalPatternsForExternalToInternal \
must be Options.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"convertInternalPatternsForExternalToInternal", "[", 
     RowBox[{"_", ",", "___", ",", 
      RowBox[{"notOption_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "OptionQ"}], "]"}], ")"}]}], ",", "___"}], "]"}]}],
    " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{
      "convertInternalPatternsForExternalToInternal", "::", "nonopt"}], ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stripSpuriousRowBox", " ", "@", " ", 
    RowBox[{"RowBox", " ", "@", " ", 
     RowBox[{"{", "args___", "}"}]}]}], "/;", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"{", "args", "}"}], ",", " ", 
     RowBox[{"\"\<,\>\"", " ", "|", " ", "\"\<\[InvisibleComma]\>\""}]}], 
    "]"}]}], " ", ":=", " ", "args"}], "\n", 
 RowBox[{
  RowBox[{"stripSpuriousRowBox", " ", "@", " ", "other___"}], " ", ":=", " ", 
  "other"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertInternalBoxesForExternalToInternal", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertInternalBoxesForExternalToInternal", "[", 
    RowBox[{"internalBoxes_", ",", " ", "headIsRowBox_", ",", " ", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"internal", " ", "=", " ", 
        RowBox[{"convertInternalPatternsForExternalToInternal", " ", "[", " ", 
         RowBox[{
          RowBox[{"cleanBoxes", " ", "@", " ", "internalBoxes"}], ",", " ", 
          "opts"}], " ", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"WorkingFormOpt", " ", "=", " ", 
        RowBox[{
         RowBox[{"WorkingForm", " ", "/.", " ", 
          RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
         RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"headIsRowBox", ",", "\[IndentingNewLine]", 
       RowBox[{"myHold", " ", "@", " ", 
        RowBox[{"MakeExpression", "[", 
         RowBox[{
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"lhs", ",", "internal", ",", "rhs"}], "}"}], "]"}], ",", 
          "WorkingFormOpt"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"myHold", " ", "@", " ", 
        RowBox[{"MakeExpression", "[", 
         RowBox[{"internal", ",", "WorkingFormOpt"}], "]"}]}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertExternalPatternsForExternalToInternal", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["convertExternalPatternsForExternalToInternal", \
"MR"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["convertExternalPatternsForExternalToInternal", "MR"],
 " will take an expression consisting of boxes and convert all patterns \
present in the boxes\[LongDash]patterns that are currently still unparsed \
strings and not yet expressions\[LongDash]to the corresponding patterned \
expressions, leaving the other boxes alone."
}], "Text",
 CellChangeTimes->{3.452604962744216*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertExternalPatternsForExternalToInternal", "[", 
    RowBox[{"patternBoxes_", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"boxedStringPatternsToPatterns", "[", 
    RowBox[{"patternBoxes", ",", "opts"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error checking for ",
 StyleBox["convertInternalPatternsForExternalToInternal", "MR",
  FontFamily->"Helvetica"]
}], "NumberedSubsubsubtitle"],

Cell["\<\
The 2nd argument and beyond of convertExternalPatternsForExternalToInternal \
must be Options.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"convertExternalPatternsForExternalToInternal", "[", 
     RowBox[{"_", ",", "___", ",", 
      RowBox[{"notOption_", "?", 
       RowBox[{"(", 
        RowBox[{"isNot", "[", 
         RowBox[{"_", "?", "OptionQ"}], "]"}], ")"}]}], ",", "___"}], "]"}]}],
    " ", ":=", " ", 
   RowBox[{"$Failed", "/;", "\[IndentingNewLine]", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{
      "convertExternalPatternsForExternalToInternal", "::", "nonopt"}], ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "notOption"}], ",", " ", "1", ",", 
      " ", 
      RowBox[{"HoldForm", " ", "@", " ", "error"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertExternalBoxesForExternalToInternal", "NumberedSubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertExternalBoxesForExternalToInternal", "[", 
    RowBox[{"externalBoxes_", ",", " ", "headIsRowBox_", ",", " ", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"external", " ", "=", " ", 
        RowBox[{"convertExternalPatternsForExternalToInternal", " ", "[", " ", 
         RowBox[{
          RowBox[{"cleanBoxes", " ", "@", " ", "externalBoxes"}], ",", " ", 
          "opts"}], " ", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"WorkingFormOpt", " ", "=", " ", 
        RowBox[{
         RowBox[{"WorkingForm", " ", "/.", " ", 
          RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
         RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"headIsRowBox", ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"newexternal", " ", "=", " ", 
           RowBox[{"RowBox", " ", "@", " ", 
            RowBox[{"{", 
             RowBox[{"lhs___", ",", 
              RowBox[{"Sequence", " ", "@@", " ", 
               RowBox[{"Sequence", " ", "@@", " ", "external"}]}], ",", 
              "rhs___"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"myHold", " ", "@", " ", 
          RowBox[{"NotationMakeExpression", "[", 
           RowBox[{"newexternal", ",", " ", "WorkingFormOpt"}], "]"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"myHold", " ", "@", " ", 
        RowBox[{"NotationMakeExpression", "[", 
         RowBox[{"external", ",", " ", "WorkingFormOpt"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of createExternalToInternalRule", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creates appropriate ",
 StyleBox["MakeExpression", "MR"],
 " rule"
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "This creates a ",
 StyleBox["MakeExpression", "MR"],
 " rule that will parse an external box structure into an internal box \
structure."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"createExternalToInternalRule", "[", 
    RowBox[{
    "externalBoxes_", ",", " ", "internalBoxes_", ",", " ", "opts___"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"headIsRowBox", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Head", " ", "@", " ", 
          RowBox[{
          "convertExternalPatternsForExternalToInternal", " ", "@", " ", 
           RowBox[{"cleanBoxes", " ", "@", " ", "externalBoxes"}]}]}], " ", "===",
          " ", "RowBox"}], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"internal", " ", "=", " ", 
          RowBox[{
          "convertInternalBoxesForExternalToInternal", " ", "[", " ", 
           RowBox[{
           "internalBoxes", ",", " ", "headIsRowBox", ",", " ", "opts"}], " ",
            "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"external", " ", "=", " ", 
          RowBox[{
          "convertExternalBoxesForExternalToInternal", " ", "[", " ", 
           RowBox[{
           "externalBoxes", ",", " ", "headIsRowBox", ",", " ", "opts"}], " ",
            "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"WorkingFormOpt", " ", "=", " ", 
          RowBox[{
           RowBox[{"WorkingForm", " ", "/.", " ", 
            RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
           RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ActionOpt", " ", "=", " ", 
          RowBox[{
           RowBox[{"Action", " ", "/.", " ", 
            RowBox[{"{", "opts", "}"}]}], " ", "/.", " ", 
           RowBox[{"adjustedOptions", " ", "@", " ", "Notation"}]}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"executeExternalToInternalAction", "[", 
         RowBox[{
         "external", ",", " ", "internal", ",", " ", "WorkingFormOpt", ",", 
          " ", "ActionOpt"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enter, remove or print rule", "NumberedSubsubsubtitle",
 CellChangeTimes->{3.452604983159479*^9}],

Cell["\<\
This determines if the rule should be entered, removed or printed.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"executeExternalToInternalAction", "[", " ", 
    RowBox[{
    "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",",
      " ", "CreateNotationRules"}], "]"}], ":=", 
   RowBox[{"releaseMyHold", "[", " ", 
    RowBox[{"external", " ", ":=", " ", "internal"}], " ", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"executeExternalToInternalAction", "[", " ", 
    RowBox[{
    "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",",
      " ", "RemoveNotationRules"}], "]"}], ":=", 
   RowBox[{"releaseMyHold", "[", 
    RowBox[{"external", " ", "=."}], " ", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"executeExternalToInternalAction", "[", " ", 
    RowBox[{
    "external_", ",", " ", "internal_", " ", ",", " ", "WorkingFormOpt_", ",",
      " ", "PrintNotationRules"}], "]"}], ":=", 
   RowBox[{"releaseMyHold", " ", "@", " ", 
    RowBox[{"CellPrint", " ", "@", " ", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", " ", "@", " ", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{
          RowBox[{"external", " ", ":=", " ", "internal"}], ",", " ", 
          "StandardForm"}], "]"}]}], ",", "\"\<Output\>\"", ",", 
       RowBox[{"ShowStringCharacters", "->", "True"}]}], "]"}]}]}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities for the Package and Cleanups", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["ClearNotations", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ClearNotations[]", "Input"]], "NumberedSubsubsubtitle"],

Cell[TextData[{
 "This function removes all definitions for ",
 StyleBox["MakeBoxes", "MR"],
 " and ",
 StyleBox["MakeExpression", "MR"],
 ", leaving only the definitions of this package, Notation.m. Use this \
function to reset the notation handling to a pristine state."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearNotations", "[", "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"NotationMakeExpression", ",", "NotationMakeBoxes"}], "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NotationMakeExpression", "[", 
      RowBox[{
       RowBox[{"TagBox", "[", 
        RowBox[{
        "boxes_", ",", " ", "\"\<NotationTemplateTag\>\"", ",", "opts___"}], 
        "]"}], ",", " ", "anyForm_"}], "]"}], " ", ":=", " ", 
     RowBox[{"HoldComplete", " ", "@", " ", 
      RowBox[{"ParsedBoxWrapper", " ", "@", " ", "boxes"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NotationMakeExpression", "[", 
      RowBox[{
       RowBox[{"TagBox", "[", 
        RowBox[{"boxes_", ",", " ", "NotationBoxTag", ",", "opts___"}], "]"}],
        ",", " ", "anyForm_"}], "]"}], " ", ":=", " ", 
     RowBox[{"HoldComplete", " ", "@", " ", 
      RowBox[{"ParsedBoxWrapper", " ", "@", " ", "boxes"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NotationMakeBoxes", "[", 
      RowBox[{
       RowBox[{"ParsedBoxWrapper", "[", "boxes__", "]"}], ",", " ", 
       "anyForm_"}], "]"}], ":=", " ", 
     RowBox[{"TemplateBox", "[", 
      RowBox[{
       RowBox[{"{", "boxes", "}"}], ",", "\"\<NotationTemplateTag\>\""}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NotationMakeBoxes", "[", 
      RowBox[{
       RowBox[{"identityForm", "[", "any___", "]"}], ",", " ", "anyForm_"}], 
      "]"}], ":=", " ", "any"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Error Checking for ",
 StyleBox["ClearNotations", "MR"],
 "."
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["ClearNotations", "MR"],
 " expects no arguments."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"ClearNotations", "[", "_", "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", " ", "/;", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ClearNotations", "::", "argr"}], ",", 
      RowBox[{"HoldForm", " ", "@", " ", "ClearNotations"}], ",", "0"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"error", " ", ":", 
    RowBox[{"ClearNotations", "[", 
     RowBox[{"_", ",", "__"}], "]"}]}], " ", ":=", " ", 
   RowBox[{"$Failed", " ", "/;", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ClearNotations", "::", "argrx"}], ",", 
      RowBox[{"HoldForm", " ", "@", " ", "ClearNotations"}], ",", 
      RowBox[{"heldLength", " ", "@", " ", "error"}], ",", "0"}], "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["updateInputAliases", "MR"]], "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["updateInputAliases", "MR"],
 StyleBox["[]", "Input"]
}], "NumberedSubsubsubtitle"],

Cell[TextData[{
 StyleBox["UpdateInputAliases", "MR"],
 " will ensure the ",
 StyleBox["Notation",
  FontSlant->"Italic"],
 " aliases are part of the system and of the given stylesheet. It will also \
add aliases for ",
 StyleBox["Notation", "MR"],
 ", ",
 StyleBox["Symbolize", "MR"],
 ", ",
 StyleBox["InfixNotation", "MR"],
 ", and ",
 StyleBox["AddInputAlias", "MR"],
 ". "
}], "Text",
 CellChangeTimes->{3.45260502420011*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["updateInputAliases", "MR"], "[", "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"AddInputAlias", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<notation\>\"", "\[Rule]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Notation\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}], ",", "\"\< \>\"", 
                ",", "\"\<\[DoubleLongLeftRightArrow]\>\"", ",", "\"\< \>\"", 
                ",", 
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[Placeholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}]}], "}"}], "]"}], 
             ",", "\"\<]\>\""}], "}"}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<notation>\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Notation\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}], ",", "\"\< \>\"", 
                ",", "\"\<\[DoubleLongRightArrow]\>\"", ",", "\"\< \>\"", ",", 
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[Placeholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}]}], "}"}], "]"}], 
             ",", "\"\<]\>\""}], "}"}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<notation<\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Notation\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}], ",", "\"\< \>\"", 
                ",", "\"\<\[DoubleLongLeftArrow]\>\"", ",", "\"\< \>\"", ",", 
                
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[Placeholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}]}], "}"}], "]"}], 
             ",", "\"\<]\>\""}], "}"}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<symb\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Symbolize\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"TemplateBox", "[", 
              RowBox[{
               RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", 
               "\"\<NotationTemplateTag\>\""}], "]"}], ",", "\"\<]\>\""}], 
            "}"}], "]"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<infixnotation\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<InfixNotation\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}], ",", "\"\<,\>\"", 
                ",", "\"\<\[Placeholder]\>\""}], "}"}], "]"}], ",", 
             "\"\<]\>\""}], "}"}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<addia\>\"", "\[Rule]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"RowBox", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<AddInputAlias\>\"", ",", "\"\<[\>\"", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\\\"\[SelectionPlaceholder]\\\"\>\"", ",", 
                "\"\<\[Rule]\>\"", ",", 
                RowBox[{"TemplateBox", "[", 
                 RowBox[{
                  RowBox[{"{", "\"\<\[Placeholder]\>\"", "}"}], ",", 
                  "\"\<NotationTemplateTag\>\""}], "]"}]}], "}"}], "]"}], 
             ",", "\"\<]\>\""}], "}"}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<pattwraper\>\"", "\[Rule]", " ", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"TemplateBox", "[", 
           RowBox[{
            RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", " ", 
            "\"\<NotationPatternTag\>\""}], "]"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<madeboxeswraper\>\"", "\[Rule]", 
        RowBox[{"ParsedBoxWrapper", "@@", 
         RowBox[{"{", 
          RowBox[{"TemplateBox", "[", 
           RowBox[{
            RowBox[{"{", "\"\<\[SelectionPlaceholder]\>\"", "}"}], ",", " ", 
            "\"\<NotationMadeBoxesTag\>\""}], "]"}], "}"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "System`$FrontEnd"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Endings", "NumberedSubtitle"],

Cell[CellGroupData[{

Cell["Establish Autointeractive values", "NumberedSubsubtitle",
 CellChangeTimes->{3.452605099490953*^9}],

Cell["If any of these values are undefined they default to True.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"\[Not]", 
     RowBox[{"ValueQ", " ", "@", " ", "AutoLoadNotationPalette"}]}], ",", 
    RowBox[{"AutoLoadNotationPalette", "=", "True"}]}], "]"}], ";"}]], "Input",\

 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Open the Palettes", "NumberedSubsubtitle"],

Cell["\<\
We try to obtain a localized version of the palettes if one is available, but \
otherwise we fall back to English palettes.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "getLocalizedPalettesFilePath", " ", "@", " ", "paletteName_String"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", "=", 
       RowBox[{"ToFileName", "[", 
        RowBox[{"{", 
         RowBox[{
         "$TopDirectory", ",", "\"\<AddOns\>\"", ",", "\"\<Packages\>\"", 
          ",", "\"\<Notation\>\"", ",", "\"\<LocalPalettes\>\"", ",", 
          "$Language"}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ToFileName", "[", 
       RowBox[{"dir", ",", "paletteName"}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"paletteName", ",", 
          RowBox[{"{", "dir", "}"}]}], "]"}], "=!=", 
        RowBox[{"{", "}"}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "getLocalizedPalettesFilePath", " ", "@", " ", "paletteName_String"}], " ",
    ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", "=", 
       RowBox[{"ToFileName", "[", 
        RowBox[{"{", 
         RowBox[{
         "$TopDirectory", ",", "\"\<AddOns\>\"", ",", "\"\<Packages\>\"", 
          ",", "\"\<Notation\>\"", ",", "\"\<LocalPalettes\>\"", ",", 
          "\"\<English\>\""}], "}"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"dir", ",", "paletteName"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Open the Notation palette by default. Note with remote kernels ",
 StyleBox["NotebookOpen", "MR"],
 " does not work properly.",
 " ",
 "Make sure the main notebook remains selected."
}], "Text"],

Cell[BoxData[
 RowBox[{"If", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"AutoLoadNotationPalette", " ", "===", " ", "True"}], " ", 
    "\[And]", " ", 
    RowBox[{
     RowBox[{"Notebooks", "[", "\"\<Notation Palette\>\"", "]"}], " ", "===", 
     " ", 
     RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nb", " ", "=", " ", 
        RowBox[{"InputNotebook", "[", "]"}]}], ",", 
       RowBox[{"filePath", " ", "=", 
        RowBox[{
        "getLocalizedPalettesFilePath", " ", "@", " ", 
         "\"\<NotationPalette.nb\>\""}]}]}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"$Linked", ",", "\[IndentingNewLine]", 
        RowBox[{"NotebookPut", " ", "@", " ", 
         RowBox[{"Get", " ", "@", " ", "filePath"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookOpen", " ", "@", " ", "filePath"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetSelectedNotebook", " ", "@", " ", "nb"}], ";"}]}], "]"}]}], 
  "]"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update the input aliases if necessary", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["Update input aliases if necessary", "NumberedSubsubsubtitle"],

Cell[TextData[{
 "Finally, ensure the ",
 StyleBox["Notation",
  FontSlant->"Italic"],
 " aliases are present in the system."
}], "Text",
 CellChangeTimes->{{3.452605117232114*^9, 3.452605125031911*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"updateInputAliases", "[", "]"}], "MR"], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Warn if the current default input and output forms differ", \
"NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "difform"}], " ", "=", " ", 
   "\"\<The defined current default input format `1` differs from the current \
default output format `2`. The WorkingForm option will default to the current \
default output format, but the Notations, Symbolizations, and InfixNotations \
may behave differently than expected.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "notintypesetform"}], " ", "=", " ", 
   "\"\<The defined current default input format `1` is not a typeset form. \
Notations, Symbolizations, and InfixNotations do not work with `1` since this \
form is not a typeset form.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Notation", "::", "notouttypesetform"}], " ", "=", " ", 
   "\"\<The defined current default output format `1` is not a typeset form. \
Notations, Symbolizations, and InfixNotations do not work with `1` since this \
form is not a typeset form.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inForm", " ", "=", " ", 
      RowBox[{"AbsoluteCurrentValue", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CommonDefaultFormatTypes", ",", "\"\<Input\>\""}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"outForm", "=", 
      RowBox[{"AbsoluteCurrentValue", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CommonDefaultFormatTypes", ",", "\"\<Output\>\""}], "}"}]}],
        "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"inForm", " ", "=!=", "outForm"}], ",", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "difform"}], ",", "inForm", ",", 
        "outForm"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"inForm", "\[Equal]", "InputForm"}], " ", "||", " ", 
       RowBox[{"inForm", " ", "\[Equal]", "OutputForm"}]}], ",", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "notintypesetform"}], ",", "inForm"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"outForm", "\[Equal]", "InputForm"}], " ", "||", " ", 
       RowBox[{"outForm", " ", "\[Equal]", "OutputForm"}]}], ",", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Notation", "::", "notouttypesetform"}], ",", "outForm"}], 
       "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the package", "NumberedSubsubtitle"],

Cell[CellGroupData[{

Cell["End Private", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Protect Notation functions", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ClearNotations", ",", "InfixNotation", ",", "Notation", ",", 
     "ParsedBoxWrapper", ",", "NotationBoxTag", ",", "RemoveInfixNotation", 
     ",", "RemoveNotation", ",", " ", "RemoveSymbolize", ",", "Symbolize", 
     ",", "AddInputAlias", ",", "ActiveInputAliases"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ReadProtected", ",", "Protected"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Action", ",", "CreateNotationRules", ",", "NotationPatternTag", ",", 
     "NotationMadeBoxesTag", ",", "PrintNotationRules", ",", 
     "RemoveNotationRules", ",", "SymbolizeRootName", ",", "WorkingForm"}], 
    "}"}], ",", 
   RowBox[{"{", "Protected", "}"}]}], "]"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the Package", "NumberedSubsubsubtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
WindowSize->{1007, 869},
WindowMargins->{{269, Automatic}, {Automatic, 70}},
Visible->True,
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
ShowCellTags->True,
CommonDefaultFormatTypes->{"TextInline"->TraditionalForm},
InputAliases->{"notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TagBox["\[Placeholder]", "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TagBox["\[Placeholder]", "NotationTemplateTag"]}], "]"}], "notation<" -> 
  RowBox[{"Notation", "[", 
     RowBox[{
       TagBox["\[Placeholder]", "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TagBox["\[Placeholder]", "NotationTemplateTag"]}], "]"}], "symb" -> 
  RowBox[{"Symbolize", "[", 
     TagBox["\[Placeholder]", "NotationTemplateTag"], "]"}], "infixnotation" -> 
  RowBox[{"InfixNotation", "[", 
     RowBox[{
       TagBox["\[Placeholder]", "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[Placeholder]\"", "\[Rule]", 
       TagBox["\[Placeholder]", "NotationTemplateTag"]}], "]"}], "pattwraper" -> 
  TagBox["\[Placeholder]", "NotationPatternTag"], "madeboxeswraper" -> 
  TagBox["\[Placeholder]", "NotationMadeBoxesTag"], "notation" -> 
  RowBox[{"Notation", "[", 
     RowBox[{
       TagBox["\[Placeholder]", "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TagBox["\[Placeholder]", "NotationTemplateTag"]}], "]"}]},
AutoStyleOptions->{"FunctionLocalVariableStyle"->{
 FontColor -> RGBColor[0.235, 0.49, 0.568]},
"HighlightUndefinedSymbols"->False,
"LocalVariableStyle"->{
 FontColor -> 
  RGBColor[0.41551842526894, 0.0188296330205234, 0.425345235370413], 
  FontSlant -> "Italic"},
"PatternVariableStyle"->{
 FontColor -> RGBColor[0.263, 0.537, 0.345], FontSlant -> "Italic"}},
LineIndent->3,
Magnification->1,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Package Develop Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headings", "Section"], 
      Cell[
       StyleData["Title"], CellMargins -> {{12, Inherited}, {20, 40}}, 
       CellGroupingRules -> {"SectionGrouping", 0}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Title", 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Theorem", 0}, {"Lemma", 0}, {"Definition", 0}, {
         "Conjecture", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {
         "Subsubsubtitle", 0}}, FontFamily -> "Helvetica", FontSize -> 36, 
       FontWeight -> "Bold", FontColor -> 
       RGBColor[0.011841, 0.263554, 0.0773175]], 
      Cell[
       StyleData["Subtitle"], CellMargins -> {{12, Inherited}, {20, 15}}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> {"Subtitle", "RunningHead"}, 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Theorem", 0}, {"Lemma", 0}, {"Definition", 0}, {
         "Conjecture", 0}, {"Subsubtitle", 0}, {"Subsubsubtitle", 0}}, 
       FontFamily -> "Helvetica", FontSize -> 24, FontColor -> 
       RGBColor[0.36, 0, 0.016]], 
      Cell[
       StyleData["Subsubtitle"], CellMargins -> {{12, Inherited}, {20, 15}}, 
       CellGroupingRules -> {"SectionGrouping", 20}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubtitle", 
       CounterAssignments -> {{"Section", 0}, {"Subsubsubtitle", 0}}, 
       FontFamily -> "Helvetica", FontSize -> 18, FontSlant -> "Plain", 
       FontColor -> RGBColor[0.2, 0, 0.2]], 
      Cell[
       StyleData["Subsubsubtitle"], 
       CellMargins -> {{12, Inherited}, {20, 15}}, 
       CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubsubtitle", 
       CounterAssignments -> {{"Section", 0}}, FontFamily -> "Helvetica", 
       FontSize -> 14, FontSlant -> "Plain", FontColor -> 
       RGBColor[0.2, 0, 0.2]], 
      Cell[
       StyleData["Section"], CellDingbat -> "\[FilledSquare]", 
       CellMargins -> {{25, Inherited}, {8, 24}}, 
       CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
       FontFamily -> "Helvetica", FontSize -> 20, FontWeight -> "Bold", 
       FontColor -> RGBColor[1, 0, 0]], 
      Cell[
       StyleData["Subsection"], CellDingbat -> "\[FilledSmallSquare]", 
       CellMargins -> {{22, Inherited}, {8, 20}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}}, FontSize -> 16, 
       FontWeight -> "Bold", FontColor -> RGBColor[0, 0, 1]], 
      Cell[
       StyleData["Subsubsection"], CellDingbat -> "\[FilledSmallSquare]", 
       CellMargins -> {{22, Inherited}, {8, 18}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubsection", FontSize -> 
       14, FontWeight -> "Bold", FontColor -> 
       RGBColor[0.398199, 0.00248722, 0.519249]], 
      Cell[
       StyleData["CommentText"], CellFrame -> True, 
       CellMargins -> {{6, Inherited}, {4, 10}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, CellFrameColor -> 
       RGBColor[0.635462, 0.297017, 0.992798], StyleMenuListing -> None, 
       FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> "Bold", 
       FontSlant -> "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Outline" -> False, "Shadow" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.544305, 0.0644388, 0.234394], Background -> 
       RGBColor[0.946792, 0.921813, 0.998779]], 
      Cell[
       StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
       LineSpacing -> {1, 3}, CounterIncrements -> "Text", FontFamily -> 
       "Times"], 
      Cell[
       StyleData["TechnicalNote"], CellMargins -> {{12, 10}, {6, 6}}, 
       DefaultNewInlineCellStyle -> "None", LineSpacing -> {1, 3}, 
       LanguageCategory -> "NaturalLanguage", FontFamily -> "Helvetica", 
       FontSize -> 9]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input/Output", "Section"], 
      Cell[
       StyleData["DarkBlueTimesItalic"], FontFamily -> "Times", FontSlant -> 
       "Italic", FontColor -> RGBColor[0, 0, 0.4]], 
      Cell[
       StyleData["Input"], CellMargins -> {{45, 10}, {5, 7}}, 
       CellHorizontalScrolling -> True, PageBreakWithin -> Automatic, 
       GroupPageBreakWithin -> Automatic, 
       AutoStyleOptions -> {
        "FunctionLocalVariableStyle" -> {"DarkBlueTimesItalic"}, 
         "HighlightUndefinedSymbols" -> False, 
         "LocalVariableStyle" -> {"DarkBlueTimesItalic"}, 
         "PatternVariableStyle" -> {"DarkBlueTimesItalic"}}, 
       ShowStringCharacters -> True, FontWeight -> "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
       LineSpacing -> {1, 3}, CounterIncrements -> "Text", FontFamily -> 
       "Times"], 
      Cell[
       StyleData["SmallText"], CellMargins -> {{12, 10}, {6, 6}}, 
       DefaultNewInlineCellStyle -> "None", LineSpacing -> {1, 3}, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "SmallText", FontFamily -> "Helvetica", FontSize -> 9]}, Closed]], 
   Cell["Emphasis Boxes and Pictures", "Section"], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DisplayCellStructure"], CellFrame -> 0.5, 
       CellMargins -> {{20, 4}, {8, 8}}, CellHorizontalScrolling -> True, 
       AutoSpacing -> False, LineIndent -> 3, FontFamily -> "Courier", 
       FontWeight -> "Plain", Background -> GrayLevel[0.949996]], 
      Cell[
       StyleData["DisplayCellStructure", "Printout"], 
       CellMargins -> {{20, 4}, {8, 8}}, FontSize -> 10, Background -> 
       GrayLevel[0.949996]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Hidden Entry", "Section"], 
      Cell[
      "The cells in these styles are hidden in that you need to choose the \
environment WorkingPlusIndices to show them. Hidden styles are used for \
annotations and other information to be stored but not be visable.", "Text"]},
      Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["HiddenInput"], ShowCellBracket -> False, 
       CellMargins -> {{Inherited, Inherited}, {0, -5}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, Evaluatable -> True, 
       CellOpen -> False, CellHorizontalScrolling -> True, DefaultFormatType -> 
       DefaultInputFormatType, FormatType -> InputForm, ShowStringCharacters -> 
       True], 
      Cell[
       StyleData["HiddenInput", "WorkingPlusHidden"], ShowCellBracket -> True,
        CellMargins -> {{Inherited, Inherited}, {5, 5}}, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.749996, 0.000015259, 0.0751354]}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, Evaluatable -> True, 
       CellOpen -> True, CellHorizontalScrolling -> True], 
      Cell[
       StyleData["HiddenInput", "Printout10C"], ShowCellBracket -> False, 
       CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, Evaluatable -> True, 
       CellOpen -> False, CellHorizontalScrolling -> True, PageBreakBelow -> 
       False], 
      Cell[
       StyleData["HiddenInput", "Printout10.5C"], ShowCellBracket -> False, 
       CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, Evaluatable -> True, 
       CellOpen -> False, CellHorizontalScrolling -> True, PageBreakBelow -> 
       False], 
      Cell[
       StyleData["HiddenInput", "Printout11C"], ShowCellBracket -> False, 
       CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, Evaluatable -> True, 
       CellOpen -> False, CellHorizontalScrolling -> True, PageBreakBelow -> 
       False]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["HiddenSubsubsection"], CellDingbat -> 
       "\[FilledSmallSquare]", ShowCellBracket -> False, 
       CellMargins -> {{22, Inherited}, {0, -5}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       PrivateCellOptions -> {"DefaultCellGroupOpen" -> True}, CellOpen -> 
       False, CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
       False, DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubsection", FontSize -> 
       14, FontWeight -> "Bold", FontColor -> 
       RGBColor[0.398199, 0.00248722, 0.519249]], 
      Cell[
       StyleData["HiddenSubsubsection", "WorkingPlusHidden"], CellDingbat -> 
       "\[FilledSmallSquare]", ShowCellBracket -> True, 
       CellMargins -> {{22, Inherited}, {8, 18}}, CellOpen -> True, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubsection", FontSize -> 
       14, FontWeight -> "Bold", FontColor -> 
       RGBColor[0.398199, 0.00248722, 0.519249]], 
      Cell[
       StyleData["HiddenSubsubsection", "Printout10C"], ShowCellBracket -> 
       False, CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0},
        CellOpen -> False, CellHorizontalScrolling -> True, PageBreakBelow -> 
       False], 
      Cell[
       StyleData["HiddenSubsubsection", "Printout10.5C"], ShowCellBracket -> 
       False, CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"CellMinHeight" -> 0}, CellOpen -> False, 
       CellHorizontalScrolling -> True, PageBreakBelow -> False], 
      Cell[
       StyleData["HiddenSubsubsection", "Printout11C"], ShowCellBracket -> 
       False, CellMargins -> {{12, 10}, {0, -5}}, 
       CellElementSpacings -> {"CellMinHeight" -> 0}, CellOpen -> False, 
       CellHorizontalScrolling -> True, PageBreakBelow -> False]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Formulas and Programming", "Section"], 
      Cell[
      "The next cell contains a hidden input cell. It is used to have input \
that is hidden.", "Text"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Program"], CellFrame -> {{0, 0}, {0.25, 0.25}}, 
       CellMargins -> {{20, 4}, {0, 8}}, CellHorizontalScrolling -> True, 
       Hyphenation -> False, LanguageCategory -> "Formula", ScriptLevel -> 1, 
       FontFamily -> "Courier"], 
      Cell[
       StyleData["Program", "Presentation"], 
       CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}], 
      Cell[
       StyleData["Program", "Condensed"], CellMargins -> {{8, 10}, {6, 6}}, 
       LineSpacing -> {1, 1}], 
      Cell[
       StyleData["Program", "Printout"], CellMargins -> {{2, 0}, {6, 6}}, 
       FontSize -> 9], 
      Cell[
       StyleData["Program", "Printout10C"], CellMargins -> {{2, 0}, {6, 6}}, 
       FontSize -> 9], 
      Cell[
       StyleData["Program", "Printout10.5C"], CellMargins -> {{2, 0}, {6, 6}},
        FontSize -> 9], 
      Cell[
       StyleData["Program", "Printout11C"], CellMargins -> {{2, 0}, {6, 6}}, 
       FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Commentary"], CellFrame -> {{2, 0}, {0, 0}}, 
       CellMargins -> {{36, 10}, {7, 7}}, PageBreakBelow -> False, 
       CellFrameMargins -> 8, CellFrameColor -> RGBColor[0, 0.2, 1], 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 8}, FontSlant -> 
       "Italic"], 
      Cell[
       StyleData["Commentary", "Printout"], CellMargins -> {{32, 0}, {6, 6}}, 
       CellFrameColor -> GrayLevel[0.8], FontSize -> 10], 
      Cell[
       StyleData["Commentary", "Printout10C"], 
       CellMargins -> {{32, 0}, {6, 6}}, CellFrameColor -> GrayLevel[0.8], 
       FontSize -> 10], 
      Cell[
       StyleData["Commentary", "Printout10.5C"], 
       CellMargins -> {{32, 0}, {6, 6}}, CellFrameColor -> GrayLevel[0.8], 
       FontSize -> 10], 
      Cell[
       StyleData["Commentary", "Printout11C"], 
       CellMargins -> {{32, 0}, {6, 6}}, CellFrameColor -> GrayLevel[0.8], 
       FontSize -> 10]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TechnicalNote"], CellMargins -> {{12, 10}, {6, 6}}, 
       DefaultNewInlineCellStyle -> "None", LineSpacing -> {1, 3}, 
       LanguageCategory -> "NaturalLanguage", FontFamily -> "Helvetica", 
       FontSize -> 9], 
      Cell[
       StyleData["TechnicalNote", "Presentation"], 
       CellMargins -> {{24, 10}, {8, 8}}, LineSpacing -> {1, 5}, FontSize -> 
       12], 
      Cell[
       StyleData["TechnicalNote", "Condensed"], 
       CellMargins -> {{8, 10}, {5, 5}}, LineSpacing -> {1, 2}, FontSize -> 
       9], 
      Cell[
       StyleData["TechnicalNote", "Printout"], 
       CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, FontSize -> 
       7], 
      Cell[
       StyleData["TechnicalNote", "Printout10C"], 
       CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, FontSize -> 
       7], 
      Cell[
       StyleData["TechnicalNote", "Printout10.5C"], 
       CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, FontSize -> 
       7], 
      Cell[
       StyleData["TechnicalNote", "Printout11C"], 
       CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, FontFamily -> 
       "GillSans Light", FontSize -> 9], 
      Cell[
       StyleData["TechnicalNote", "Printout10.5C"], 
       CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, FontSize -> 
       7]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["MathCaption"], CellDingbat -> "\[FilledSmallSquare]", 
       CellMargins -> {{19, 62}, {0, 14}}, PageBreakBelow -> False, 
       CellFrameLabelMargins -> 4, LineSpacing -> {1, 1}, 
       ParagraphSpacing -> {0, 8}, FontColor -> RGBColor[0, 0, 0.4]], 
      Cell[
       StyleData["MathCaption", "Printout"], CellMargins -> {{9, 0}, {0, 14}},
        FontSize -> 9, FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["MathCaption", "Printout10C"], 
       CellMargins -> {{9, 0}, {0, 14}}, FontSize -> 9], 
      Cell[
       StyleData["MathCaption", "Printout10.5C"], 
       CellMargins -> {{9, 0}, {0, 14}}, FontSize -> 9], 
      Cell[
       StyleData["MathCaption", "Printout11C"], 
       CellMargins -> {{9, 0}, {0, 14}}, FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Caption"], CellMargins -> {{10, 4}, {0, 3}}, PageBreakAbove -> 
       False, StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
       9], 
      Cell[
       StyleData["Caption", "Printout"], CellMargins -> {{2, 0}, {0, 3}}, 
       FontSize -> 7], 
      Cell[
       StyleData["Caption", "Printout10C"], CellMargins -> {{2, 0}, {0, 3}}, 
       FontSize -> 7], 
      Cell[
       StyleData["Caption", "Printout10.5C"], CellMargins -> {{2, 0}, {0, 3}},
        FontSize -> 7], 
      Cell[
       StyleData["Caption", "Printout11C"], CellMargins -> {{2, 0}, {0, 3}}, 
       FontSize -> 7]}, Closed]], 
   Cell["Non-Numbered Equation", "Subsubsection"], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["NonNumberedEquation"], CellMargins -> {{45, 10}, {7, 7}}, 
       ShowStringCharacters -> True, FormatTypeAutoConvert -> False], 
      Cell[
       StyleData["NonNumberedEquation", "Printout"], 
       CellMargins -> {{35, 10}, {7, 7}}, FontSize -> 10], 
      Cell[
       StyleData["NonNumberedEquation", "Printout10C"], 
       CellMargins -> {{35, 10}, {7, 7}}, FontSize -> 10], 
      Cell[
       StyleData["NonNumberedEquation", "Printout10.5C"], 
       CellMargins -> {{35, 10}, {7, 7}}, FontSize -> 10], 
      Cell[
       StyleData["NonNumberedEquation", "Printout11C"], 
       CellMargins -> {{35, 10}, {7, 7}}, FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Hyperlink Styles", "Section"], 
      Cell[
      "The cells below define styles useful for making hypertext ButtonBoxes. \
 The \"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.", "Text"]}, Closed]], 
   Cell["Styles for Numbered objects", "Section"], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Numbered Headings", "Subsection", 
       CounterAssignments -> {{"Title", 0}, {"Equation", 0}, {"Figure", 0}, {
         "Subtitle", 0}, {"Subsubtitle", 0}, {"ReferenceNumber", 0}}], 
      Cell[
      "These styles are based off the styles above but add counters as \
CellFrameLabels", "Text"], 
      Cell[
       StyleData["NumberedTitle", StyleDefinitions -> StyleData["Title"]], 
       PageWidth -> WindowWidth, ShowClosedCellArea -> True, PageBreakAbove -> 
       True, CellFrameLabels -> {{Inherited, None}, {None, None}}, 
       CounterIncrements -> "Title", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData[
       "NumberedSubtitle", StyleDefinitions -> StyleData["Subtitle"]], 
       PageWidth -> WindowWidth, CellMargins -> {{12, Inherited}, {10, 30}}, 
       CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Title"], ".", 
             CounterBox["Subtitle"], " "}]], None}, {None, None}}, FontWeight -> 
       "Plain", FontColor -> RGBColor[0, 0.027, 0.2]], 
      Cell[
       StyleData[
       "NumberedSubsubtitle", StyleDefinitions -> StyleData["Subsubtitle"]], 
       PageWidth -> WindowWidth, CellMargins -> {{12, Inherited}, {10, 30}}, 
       CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Title"], ".", 
             CounterBox["Subtitle"], ".", 
             CounterBox["Subsubtitle"], " "}]], None}, {None, None}}], 
      Cell[
       StyleData[
       "NumberedSubsubsubtitle", StyleDefinitions -> 
        StyleData["Subsubsubtitle"]], PageWidth -> WindowWidth, 
       CellMargins -> {{12, Inherited}, {10, 30}}, CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Title"], ".", 
             CounterBox["Subtitle"], ".", 
             CounterBox["Subsubtitle"], ".", 
             CounterBox["Subsubsubtitle"], " "}]], None}, {None, None}}, 
       FontColor -> RGBColor[0.22, 0, 0]], 
      Cell[
       StyleData["NumberedSection"], CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Section"], ".", 
             CounterBox["Subsection"], ".", 
             CounterBox["Subsubsection"], " "}]], None}, {None, None}}, 
       CounterIncrements -> "Section", FontSize -> 16, FontWeight -> "Bold", 
       FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["NumberedSubsection"], CellDingbat -> "\[FilledSmallSquare]",
        CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Section"], ".", 
             CounterBox["Subsection"], ".", 
             CounterBox["Subsubsection"], " "}]], None}, {None, None}}, 
       CounterIncrements -> "Subsection", FontSize -> 16, FontWeight -> 
       "Bold", FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["NumberedSubsubsection"], CellDingbat -> 
       "\[FilledSmallSquare]", CellFrameLabels -> {{
          Cell[
           TextData[{
             CounterBox["Section"], ".", 
             CounterBox["Subsection"], ".", 
             CounterBox["Subsubsection"], " "}]], None}, {None, None}}, 
       CounterIncrements -> "Subsubsection", FontSize -> 14, FontWeight -> 
       "Bold", FontColor -> RGBColor[0, 0, 0]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 132, 1, 97, "Title"],
Cell[702, 25, 252, 7, 33, "Text"],
Cell[957, 34, 319, 10, 91, "Text",
 PageBreakAbove->True,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[1301, 48, 46, 0, 65, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[1372, 52, 44, 0, 59, "NumberedSubsubtitle"],
Cell[1419, 54, 144, 4, 25, "Input",
 InitializationCell->True],
Cell[1566, 60, 475, 13, 60, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2066, 77, 160, 6, 55, "NumberedSubsubsubtitle"],
Cell[2229, 85, 87, 2, 25, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2365, 93, 49, 0, 59, "NumberedSubsubtitle"],
Cell[2417, 95, 124, 3, 25, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2566, 102, 117, 4, 55, "NumberedSubsubsubtitle"],
Cell[2686, 108, 219, 7, 29, "Text"],
Cell[2908, 117, 1767, 50, 94, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4712, 172, 74, 0, 55, "NumberedSubsubsubtitle"],
Cell[4789, 174, 231, 5, 29, "Text"],
Cell[5023, 181, 472, 14, 43, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[5532, 200, 115, 1, 55, "NumberedSubsubsubtitle"],
Cell[5650, 203, 195, 2, 29, "Text"],
Cell[5848, 207, 324, 9, 43, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6209, 221, 89, 1, 55, "NumberedSubsubsubtitle"],
Cell[6301, 224, 189, 2, 29, "Text"],
Cell[6493, 228, 882, 18, 111, "Input",
 InitializationCell->True],
Cell[7378, 248, 332, 7, 60, "Input",
 InitializationCell->True],
Cell[7713, 257, 1200, 34, 111, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[8950, 296, 77, 0, 55, "NumberedSubsubsubtitle"],
Cell[9030, 298, 96, 3, 25, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9175, 307, 55, 0, 59, "NumberedSubsubtitle"],
Cell[9233, 309, 457, 12, 77, "Input",
 InitializationCell->True],
Cell[9693, 323, 440, 13, 60, "Input",
 InitializationCell->True],
Cell[10136, 338, 469, 13, 77, "Input",
 InitializationCell->True],
Cell[10608, 353, 481, 12, 77, "Input",
 InitializationCell->True],
Cell[11092, 367, 434, 12, 43, "Input",
 InitializationCell->True],
Cell[11529, 381, 747, 16, 128, "Input",
 InitializationCell->True],
Cell[12279, 399, 683, 15, 111, "Input",
 InitializationCell->True],
Cell[12965, 416, 602, 14, 111, "Input",
 InitializationCell->True],
Cell[13570, 432, 561, 13, 94, "Input",
 InitializationCell->True],
Cell[14134, 447, 586, 14, 111, "Input",
 InitializationCell->True],
Cell[14723, 463, 534, 13, 94, "Input",
 InitializationCell->True],
Cell[15260, 478, 577, 13, 94, "Input",
 InitializationCell->True],
Cell[15840, 493, 578, 13, 94, "Input",
 InitializationCell->True],
Cell[16421, 508, 601, 14, 111, "Input",
 InitializationCell->True],
Cell[17025, 524, 738, 15, 128, "Input",
 InitializationCell->True],
Cell[17766, 541, 536, 13, 94, "Input",
 InitializationCell->True],
Cell[18305, 556, 503, 12, 94, "Input",
 InitializationCell->True],
Cell[18811, 570, 504, 13, 94, "Input",
 InitializationCell->True],
Cell[19318, 585, 485, 12, 77, "Input",
 InitializationCell->True],
Cell[19806, 599, 516, 13, 94, "Input",
 InitializationCell->True],
Cell[20325, 614, 598, 14, 94, "Input",
 InitializationCell->True],
Cell[20926, 630, 505, 12, 94, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[21446, 645, 57, 0, 59, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[21528, 649, 82, 1, 33, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[21635, 654, 107, 4, 55, "NumberedSubsubsubtitle"],
Cell[21745, 660, 408, 11, 60, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[22190, 676, 108, 4, 55, "NumberedSubsubsubtitle"],
Cell[22301, 682, 487, 12, 77, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[22825, 699, 112, 4, 55, "NumberedSubsubsubtitle"],
Cell[22940, 705, 387, 10, 60, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23376, 721, 52, 0, 59, "NumberedSubsubtitle"],
Cell[23431, 723, 124, 3, 25, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[23592, 731, 46, 0, 59, "NumberedSubsubtitle"],
Cell[23641, 733, 385, 11, 47, "Text"],
Cell[24029, 746, 790, 22, 78, "Input",
 InitializationCell->True],
Cell[24822, 770, 416, 10, 60, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25287, 786, 50, 0, 65, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[25362, 790, 53, 0, 59, "NumberedSubsubtitle"],
Cell[25418, 792, 504, 13, 83, "Text"],
Cell[25925, 807, 1187, 34, 77, "Input",
 InitializationCell->True],
Cell[27115, 843, 181, 5, 25, "Input",
 InitializationCell->True],
Cell[27299, 850, 361, 11, 43, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[27697, 866, 53, 0, 59, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[27775, 870, 75, 0, 55, "NumberedSubsubsubtitle"],
Cell[27853, 872, 125, 3, 29, "Text"],
Cell[27981, 877, 880, 16, 249, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[28898, 898, 85, 1, 54, "NumberedSubsubsubtitle"],
Cell[28986, 901, 224, 4, 26, "Text"],
Cell[29213, 907, 2227, 64, 121, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31489, 977, 40, 0, 58, "NumberedSubsubtitle"],
Cell[31532, 979, 475, 10, 41, "Text"],
Cell[32010, 991, 1149, 32, 111, "Input",
 InitializationCell->True],
Cell[33162, 1025, 688, 17, 60, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[33887, 1047, 83, 1, 59, "NumberedSubsubtitle"],
Cell[33973, 1050, 303, 7, 47, "Text"],
Cell[34279, 1059, 1523, 41, 196, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35851, 1106, 41, 0, 65, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[35917, 1110, 91, 1, 59, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[36033, 1115, 84, 1, 55, "NumberedSubsubsubtitle"],
Cell[36120, 1118, 181, 6, 29, "Text"],
Cell[36304, 1126, 558, 16, 60, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[36899, 1147, 77, 0, 55, "NumberedSubsubsubtitle"],
Cell[36979, 1149, 171, 6, 29, "Text"],
Cell[37153, 1157, 168, 5, 25, "Input",
 InitializationCell->True],
Cell[37324, 1164, 554, 16, 60, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37927, 1186, 47, 0, 59, "NumberedSubsubtitle"],
Cell[37977, 1188, 465, 14, 47, "Text"],
Cell[38445, 1204, 693, 18, 77, "Input",
 InitializationCell->True],
Cell[39141, 1224, 408, 12, 25, "Input",
 InitializationCell->True],
Cell[39552, 1238, 156, 4, 25, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[39733, 1246, 74, 0, 55, "NumberedSubsubsubtitle"],
Cell[39810, 1248, 203, 5, 29, "Text"],
Cell[40016, 1255, 800, 22, 60, "Input",
 InitializationCell->True],
Cell[40819, 1279, 194, 5, 25, "Input",
 InitializationCell->True],
Cell[41016, 1286, 154, 4, 25, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41219, 1296, 52, 0, 59, "NumberedSubsubtitle"],
Cell[41274, 1298, 336, 10, 47, "Text"],
Cell[41613, 1310, 364, 9, 25, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[42014, 1324, 54, 0, 59, "NumberedSubsubtitle"],
Cell[42071, 1326, 293, 10, 32, "Text"],
Cell[42367, 1338, 243, 6, 25, "Input",
 InitializationCell->True],
Cell[42613, 1346, 133, 3, 25, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[42783, 1354, 52, 0, 59, "NumberedSubsubtitle"],
Cell[42838, 1356, 178, 6, 29, "Text"],
Cell[43019, 1364, 2365, 60, 247, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45433, 1430, 55, 0, 65, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[45513, 1434, 42, 0, 58, "NumberedSubsubtitle"],
Cell[45558, 1436, 127, 3, 26, "Text"],
Cell[45688, 1441, 1430, 28, 120, "Input",
 InitializationCell->True],
Cell[47121, 1471, 144, 4, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47302, 1480, 45, 0, 58, "NumberedSubsubtitle"],
Cell[47350, 1482, 130, 3, 26, "Text"],
Cell[47483, 1487, 217, 5, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47737, 1497, 105, 3, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[47867, 1504, 90, 1, 54, "NumberedSubsubsubtitle"],
Cell[47960, 1507, 421, 12, 41, "Text"],
Cell[48384, 1521, 1081, 26, 70, "Input",
 InitializationCell->True],
Cell[49468, 1549, 838, 22, 55, "Input",
 InitializationCell->True],
Cell[50309, 1573, 109, 3, 26, "Text"],
Cell[50421, 1578, 407, 10, 40, "Input",
 InitializationCell->True],
Cell[50831, 1590, 296, 8, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[51164, 1603, 126, 4, 54, "NumberedSubsubsubtitle"],
Cell[51293, 1609, 126, 4, 26, "Text"],
Cell[51422, 1615, 577, 16, 40, "Input",
 InitializationCell->True],
Cell[52002, 1633, 110, 3, 26, "Text"],
Cell[52115, 1638, 751, 19, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52915, 1663, 64, 0, 58, "NumberedSubsubtitle"],
Cell[52982, 1665, 205, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[53212, 1674, 68, 0, 54, "NumberedSubsubsubtitle"],
Cell[53283, 1676, 401, 10, 40, "Input",
 InitializationCell->True],
Cell[53687, 1688, 243, 6, 24, "Input",
 InitializationCell->True],
Cell[53933, 1696, 224, 6, 26, "Text"],
Cell[54160, 1704, 484, 9, 85, "Input",
 InitializationCell->True],
Cell[54647, 1715, 484, 14, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[55168, 1734, 77, 0, 54, "NumberedSubsubsubtitle"],
Cell[55248, 1736, 257, 5, 26, "Text"],
Cell[55508, 1743, 217, 6, 24, "Input",
 InitializationCell->True],
Cell[55728, 1751, 927, 22, 100, "Input",
 InitializationCell->True],
Cell[56658, 1775, 143, 4, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[56838, 1784, 173, 5, 54, "NumberedSubsubsubtitle"],
Cell[57014, 1791, 152, 4, 26, "Text"],
Cell[57169, 1797, 1581, 43, 100, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58799, 1846, 58, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[58882, 1850, 82, 1, 54, "NumberedSubsubsubtitle"],
Cell[58967, 1853, 123, 3, 26, "Text"],
Cell[59093, 1858, 2430, 60, 310, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[61560, 1923, 109, 3, 54, "NumberedSubsubsubtitle"],
Cell[61672, 1928, 117, 4, 26, "Text"],
Cell[61792, 1934, 578, 17, 40, "Input",
 InitializationCell->True],
Cell[62373, 1953, 118, 4, 26, "Text"],
Cell[62494, 1959, 528, 15, 40, "Input",
 InitializationCell->True],
Cell[63025, 1976, 102, 3, 26, "Text"],
Cell[63130, 1981, 899, 22, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64090, 2010, 64, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[64179, 2014, 115, 2, 58, "NumberedSubsubtitle"],
Cell[64297, 2018, 175, 4, 26, "Text"],
Cell[64475, 2024, 345, 8, 26, "Input",
 InitializationCell->True],
Cell[64823, 2034, 185, 4, 26, "Text"],
Cell[65011, 2040, 471, 10, 58, "Input",
 InitializationCell->True],
Cell[65485, 2052, 190, 4, 26, "Text"],
Cell[65678, 2058, 239, 7, 26, "Input",
 InitializationCell->True],
Cell[65920, 2067, 301, 8, 26, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[66258, 2080, 44, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[66327, 2084, 73, 0, 54, "NumberedSubsubsubtitle"],
Cell[66403, 2086, 120, 3, 26, "Text"],
Cell[66526, 2091, 685, 21, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[67248, 2117, 102, 3, 54, "NumberedSubsubsubtitle"],
Cell[67353, 2122, 92, 3, 26, "Text"],
Cell[67448, 2127, 718, 18, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68215, 2151, 56, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[68296, 2155, 87, 1, 54, "NumberedSubsubsubtitle"],
Cell[68386, 2158, 229, 6, 26, "Text"],
Cell[68618, 2166, 337, 9, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[68992, 2180, 114, 3, 54, "NumberedSubsubsubtitle"],
Cell[69109, 2185, 104, 3, 26, "Text"],
Cell[69216, 2190, 721, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69986, 2213, 60, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[70071, 2217, 91, 1, 54, "NumberedSubsubsubtitle"],
Cell[70165, 2220, 233, 6, 26, "Text"],
Cell[70401, 2228, 349, 9, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[70787, 2242, 118, 3, 54, "NumberedSubsubsubtitle"],
Cell[70908, 2247, 108, 3, 26, "Text"],
Cell[71019, 2252, 736, 18, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71804, 2276, 45, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[71874, 2280, 74, 0, 54, "NumberedSubsubsubtitle"],
Cell[71951, 2282, 320, 9, 41, "Text"],
Cell[72274, 2293, 1279, 33, 100, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[73590, 2331, 103, 3, 54, "NumberedSubsubsubtitle"],
Cell[73696, 2336, 118, 4, 26, "Text"],
Cell[73817, 2342, 589, 17, 40, "Input",
 InitializationCell->True],
Cell[74409, 2361, 211, 6, 24, "Input",
 InitializationCell->True],
Cell[74623, 2369, 93, 3, 26, "Text"],
Cell[74719, 2374, 688, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75456, 2397, 46, 0, 58, "NumberedSubsubtitle"],
Cell[75505, 2399, 292, 7, 41, "Text"],
Cell[75800, 2408, 587, 15, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[76412, 2427, 97, 3, 54, "NumberedSubsubsubtitle"],
Cell[76512, 2432, 1186, 37, 151, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[77735, 2474, 103, 3, 54, "NumberedSubsubsubtitle"],
Cell[77841, 2479, 600, 17, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[78478, 2501, 104, 3, 54, "NumberedSubsubsubtitle"],
Cell[78585, 2506, 94, 3, 26, "Text"],
Cell[78682, 2511, 691, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79422, 2534, 45, 0, 58, "NumberedSubsubtitle"],
Cell[79470, 2536, 296, 7, 41, "Text"],
Cell[79769, 2545, 583, 15, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[80377, 2564, 96, 3, 54, "NumberedSubsubsubtitle"],
Cell[80476, 2569, 4870, 157, 595, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[85383, 2731, 102, 3, 54, "NumberedSubsubsubtitle"],
Cell[85488, 2736, 478, 13, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[86003, 2754, 103, 3, 54, "NumberedSubsubsubtitle"],
Cell[86109, 2759, 93, 3, 26, "Text"],
Cell[86205, 2764, 688, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86942, 2787, 47, 0, 58, "NumberedSubsubtitle"],
Cell[86992, 2789, 293, 7, 41, "Text"],
Cell[87288, 2798, 591, 15, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[87904, 2817, 98, 3, 54, "NumberedSubsubsubtitle"],
Cell[88005, 2822, 1425, 45, 175, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[89467, 2872, 104, 3, 54, "NumberedSubsubsubtitle"],
Cell[89574, 2877, 499, 14, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[90110, 2896, 105, 3, 54, "NumberedSubsubsubtitle"],
Cell[90218, 2901, 95, 3, 26, "Text"],
Cell[90316, 2906, 694, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91059, 2929, 40, 0, 58, "NumberedSubsubtitle"],
Cell[91102, 2931, 189, 6, 26, "Text"],
Cell[91294, 2939, 375, 9, 24, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[91694, 2952, 98, 3, 54, "NumberedSubsubsubtitle"],
Cell[91795, 2957, 88, 3, 26, "Text"],
Cell[91886, 2962, 673, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92608, 2985, 109, 1, 58, "NumberedSubsubtitle"],
Cell[92720, 2988, 287, 7, 41, "Text"],
Cell[93010, 2997, 567, 15, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[93602, 3016, 92, 3, 54, "NumberedSubsubsubtitle"],
Cell[93697, 3021, 1013, 33, 130, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[94747, 3059, 98, 3, 54, "NumberedSubsubsubtitle"],
Cell[94848, 3064, 841, 23, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[95726, 3092, 165, 4, 54, "NumberedSubsubsubtitle"],
Cell[95894, 3098, 89, 3, 26, "Text"],
Cell[95986, 3103, 676, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96711, 3126, 54, 0, 58, "NumberedSubsubtitle"],
Cell[96768, 3128, 331, 9, 41, "Text"],
Cell[97102, 3139, 989, 25, 70, "Input",
 InitializationCell->True],
Cell[98094, 3166, 1916, 56, 181, "Input",
 InitializationCell->True],
Cell[100013, 3224, 1029, 26, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[101079, 3255, 75, 0, 58, "NumberedSubsubtitle"],
Cell[101157, 3257, 123, 4, 26, "Text"],
Cell[101283, 3263, 585, 17, 40, "Input",
 InitializationCell->True],
Cell[101871, 3282, 124, 4, 26, "Text"],
Cell[101998, 3288, 592, 17, 40, "Input",
 InitializationCell->True],
Cell[102593, 3307, 125, 4, 26, "Text"],
Cell[102721, 3313, 594, 17, 40, "Input",
 InitializationCell->True],
Cell[103318, 3332, 105, 3, 26, "Text"],
Cell[103426, 3337, 727, 18, 40, "Input",
 InitializationCell->True],
Cell[104156, 3357, 106, 3, 26, "Text"],
Cell[104265, 3362, 727, 17, 40, "Input",
 InitializationCell->True],
Cell[104995, 3381, 107, 3, 26, "Text"],
Cell[105105, 3386, 733, 18, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[105875, 3409, 48, 0, 58, "NumberedSubsubtitle"],
Cell[105926, 3411, 140, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[106091, 3418, 100, 3, 54, "NumberedSubsubsubtitle"],
Cell[106194, 3423, 301, 7, 24, "Input",
 InitializationCell->True],
Cell[106498, 3432, 176, 5, 24, "Input",
 InitializationCell->True],
Cell[106677, 3439, 837, 27, 106, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[107551, 3471, 106, 3, 54, "NumberedSubsubsubtitle"],
Cell[107660, 3476, 818, 22, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[108515, 3503, 106, 3, 54, "NumberedSubsubsubtitle"],
Cell[108624, 3508, 96, 3, 26, "Text"],
Cell[108723, 3513, 697, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109481, 3537, 45, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[109551, 3541, 93, 1, 58, "NumberedSubsubtitle"],
Cell[109647, 3544, 349, 12, 41, "Text"],
Cell[109999, 3558, 232, 7, 24, "Input",
 InitializationCell->True],
Cell[110234, 3567, 428, 12, 24, "Input",
 InitializationCell->True],
Cell[110665, 3581, 415, 11, 24, "Input",
 InitializationCell->True],
Cell[111083, 3594, 253, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[111373, 3605, 54, 0, 58, "NumberedSubsubtitle"],
Cell[111430, 3607, 154, 3, 26, "Text"],
Cell[111587, 3612, 1202, 34, 100, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[112814, 3650, 118, 4, 54, "NumberedSubsubsubtitle"],
Cell[112935, 3656, 102, 3, 26, "Text"],
Cell[113040, 3661, 715, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113804, 3684, 46, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[113875, 3688, 75, 0, 54, "NumberedSubsubsubtitle"],
Cell[113953, 3690, 405, 13, 41, "Text"],
Cell[114361, 3705, 2381, 61, 190, "Input",
 InitializationCell->True],
Cell[116745, 3768, 268, 8, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[117050, 3781, 110, 4, 54, "NumberedSubsubsubtitle"],
Cell[117163, 3787, 94, 3, 26, "Text"],
Cell[117260, 3792, 691, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118000, 3815, 53, 0, 58, "NumberedSubsubtitle"],
Cell[118056, 3817, 231, 6, 26, "Text"],
Cell[CellGroupData[{
Cell[118312, 3827, 70, 0, 54, "NumberedSubsubsubtitle"],
Cell[118385, 3829, 794, 20, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[119216, 3854, 80, 3, 54, "NumberedSubsubsubtitle"],
Cell[119299, 3859, 927, 25, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[120263, 3889, 145, 6, 54, "NumberedSubsubsubtitle"],
Cell[120411, 3897, 89, 3, 26, "Text"],
Cell[120503, 3902, 676, 17, 40, "Input",
 InitializationCell->True],
Cell[121182, 3921, 88, 3, 26, "Text"],
Cell[121273, 3926, 673, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121995, 3949, 48, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[122068, 3953, 77, 0, 54, "NumberedSubsubsubtitle"],
Cell[122148, 3955, 268, 10, 26, "Text"],
Cell[122419, 3967, 2071, 54, 145, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[124527, 4026, 112, 4, 54, "NumberedSubsubsubtitle"],
Cell[124642, 4032, 96, 3, 26, "Text"],
Cell[124741, 4037, 697, 17, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125499, 4061, 70, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[125594, 4065, 60, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[125679, 4069, 91, 1, 54, "NumberedSubsubsubtitle"],
Cell[125773, 4072, 414, 7, 41, "Text"],
Cell[126190, 4081, 2222, 50, 175, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[128449, 4136, 124, 4, 54, "NumberedSubsubsubtitle"],
Cell[128576, 4142, 137, 4, 26, "Text"],
Cell[128716, 4148, 710, 19, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129475, 4173, 48, 0, 58, "NumberedSubsubtitle"],
Cell[129526, 4175, 243, 7, 26, "Text"],
Cell[129772, 4184, 157, 4, 24, "Input",
 InitializationCell->True],
Cell[129932, 4190, 940, 27, 71, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[130909, 4222, 82, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[131016, 4227, 85, 1, 54, "NumberedSubsubsubtitle"],
Cell[131104, 4230, 317, 9, 41, "Text"],
Cell[131424, 4241, 272, 8, 24, "Input",
 InitializationCell->True],
Cell[131699, 4251, 2968, 77, 160, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[134704, 4333, 83, 1, 54, "NumberedSubsubsubtitle"],
Cell[134790, 4336, 371, 10, 41, "Text"],
Cell[135164, 4348, 2980, 78, 160, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138193, 4432, 92, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[138310, 4437, 90, 1, 54, "NumberedSubsubsubtitle"],
Cell[138403, 4440, 312, 8, 41, "Text"],
Cell[138718, 4450, 2917, 76, 160, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[141672, 4531, 88, 1, 54, "NumberedSubsubsubtitle"],
Cell[141763, 4534, 366, 9, 41, "Text"],
Cell[142132, 4545, 3005, 78, 160, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145186, 4629, 73, 0, 58, "NumberedSubsubtitle"],
Cell[145262, 4631, 100, 3, 26, "Text"],
Cell[145365, 4636, 1174, 26, 70, "Input",
 InitializationCell->True],
Cell[146542, 4664, 116, 4, 26, "Text"],
Cell[146661, 4670, 551, 16, 40, "Input",
 InitializationCell->True],
Cell[147215, 4688, 118, 4, 26, "Text"],
Cell[147336, 4694, 534, 15, 40, "Input",
 InitializationCell->True],
Cell[147873, 4711, 118, 4, 26, "Text"],
Cell[147994, 4717, 544, 15, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[148575, 4737, 71, 0, 58, "NumberedSubsubtitle"],
Cell[148649, 4739, 98, 3, 26, "Text"],
Cell[148750, 4744, 1164, 26, 70, "Input",
 InitializationCell->True],
Cell[149917, 4772, 114, 4, 26, "Text"],
Cell[150034, 4778, 547, 16, 40, "Input",
 InitializationCell->True],
Cell[150584, 4796, 116, 4, 26, "Text"],
Cell[150703, 4802, 530, 15, 40, "Input",
 InitializationCell->True],
Cell[151236, 4819, 116, 4, 26, "Text"],
Cell[151355, 4825, 540, 15, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[151932, 4845, 78, 0, 58, "NumberedSubsubtitle"],
Cell[152013, 4847, 101, 3, 26, "Text"],
Cell[152117, 4852, 1203, 27, 70, "Input",
 InitializationCell->True],
Cell[153323, 4881, 121, 4, 26, "Text"],
Cell[153447, 4887, 561, 16, 40, "Input",
 InitializationCell->True],
Cell[154011, 4905, 123, 4, 26, "Text"],
Cell[154137, 4911, 544, 15, 40, "Input",
 InitializationCell->True],
Cell[154684, 4928, 123, 4, 26, "Text"],
Cell[154810, 4934, 554, 15, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[155401, 4954, 76, 0, 58, "NumberedSubsubtitle"],
Cell[155480, 4956, 103, 3, 26, "Text"],
Cell[155586, 4961, 1189, 26, 70, "Input",
 InitializationCell->True],
Cell[156778, 4989, 119, 4, 26, "Text"],
Cell[156900, 4995, 557, 16, 40, "Input",
 InitializationCell->True],
Cell[157460, 5013, 121, 4, 26, "Text"],
Cell[157584, 5019, 540, 15, 40, "Input",
 InitializationCell->True],
Cell[158127, 5036, 121, 4, 26, "Text"],
Cell[158251, 5042, 550, 15, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158850, 5063, 51, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[158926, 5067, 61, 0, 58, "NumberedSubsubtitle"],
Cell[158990, 5069, 368, 11, 24, "Input",
 InitializationCell->True],
Cell[159361, 5082, 591, 17, 40, "Input",
 InitializationCell->True],
Cell[159955, 5101, 984, 25, 55, "Input",
 InitializationCell->True],
Cell[160942, 5128, 1128, 28, 85, "Input",
 InitializationCell->True],
Cell[162073, 5158, 8655, 208, 835, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[170765, 5371, 65, 0, 58, "NumberedSubsubtitle"],
Cell[170833, 5373, 5449, 128, 355, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176331, 5507, 52, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[176408, 5511, 58, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[176491, 5515, 112, 2, 54, "NumberedSubsubsubtitle"],
Cell[176606, 5519, 252, 4, 41, "Text"],
Cell[176861, 5525, 143, 4, 24, "Input",
 InitializationCell->True],
Cell[177007, 5531, 546, 15, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177602, 5552, 104, 1, 58, "NumberedSubsubtitle"],
Cell[177709, 5555, 247, 7, 26, "Text"],
Cell[CellGroupData[{
Cell[177981, 5566, 98, 4, 54, "NumberedSubsubsubtitle"],
Cell[178082, 5572, 317, 8, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[178436, 5585, 132, 4, 54, "NumberedSubsubsubtitle"],
Cell[178571, 5591, 659, 18, 55, "Input",
 InitializationCell->True],
Cell[179233, 5611, 483, 9, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[179753, 5625, 124, 4, 54, "NumberedSubsubsubtitle"],
Cell[179880, 5631, 714, 18, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[180631, 5654, 113, 4, 54, "NumberedSubsubsubtitle"],
Cell[180747, 5660, 100, 4, 26, "Text"],
Cell[180850, 5666, 951, 25, 58, "Input",
 InitializationCell->True],
Cell[181804, 5693, 274, 7, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[182115, 5705, 103, 4, 54, "NumberedSubsubsubtitle"],
Cell[182221, 5711, 120, 4, 26, "Text"],
Cell[182344, 5717, 1121, 27, 100, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[183480, 5747, 76, 0, 54, "NumberedSubsubsubtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183593, 5752, 74, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[183692, 5756, 51, 0, 54, "NumberedSubsubsubtitle"],
Cell[183746, 5758, 109, 1, 26, "Text"],
Cell[183858, 5761, 1403, 35, 85, "Input",
 InitializationCell->True],
Cell[185264, 5798, 267, 6, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[185568, 5809, 96, 4, 54, "NumberedSubsubsubtitle"],
Cell[185667, 5815, 139, 4, 26, "Text"],
Cell[185809, 5821, 536, 15, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[186382, 5841, 47, 0, 54, "NumberedSubsubsubtitle"],
Cell[186432, 5843, 96, 2, 26, "Text"],
Cell[186531, 5847, 1124, 30, 115, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187704, 5883, 75, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[187804, 5887, 75, 0, 54, "NumberedSubsubsubtitle"],
Cell[187882, 5889, 124, 3, 26, "Text"],
Cell[188009, 5894, 2782, 61, 192, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[190828, 5960, 84, 1, 54, "NumberedSubsubsubtitle"],
Cell[190915, 5963, 151, 4, 26, "Text"],
Cell[191069, 5969, 514, 13, 40, "Input",
 InitializationCell->True],
Cell[191586, 5984, 526, 14, 40, "Input",
 InitializationCell->True],
Cell[192115, 6000, 906, 23, 70, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193070, 6029, 72, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[193167, 6033, 91, 1, 54, "NumberedSubsubsubtitle"],
Cell[193261, 6036, 217, 7, 26, "Text"],
Cell[193481, 6045, 1959, 46, 145, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[195477, 6096, 98, 1, 54, "NumberedSubsubsubtitle"],
Cell[195578, 6099, 171, 4, 26, "Text"],
Cell[195752, 6105, 1860, 46, 160, "Input",
 InitializationCell->True],
Cell[197615, 6153, 1286, 31, 100, "Input",
 InitializationCell->True],
Cell[198904, 6186, 2189, 51, 175, "Input",
 InitializationCell->True],
Cell[201096, 6239, 339, 7, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[201472, 6251, 112, 4, 54, "NumberedSubsubsubtitle"],
Cell[201587, 6257, 415, 14, 41, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202051, 6277, 65, 0, 58, "NumberedSubsubtitle"],
Cell[202119, 6279, 126, 4, 26, "Text"],
Cell[202248, 6285, 772, 20, 70, "Input",
 InitializationCell->True],
Cell[203023, 6307, 387, 8, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203459, 6321, 56, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[203540, 6325, 62, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[203627, 6329, 113, 2, 54, "NumberedSubsubsubtitle"],
Cell[203743, 6333, 260, 4, 41, "Text"],
Cell[204006, 6339, 147, 4, 24, "Input",
 InitializationCell->True],
Cell[204156, 6345, 562, 15, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204767, 6366, 83, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[204875, 6371, 102, 4, 54, "NumberedSubsubsubtitle"],
Cell[204980, 6377, 363, 9, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[205380, 6391, 136, 4, 54, "NumberedSubsubsubtitle"],
Cell[205519, 6397, 702, 18, 55, "Input",
 InitializationCell->True],
Cell[206224, 6417, 495, 9, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[206756, 6431, 128, 4, 54, "NumberedSubsubsubtitle"],
Cell[206887, 6437, 759, 19, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[207683, 6461, 113, 4, 54, "NumberedSubsubsubtitle"],
Cell[207799, 6467, 100, 4, 26, "Text"],
Cell[207902, 6473, 1034, 26, 58, "Input",
 InitializationCell->True],
Cell[208939, 6501, 276, 7, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[209252, 6513, 103, 4, 54, "NumberedSubsubsubtitle"],
Cell[209358, 6519, 149, 6, 26, "Text"],
Cell[209510, 6527, 1200, 30, 115, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[210747, 6562, 133, 4, 54, "NumberedSubsubsubtitle"],
Cell[210883, 6568, 1164, 29, 100, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[212084, 6602, 142, 5, 54, "NumberedSubsubsubtitle"],
Cell[212229, 6609, 169, 6, 26, "Text"],
Cell[212401, 6617, 591, 15, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[213029, 6637, 147, 4, 54, "NumberedSubsubsubtitle"],
Cell[213179, 6643, 1132, 29, 115, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214360, 6678, 241, 7, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[214626, 6689, 79, 0, 54, "NumberedSubsubsubtitle"],
Cell[214708, 6691, 202, 7, 26, "Text"],
Cell[214913, 6700, 1258, 29, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[216208, 6734, 88, 1, 54, "NumberedSubsubsubtitle"],
Cell[216299, 6737, 248, 6, 26, "Text"],
Cell[216550, 6745, 2156, 56, 100, "Input",
 InitializationCell->True],
Cell[218709, 6803, 1266, 32, 70, "Input",
 InitializationCell->True],
Cell[219978, 6837, 3072, 74, 160, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[223087, 6916, 74, 0, 54, "NumberedSubsubsubtitle"],
Cell[223164, 6918, 125, 3, 26, "Text"],
Cell[223292, 6923, 206, 4, 26, "Text"],
Cell[223501, 6929, 226, 7, 24, "Input",
 InitializationCell->True],
Cell[223730, 6938, 674, 16, 40, "Input",
 InitializationCell->True],
Cell[224407, 6956, 2474, 62, 145, "Input",
 InitializationCell->True],
Cell[226884, 7020, 505, 14, 40, "Input",
 InitializationCell->True],
Cell[227392, 7036, 1678, 48, 85, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229131, 7091, 79, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[229235, 7095, 168, 4, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[229428, 7103, 136, 4, 54, "NumberedSubsubsubtitle"],
Cell[229567, 7109, 758, 20, 57, "Input",
 InitializationCell->True],
Cell[230328, 7131, 497, 9, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[230862, 7145, 129, 4, 54, "NumberedSubsubsubtitle"],
Cell[230994, 7151, 693, 18, 55, "Input",
 InitializationCell->True],
Cell[231690, 7171, 229, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[231956, 7182, 137, 4, 54, "NumberedSubsubsubtitle"],
Cell[232096, 7188, 735, 19, 55, "Input",
 InitializationCell->True],
Cell[232834, 7209, 211, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233094, 7221, 104, 2, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[233223, 7227, 74, 0, 54, "NumberedSubsubsubtitle"],
Cell[233300, 7229, 206, 6, 26, "Text"],
Cell[233509, 7237, 364, 11, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[233910, 7253, 143, 4, 54, "NumberedSubsubsubtitle"],
Cell[234056, 7259, 739, 19, 55, "Input",
 InitializationCell->True],
Cell[234798, 7280, 229, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[235064, 7291, 151, 4, 54, "NumberedSubsubsubtitle"],
Cell[235218, 7297, 711, 19, 55, "Input",
 InitializationCell->True],
Cell[235932, 7318, 519, 10, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[236488, 7333, 151, 4, 54, "NumberedSubsubsubtitle"],
Cell[236642, 7339, 837, 22, 55, "Input",
 InitializationCell->True],
Cell[237482, 7363, 211, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237742, 7375, 180, 3, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[237947, 7382, 196, 5, 54, "NumberedSubsubsubtitle"],
Cell[238146, 7389, 484, 14, 40, "Input",
 InitializationCell->True],
Cell[238633, 7405, 270, 7, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[238940, 7417, 147, 4, 54, "NumberedSubsubsubtitle"],
Cell[239090, 7423, 984, 25, 55, "Input",
 InitializationCell->True],
Cell[240077, 7450, 551, 11, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[240665, 7466, 171, 4, 54, "NumberedSubsubsubtitle"],
Cell[240839, 7472, 779, 21, 55, "Input",
 InitializationCell->True],
Cell[241621, 7495, 234, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[241892, 7506, 151, 4, 54, "NumberedSubsubsubtitle"],
Cell[242046, 7512, 867, 23, 55, "Input",
 InitializationCell->True],
Cell[242916, 7537, 211, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[243164, 7548, 113, 3, 54, "NumberedSubsubsubtitle"],
Cell[243280, 7553, 906, 22, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244235, 7581, 122, 4, 58, "NumberedSubsubtitle"],
Cell[244360, 7587, 228, 6, 26, "Text"],
Cell[CellGroupData[{
Cell[244613, 7597, 88, 1, 54, "NumberedSubsubsubtitle"],
Cell[244704, 7600, 162, 3, 26, "Text"],
Cell[244869, 7605, 1656, 43, 102, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[246562, 7653, 85, 1, 54, "NumberedSubsubsubtitle"],
Cell[246650, 7656, 1603, 42, 87, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[248290, 7703, 82, 1, 54, "NumberedSubsubsubtitle"],
Cell[248375, 7706, 448, 12, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248872, 7724, 88, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[248985, 7729, 142, 4, 54, "NumberedSubsubsubtitle"],
Cell[249130, 7735, 714, 18, 55, "Input",
 InitializationCell->True],
Cell[249847, 7755, 215, 6, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[250099, 7766, 195, 4, 54, "NumberedSubsubsubtitle"],
Cell[250297, 7772, 528, 13, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250874, 7791, 127, 4, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[251026, 7799, 165, 4, 54, "NumberedSubsubsubtitle"],
Cell[251194, 7805, 487, 14, 24, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251742, 7826, 50, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[251817, 7830, 57, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[251899, 7834, 107, 2, 54, "NumberedSubsubsubtitle"],
Cell[252009, 7838, 250, 4, 41, "Text"],
Cell[252262, 7844, 142, 4, 24, "Input",
 InitializationCell->True],
Cell[252407, 7850, 542, 15, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252998, 7871, 76, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[253099, 7875, 97, 4, 54, "NumberedSubsubsubtitle"],
Cell[253199, 7881, 308, 8, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[253544, 7894, 114, 1, 55, "NumberedSubsubsubtitle"],
Cell[253661, 7897, 649, 18, 40, "Input",
 InitializationCell->True],
Cell[254313, 7917, 360, 7, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[254710, 7929, 171, 4, 54, "NumberedSubsubsubtitle"],
Cell[254884, 7935, 287, 8, 26, "Input",
 InitializationCell->True],
Cell[255174, 7945, 635, 19, 40, "Input",
 InitializationCell->True],
Cell[255812, 7966, 464, 9, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[256313, 7980, 131, 4, 54, "NumberedSubsubsubtitle"],
Cell[256447, 7986, 776, 20, 55, "Input",
 InitializationCell->True],
Cell[257226, 8008, 509, 9, 85, "Input",
 InitializationCell->True],
Cell[257738, 8019, 753, 20, 55, "Input",
 InitializationCell->True],
Cell[258494, 8041, 509, 9, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[259040, 8055, 123, 4, 54, "NumberedSubsubsubtitle"],
Cell[259166, 8061, 714, 18, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[259917, 8084, 118, 4, 54, "NumberedSubsubsubtitle"],
Cell[260038, 8090, 992, 25, 58, "Input",
 InitializationCell->True],
Cell[261033, 8117, 289, 7, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[261359, 8129, 157, 4, 54, "NumberedSubsubsubtitle"],
Cell[261519, 8135, 925, 24, 55, "Input",
 InitializationCell->True],
Cell[262447, 8161, 236, 6, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[262698, 8170, 76, 0, 54, "NumberedSubsubsubtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262811, 8175, 111, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[262947, 8180, 105, 2, 54, "NumberedSubsubsubtitle"],
Cell[263055, 8184, 1045, 27, 70, "Input",
 Evaluatable->False],
Cell[264103, 8213, 358, 9, 85, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[264498, 8227, 105, 2, 54, "NumberedSubsubsubtitle"],
Cell[264606, 8231, 1045, 27, 70, "Input",
 Evaluatable->False],
Cell[265654, 8260, 358, 9, 85, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[266049, 8274, 84, 1, 54, "NumberedSubsubsubtitle"],
Cell[266136, 8277, 144, 5, 26, "Text"],
Cell[266283, 8284, 2446, 57, 147, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268778, 8347, 73, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[268876, 8351, 94, 1, 54, "NumberedSubsubsubtitle"],
Cell[268973, 8354, 133, 3, 26, "Text"],
Cell[269109, 8359, 596, 14, 70, "Input",
 InitializationCell->True],
Cell[269708, 8375, 779, 19, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[270524, 8399, 78, 0, 54, "NumberedSubsubsubtitle"],
Cell[270605, 8401, 96, 2, 26, "Text"],
Cell[270704, 8405, 3118, 75, 162, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273871, 8486, 70, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[273966, 8490, 73, 0, 54, "NumberedSubsubsubtitle"],
Cell[274042, 8492, 784, 19, 56, "Input",
 InitializationCell->True],
Cell[274829, 8513, 340, 8, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[275206, 8526, 114, 1, 54, "NumberedSubsubsubtitle"],
Cell[275323, 8529, 785, 19, 56, "Input",
 InitializationCell->True],
Cell[276111, 8550, 340, 8, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[276488, 8563, 79, 0, 54, "NumberedSubsubsubtitle"],
Cell[276570, 8565, 139, 5, 26, "Text"],
Cell[276712, 8572, 399, 11, 26, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277160, 8589, 102, 2, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[277287, 8595, 121, 3, 54, "NumberedSubsubsubtitle"],
Cell[277411, 8600, 1382, 31, 116, "Input",
 InitializationCell->True],
Cell[278796, 8633, 342, 8, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[279175, 8646, 121, 3, 54, "NumberedSubsubsubtitle"],
Cell[279299, 8651, 1371, 31, 116, "Input",
 InitializationCell->True],
Cell[280673, 8684, 325, 8, 85, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281047, 8698, 86, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[281158, 8703, 125, 3, 54, "NumberedSubsubsubtitle"],
Cell[281286, 8708, 1578, 38, 115, "Input",
 InitializationCell->True],
Cell[282867, 8748, 326, 8, 85, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[283230, 8761, 126, 3, 54, "NumberedSubsubsubtitle"],
Cell[283359, 8766, 1582, 38, 115, "Input",
 InitializationCell->True],
Cell[284944, 8806, 326, 8, 85, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285319, 8820, 133, 2, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[285477, 8826, 113, 2, 54, "NumberedSubsubsubtitle"],
Cell[285593, 8830, 1406, 34, 85, "Input",
 InitializationCell->True],
Cell[287002, 8866, 296, 7, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[287335, 8878, 113, 2, 54, "NumberedSubsubsubtitle"],
Cell[287451, 8882, 1369, 33, 100, "Input",
 InitializationCell->True],
Cell[288823, 8917, 296, 7, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289168, 8930, 54, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[289247, 8934, 129, 1, 54, "NumberedSubsubsubtitle"],
Cell[289379, 8937, 100, 2, 26, "Text"],
Cell[289482, 8941, 474, 11, 40, "Input",
 InitializationCell->True],
Cell[289959, 8954, 991, 23, 70, "Input",
 InitializationCell->True],
Cell[290953, 8979, 832, 20, 55, "Input",
 InitializationCell->True],
Cell[291788, 9001, 836, 20, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292673, 9027, 131, 1, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[292829, 9032, 109, 2, 54, "NumberedSubsubsubtitle"],
Cell[292941, 9036, 737, 20, 70, "Input",
 InitializationCell->True],
Cell[293681, 9058, 398, 9, 55, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[294116, 9072, 118, 2, 54, "NumberedSubsubsubtitle"],
Cell[294237, 9076, 750, 20, 70, "Input",
 InitializationCell->True],
Cell[294990, 9098, 448, 9, 70, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[295475, 9112, 111, 2, 54, "NumberedSubsubsubtitle"],
Cell[295589, 9116, 203, 5, 71, "Text"],
Cell[295795, 9123, 448, 9, 70, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296304, 9139, 55, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[296384, 9143, 75, 0, 58, "NumberedSubsubtitle"],
Cell[296462, 9145, 2000, 50, 115, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[298499, 9200, 72, 0, 58, "NumberedSubsubtitle"],
Cell[298574, 9202, 1331, 31, 70, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[299930, 9237, 110, 4, 54, "NumberedSubsubsubtitle"],
Cell[300043, 9243, 163, 5, 26, "Text"],
Cell[300209, 9250, 3493, 86, 325, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[303739, 9341, 89, 1, 54, "NumberedSubsubsubtitle"],
Cell[303831, 9344, 183, 4, 26, "Text"],
Cell[304017, 9350, 6051, 156, 402, "Input",
 InitializationCell->True],
Cell[310071, 9508, 370, 7, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310490, 9521, 75, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[310590, 9525, 106, 1, 54, "NumberedSubsubsubtitle"],
Cell[310699, 9528, 404, 7, 41, "Text"],
Cell[311106, 9537, 2786, 60, 220, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[313929, 9602, 136, 3, 54, "NumberedSubsubsubtitle"],
Cell[314068, 9607, 121, 3, 26, "Text"],
Cell[314192, 9612, 754, 21, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314995, 9639, 72, 0, 58, "NumberedSubsubtitle"],
Cell[315070, 9641, 433, 8, 33, "JasonComment"],
Cell[315506, 9651, 325, 5, 41, "Text"],
Cell[315834, 9658, 634, 18, 40, "Input",
 InitializationCell->True],
Cell[316471, 9678, 15873, 339, 659, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[332369, 10021, 133, 3, 54, "NumberedSubsubsubtitle"],
Cell[332505, 10026, 741, 20, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[333295, 10052, 73, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[333393, 10056, 109, 4, 54, "NumberedSubsubsubtitle"],
Cell[333505, 10062, 160, 5, 26, "Text"],
Cell[333668, 10069, 1544, 36, 130, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[335249, 10110, 103, 1, 54, "NumberedSubsubsubtitle"],
Cell[335355, 10113, 90, 2, 26, "Text"],
Cell[335448, 10117, 1444, 34, 100, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336953, 10158, 55, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[337033, 10162, 75, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[337133, 10166, 130, 1, 54, "NumberedSubsubsubtitle"],
Cell[337266, 10169, 534, 10, 41, "Text"],
Cell[337803, 10181, 1222, 30, 100, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[339062, 10216, 160, 4, 54, "NumberedSubsubsubtitle"],
Cell[339225, 10222, 118, 3, 26, "Text"],
Cell[339346, 10227, 754, 21, 40, "Input",
 InitializationCell->True],
Cell[340103, 10250, 516, 14, 41, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340668, 10270, 72, 0, 58, "NumberedSubsubtitle"],
Cell[340743, 10272, 1511, 35, 115, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[342291, 10312, 75, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[342391, 10316, 106, 1, 54, "NumberedSubsubsubtitle"],
Cell[342500, 10319, 404, 7, 41, "Text"],
Cell[342907, 10328, 365, 9, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[343309, 10342, 160, 4, 54, "NumberedSubsubsubtitle"],
Cell[343472, 10348, 118, 3, 26, "Text"],
Cell[343593, 10353, 754, 21, 40, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344396, 10380, 72, 0, 58, "NumberedSubsubtitle"],
Cell[344471, 10382, 1884, 43, 145, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[346392, 10430, 73, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[346490, 10434, 114, 4, 54, "NumberedSubsubsubtitle"],
Cell[346607, 10440, 167, 5, 26, "Text"],
Cell[346777, 10447, 2194, 52, 145, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[349008, 10504, 103, 1, 54, "NumberedSubsubsubtitle"],
Cell[349114, 10507, 90, 2, 26, "Text"],
Cell[349207, 10511, 387, 10, 24, "Input",
 InitializationCell->True],
Cell[349597, 10523, 362, 9, 24, "Input",
 InitializationCell->True],
Cell[349962, 10534, 708, 18, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350731, 10559, 66, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[350822, 10563, 45, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[350892, 10567, 79, 0, 54, "NumberedSubsubsubtitle"],
Cell[350974, 10569, 284, 7, 41, "Text"],
Cell[351261, 10578, 1675, 42, 145, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[352973, 10625, 109, 4, 54, "NumberedSubsubsubtitle"],
Cell[353085, 10631, 88, 3, 26, "Text"],
Cell[353176, 10636, 836, 23, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[354061, 10665, 75, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[354161, 10669, 109, 3, 54, "NumberedSubsubsubtitle"],
Cell[354273, 10674, 430, 16, 41, "Text"],
Cell[354706, 10692, 6200, 134, 565, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360967, 10833, 43, 0, 64, "NumberedSubtitle"],
Cell[CellGroupData[{
Cell[361035, 10837, 105, 1, 58, "NumberedSubsubtitle"],
Cell[361143, 10840, 74, 0, 26, "Text"],
Cell[361220, 10842, 264, 8, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[361521, 10855, 48, 0, 58, "NumberedSubsubtitle"],
Cell[361572, 10857, 147, 3, 26, "Text"],
Cell[361722, 10862, 1603, 45, 130, "Input",
 InitializationCell->True],
Cell[363328, 10909, 212, 6, 26, "Text"],
Cell[363543, 10917, 1148, 31, 100, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[364728, 10953, 68, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[364821, 10957, 67, 0, 54, "NumberedSubsubsubtitle"],
Cell[364891, 10959, 203, 6, 26, "Text"],
Cell[365097, 10967, 131, 4, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[365265, 10976, 93, 1, 54, "NumberedSubsubsubtitle"],
Cell[365361, 10979, 421, 8, 70, "Input",
 InitializationCell->True],
Cell[365785, 10989, 339, 7, 55, "Input",
 InitializationCell->True],
Cell[366127, 10998, 341, 7, 55, "Input",
 InitializationCell->True],
Cell[366471, 11007, 1729, 45, 100, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368249, 11058, 46, 0, 58, "NumberedSubsubtitle"],
Cell[CellGroupData[{
Cell[368320, 11062, 45, 0, 54, "NumberedSubsubsubtitle"],
Cell[368368, 11064, 96, 3, 24, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[368501, 11072, 60, 0, 54, "NumberedSubsubsubtitle"],
Cell[368564, 11074, 494, 11, 40, "Input",
 InitializationCell->True],
Cell[369061, 11087, 399, 10, 40, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[369497, 11102, 49, 0, 54, "NumberedSubsubsubtitle"],
Cell[369549, 11104, 103, 3, 24, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
