(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     89049,       2002]
NotebookOptionsPosition[     84482,       1889]
NotebookOutlinePosition[     88994,       1999]
CellTagsIndexPosition[     88951,       1996]
WindowTitle->Wolfram Product Activation
WindowFrame->ModalDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 PanelBox["\<\"\"\>",
  Appearance->{
   "Default" -> 
    FrontEnd`FileName[{"Dialogs", "Activation"}, 
      "ActivationDialogHeader.9.png"]},
  ImageSize->Full]],
 CellMargins->{{0, -5}, {-2, -2}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]],

Cell[BoxData[
 PaneBox[
  DynamicModuleBox[{$CellContext`activationKey$$, $CellContext`name$$ = 
   "", $CellContext`org$$ = "", $CellContext`server$$ = 
   "", $CellContext`password$$ = ""}, 
   TagBox[GridBox[{
      {
       PaneSelectorBox[{"Online"->
        FrameBox[
         PaneSelectorBox[{True->
          TagBox[GridBox[{
             {
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "LicenseSubtitle"], StandardForm],
                ImageSizeCache->{62., {1., 12.}}], "Heading",
               StripOnInput->False]},
             {
              TagBox[GridBox[{
                 {
                  ItemBox[
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "LicenseText"], StandardForm],
                    ImageSizeCache->{212., {3., 9.}}], "TextIndent",
                    StripOnInput->False],
                   Alignment->Left,
                   StripOnInput->False], "\[SpanFromLeft]"},
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "NameLabel"], StandardForm],
                   ImageSizeCache->{33., {1., 9.}}], 
                  InputFieldBox[Dynamic[$CellContext`name$$], String,
                   BoxID -> "inputfield"]},
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "OrganizationLabel"], StandardForm],
                   ImageSizeCache->{73., {3., 9.}}], 
                  InputFieldBox[Dynamic[$CellContext`org$$], String]},
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "PasswordLabel"], StandardForm],
                   ImageSizeCache->{57., {1., 9.}}], 
                  InputFieldBox[Dynamic[$CellContext`password$$], String,
                   ContinuousAction->True]}
                },
                AutoDelete->False,
                GridBoxAlignment->{"Columns" -> {Right, Left}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                
                GridBoxSpacings->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}, 
                  "RowsIndexed" -> {2 -> 1}}],
               "Grid"]},
             {
              PaneSelectorBox[{True->"\<\"\"\>", False->
               PanelBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ErrorIcon.png"]],
                    ImageSizeCache->{34., {14., 18.}}],
                    ImageMargins->{{15, 5}, {0, 0}}], 
                    PaneBox[
                    DynamicBox[ToBoxes[
                    Style[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}], 
                    FormatType -> TextForm], StandardForm],
                    ImageSizeCache->{30., {1., 9.}}],
                    Alignment->{Left, Center},
                    AppearanceElements->{},
                    
                    BaseStyle->{
                    "TextIndent", FontColor -> RGBColor[0.5, 0, 0]},
                    ImageSize->{490, 70},
                    Scrollbars->Automatic]}
                  },
                  AutoDelete->False,
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Center}}, "Rows" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                Alignment->{0.5, Center},
                
                Appearance->{
                 "Default" -> 
                  FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "ErrorBackground.9.png"]}]}, Dynamic[
                FEPrivate`MemberQ[{"", None}, 
                 CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ErrorMessage"}]]],
               ImageMargins->{{0, 0}, {10, 0}}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
           "Column"], False->
          TagBox[GridBox[{
             {
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "OnlineActivateSubtitle"], StandardForm],
                
                ImageSizeCache->{113., {1., 12.}}], "Heading",
               StripOnInput->False]},
             {
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "OnlineActivateText"], StandardForm],
                   ImageSizeCache->{348., {3., 9.}}], "\[SpanFromLeft]"},
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "ActKeyLabel"], StandardForm],
                   ImageSizeCache->{83., {3., 9.}}], 
                  
                  InputFieldBox[
                   Dynamic[$CellContext`activationKey$$, FEPrivate`ReverseSet[
                    
                    
                    FEPrivate`ToUpperCase[#], $CellContext`activationKey$$]& \
], String,
                   BoxID -> "inputfield"]},
                 {"", 
                  StyleBox["\<\"(XXXX-XXXX-XXXXXX)\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.4],
                   FrontFaceColor->GrayLevel[0.4],
                   BackFaceColor->GrayLevel[0.4],
                   GraphicsColor->GrayLevel[0.4],
                   FontSize->11,
                   FontWeight->Plain,
                   FontSlant->Plain,
                   FontVariations->{"Underline"->False},
                   FontColor->GrayLevel[0.4]]}
                },
                AutoDelete->False,
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                
                GridBoxSpacings->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
                  "RowsIndexed" -> {2 -> 1}}],
               "Grid"]},
             {
              PaneSelectorBox[{True->"\<\"\"\>", False->
               PanelBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ErrorIcon.png"]],
                    ImageSizeCache->{34., {14., 18.}}],
                    ImageMargins->{{15, 5}, {0, 0}}], 
                    PaneBox[
                    DynamicBox[ToBoxes[
                    Style[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}], 
                    FormatType -> TextForm], StandardForm],
                    ImageSizeCache->{30., {1., 9.}}],
                    Alignment->{Left, Center},
                    AppearanceElements->{},
                    
                    BaseStyle->{
                    "TextIndent", FontColor -> RGBColor[0.5, 0, 0]},
                    ImageSize->{490, 70},
                    Scrollbars->Automatic]}
                  },
                  AutoDelete->False,
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Center}}, "Rows" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                Alignment->{0.5, Center},
                
                Appearance->{
                 "Default" -> 
                  FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "ErrorBackground.9.png"]}]}, Dynamic[
                FEPrivate`MemberQ[{"", None}, 
                 CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ErrorMessage"}]]],
               ImageMargins->{{0, 0}, {10, 0}}]},
             {
              PaneBox["\<\"\"\>",
               ImageSize->{Automatic, 40}]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    RowBox[{
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "OnlineActivateLink"], StandardForm],
                    ImageSizeCache->{146., {1., 9.}}], "\[RightGuillemet]"}], 
                    False->
                    RowBox[{
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "OnlineActivateLink"], StandardForm],
                    ImageSizeCache->{146., {1., 9.}}], "Hyperlink"], 
                    StyleBox["\[RightGuillemet]", "Chevron"]}]}, Dynamic[
                    CurrentValue["MouseOver"]]],
                    BaseStyle->"ContactActivationLink",
                    ButtonData->"OnlineActivateLink"],
                   MouseAppearanceTag["LinkHand"]]},
                 {
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    RowBox[{
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "PrivacyPolicyLink"], StandardForm],
                    ImageSizeCache->{132., {3., 9.}}], "\[RightGuillemet]"}], 
                    False->
                    RowBox[{
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "PrivacyPolicyLink"], StandardForm],
                    ImageSizeCache->{132., {3., 9.}}], "Hyperlink"], 
                    StyleBox["\[RightGuillemet]", "Chevron"]}]}, Dynamic[
                    CurrentValue["MouseOver"]]],
                    BaseStyle->"ContactActivationLink",
                    ButtonData->"PrivacyPolicyLink"],
                   MouseAppearanceTag["LinkHand"]]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
           "Column"]}, Dynamic[
           FEPrivate`SameQ[
           FrontEnd`$NotebookLicenseType, "Unauthorized Unsecured"]],
          ImageSize->All],
         FrameMargins->0,
         FrameStyle->None,
         StripOnInput->False], "Manual"->
        TagBox[GridBox[{
           {
            StyleBox[
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "ManualActivateSubtitle"], StandardForm],
              ImageSizeCache->{135., {4., 12.}}], "Heading",
             StripOnInput->False]},
           {
            TagBox[GridBox[{
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ManualActivateStep1"], StandardForm],
                 ImageSizeCache->{40., {3., 9.}}], 
                StyleBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ManualActivateText1"], StandardForm],
                  ImageSizeCache->{522., {18.759765625, 10.}}], "TextIndent",
                 StripOnInput->False]},
               {"", 
                StyleBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ManualActivateNote"], StandardForm],
                  ImageSizeCache->{532., {3., 9.}}], "TextIndent",
                 StripOnInput->False]},
               {"", 
                StyleBox[
                 RowBox[{
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MathIDLabel"], StandardForm],
                   ImageSizeCache->{44., {1., 9.}}], 
                  "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", 
                  TagBox[
                   InputFieldBox[Dynamic[FEPrivate`$MachineID, None], String,
                    BoxID -> "",
                    Appearance->None,
                    BaseStyle->{ZeroWidthTimes -> True, FontWeight -> Bold},
                    ContinuousAction->True],
                   
                   EventHandlerTag[{{"MouseClicked", 1} :> 
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationNotebook[], {{""}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]], PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}], "Hyperlink",
                 StripOnInput->False]},
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ManualActivateStep2"], StandardForm],
                 ImageSizeCache->{40., {3., 9.}}], 
                PaneBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ManualActivateText2"], StandardForm],
                  ImageSizeCache->{434., {3., 9.}}],
                 BaseStyle->{LineBreakWithin -> False},
                 ImageSize->Full,
                 ImageSizeAction->"ResizeToFit"]}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]},
           {
            TagBox[GridBox[{
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ActKeyLabel"], StandardForm],
                 ImageSizeCache->{83., {3., 9.}}], 
                
                InputFieldBox[
                 Dynamic[$CellContext`activationKey$$, FEPrivate`ReverseSet[
                   FEPrivate`ToUpperCase[#], $CellContext`activationKey$$]& ],
                  String,
                 BoxID -> "inputfield"]},
               {"", 
                StyleBox["\<\"(XXXX-XXXX-XXXXXX)\"\>",
                 StripOnInput->False,
                 LineColor->GrayLevel[0.4],
                 FrontFaceColor->GrayLevel[0.4],
                 BackFaceColor->GrayLevel[0.4],
                 GraphicsColor->GrayLevel[0.4],
                 FontSize->11,
                 FontWeight->Plain,
                 FontSlant->Plain,
                 FontVariations->{"Underline"->False},
                 FontColor->GrayLevel[0.4]]},
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "PasswordLabel"], StandardForm],
                 ImageSizeCache->{57., {1., 9.}}], 
                InputFieldBox[Dynamic[$CellContext`password$$], String]}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {Right, Left}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {Automatic, 0.5, 1}}],
             "Grid"]},
           {
            PaneSelectorBox[{True->"\<\"\"\>", False->
             PanelBox[
              TagBox[GridBox[{
                 {
                  PaneBox[
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ErrorIcon.png"]],
                    ImageSizeCache->{34., {14., 18.}}],
                   ImageMargins->{{15, 5}, {0, 0}}], 
                  PaneBox[
                   DynamicBox[ToBoxes[
                    Style[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}], 
                    FormatType -> TextForm], StandardForm],
                    ImageSizeCache->{30., {1., 9.}}],
                   Alignment->{Left, Center},
                   AppearanceElements->{},
                   BaseStyle->{"TextIndent", FontColor -> RGBColor[0.5, 0, 0]},
                   ImageSize->{490, 70},
                   Scrollbars->Automatic]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "Rows" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"],
              Alignment->{0.5, Center},
              
              Appearance->{
               "Default" -> 
                FrontEnd`FileName[{"Dialogs", "Activation"}, 
                  "ErrorBackground.9.png"]}]}, Dynamic[
              FEPrivate`MemberQ[{"", None}, 
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ErrorMessage"}]]],
             ImageMargins->{{0, 0}, {10, 0}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
         "Column"], "Network"->
        TagBox[GridBox[{
           {
            StyleBox[
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "NetworkSubtitle"], StandardForm],
              ImageSizeCache->{281., {1., 12.}}], "Heading",
             StripOnInput->False]},
           {
            TagBox[GridBox[{
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "NetworkText"], StandardForm],
                 ImageSizeCache->{461., {3., 9.}}], "\[SpanFromLeft]"},
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ServerLabel"], StandardForm],
                 ImageSizeCache->{71., {1., 9.}}], 
                InputFieldBox[Dynamic[$CellContext`server$$], String,
                 BoxID -> "inputfield"]}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
             
             "Grid"]},
           {
            PaneSelectorBox[{True->"\<\"\"\>", False->
             PanelBox[
              TagBox[GridBox[{
                 {
                  PaneBox[
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ErrorIcon.png"]],
                    ImageSizeCache->{34., {14., 18.}}],
                   ImageMargins->{{15, 5}, {0, 0}}], 
                  PaneBox[
                   DynamicBox[ToBoxes[
                    Style[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}], 
                    FormatType -> TextForm], StandardForm],
                    ImageSizeCache->{30., {1., 9.}}],
                   Alignment->{Left, Center},
                   AppearanceElements->{},
                   BaseStyle->{"TextIndent", FontColor -> RGBColor[0.5, 0, 0]},
                   ImageSize->{490, 70},
                   Scrollbars->Automatic]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "Rows" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"],
              Alignment->{0.5, Center},
              
              Appearance->{
               "Default" -> 
                FrontEnd`FileName[{"Dialogs", "Activation"}, 
                  "ErrorBackground.9.png"]}]}, Dynamic[
              FEPrivate`MemberQ[{"", None}, 
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ErrorMessage"}]]],
             ImageMargins->{{0, 0}, {10, 0}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          
          GridBoxSpacings->{
           "Columns" -> {{Automatic}}, "Rows" -> {{2}}, 
            "RowsIndexed" -> {2 -> 1}}],
         "Column"], "Method"->
        TagBox[GridBox[{
           {
            StyleBox[
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "MethodSubtitle"], StandardForm],
              ImageSizeCache->{205., {1., 12.}}], "Heading",
             StripOnInput->False]},
           {
            TagBox[
             TagBox[
              PaneSelectorBox[{False->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Default.png"]],
                    ImageSizeCache->{10., {5., 10.}}], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodOnlineLabel"], StandardForm],
                    ImageSizeCache->{209., {2.7294921875, 10.}}],
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodOnlineText"], StandardForm],
                    ImageSizeCache->{302., {3., 9.}}],
                    StripOnInput->False,
                    FontColor->GrayLevel[0.31]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"], True->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Hover.png"]]], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodOnlineLabel"], StandardForm]], 
                    "Chevron",
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodOnlineText"], StandardForm]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]}, Dynamic[
                CurrentValue["MouseOver"]],
               FrameMargins->0,
               ImageSize->Automatic],
              MouseAppearanceTag["LinkHand"]],
             EventHandlerTag[{"MouseClicked" :> (CurrentValue[
                   EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                 "Online"; FinishDynamic[]; MathLink`CallFrontEnd[
                  FrontEnd`BoxReferenceFind[
                   FE`BoxReference[
                    EvaluationNotebook[], {{"inputfield"}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]]), PassEventsDown -> Automatic, 
               PassEventsUp -> True}]]},
           {
            TagBox[
             TagBox[
              PaneSelectorBox[{False->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Default.png"]],
                    ImageSizeCache->{10., {5., 10.}}], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodManualLabel"], StandardForm],
                    ImageSizeCache->{112., {1., 10.}}],
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodManualText"], StandardForm],
                    ImageSizeCache->{360., {3., 9.}}],
                    StripOnInput->False,
                    FontColor->GrayLevel[0.31]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"], True->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Hover.png"]]], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodManualLabel"], StandardForm]], 
                    "Chevron",
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodManualText"], StandardForm]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]}, Dynamic[
                CurrentValue["MouseOver"]],
               FrameMargins->0,
               ImageSize->Automatic],
              MouseAppearanceTag["LinkHand"]],
             EventHandlerTag[{"MouseClicked" :> (CurrentValue[
                   EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                 "Manual"; FinishDynamic[]; MathLink`CallFrontEnd[
                  FrontEnd`BoxReferenceFind[
                   FE`BoxReference[
                    EvaluationNotebook[], {{"inputfield"}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]]), PassEventsDown -> Automatic, 
               PassEventsUp -> True}]]},
           {
            TagBox[
             TagBox[
              PaneSelectorBox[{False->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Default.png"]],
                    ImageSizeCache->{10., {5., 10.}}], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodNetworkLabel"], StandardForm],
                    ImageSizeCache->{224., {1., 10.}}],
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodNetworkText"], StandardForm],
                    ImageSizeCache->{306., {19., 9.240234375}}],
                    StripOnInput->False,
                    FontColor->GrayLevel[0.31]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"], True->
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ArrowIcon-Hover.png"]]], 
                   StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodNetworkLabel"], StandardForm]],
                     "Chevron",
                    StripOnInput->False,
                    FontSize->13]},
                  {"\[SpanFromAbove]", 
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "MethodNetworkText"], StandardForm]]}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]}, Dynamic[
                CurrentValue["MouseOver"]],
               FrameMargins->0,
               ImageSize->Automatic],
              MouseAppearanceTag["LinkHand"]],
             EventHandlerTag[{"MouseClicked" :> (CurrentValue[
                   EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                 "Network"; FinishDynamic[]; MathLink`CallFrontEnd[
                  FrontEnd`BoxReferenceFind[
                   FE`BoxReference[
                    EvaluationNotebook[], {{"inputfield"}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]]), PassEventsDown -> Automatic, 
               PassEventsUp -> True}]]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}}],
         "Column"], "Progress"->
        TagBox[GridBox[{
           {
            StyleBox[
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "ProgressSubtitle"], StandardForm],
              ImageSizeCache->{90., {4., 12.}}], "Heading",
             StripOnInput->False]},
           {
            PaneSelectorBox[{False->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource["ActivationDialog", "ProgressText"],
                StandardForm],
              ImageSizeCache->{126., {3., 9.}}], True->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource["ActivationDialog", "SuccessText"], 
               StandardForm]]}, Dynamic[
              FEPrivate`MemberQ[{"Success", "ServerSuccess"}, 
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ErrorMessage"}]]],
             FrameMargins->0,
             ImageMargins->0,
             ImageSize->Automatic]},
           {
            PaneBox[
             
             DynamicModuleBox[{$CellContext`i$$ = 
              8, $CellContext`mat$$ = CompressedData["
1:eJxTTMoPSmVmYGDgAWImKF7lE/GiattrewYweACj96OLw/hQej+qehj4AOV/
2I8qjjAPTf9+7Oahi6ObB7cPXT/cHFz2oPlrP7p5qP6Au98eh3577Oahi6Ob
B7fPHgBxvnAl
              "]}, 
              TagBox[GridBox[{
                 {
                  AnimatorBox[Dynamic[$CellContext`i$$], {1, 12, 1},
                   AppearanceElements->{},
                   DefaultDuration->1,
                   ImageSize->{1, 1}], 
                  DynamicBox[ToBoxes[
                    Part[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator1.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator2.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator3.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator4.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator5.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator6.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator7.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator8.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator9.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator10.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator11.png"]]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Dialogs", "Activation"}, 
                    "ProgressIndicator12.png"]]]]}, $CellContext`i$$], 
                    StandardForm],
                   ImageSizeCache->{128., {62., 66.}}]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"],
              DynamicModuleValues:>{},
              Initialization:>If[CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] =!= 
                None, 
                FrontEndTokenExecute["HandleShiftReturn"]],
              SynchronousInitialization->False],
             Alignment->{-0.1, 0},
             ImageSize->{Full, 200}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
         "Column"], "Contact"->
        PaneBox[
         TagBox[GridBox[{
            {
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "ActivationDialog", "ContactTitle"], StandardForm],
               ImageSizeCache->{463., {4., 12.}}], "Heading",
              StripOnInput->False,
              LineBreakWithin->False]},
            {
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "ActivationDialog", "ContactSubtitle"], StandardForm],
               ImageSizeCache->{575., {19., 9.240234375}}], 
              "TextStyleInputField",
              StripOnInput->False]},
            {
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "ContactWithText"], StandardForm],
              ImageSizeCache->{140., {3., 9.}}]},
            {
             StyleBox[
              TemplateBox[{DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ContactKeyLabel"], StandardForm]],
                TagBox[
                 InputFieldBox[
                  Dynamic[$CellContext`activationKey$$, None], String, 
                  Appearance -> None, ContinuousAction -> True, BoxID -> 
                  "copyablepane1", 
                  BaseStyle -> {ZeroWidthTimes -> True, FontWeight -> Bold}], 
                 
                 EventHandlerTag[{{"MouseClicked", 1} :> MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationNotebook[], {{"copyablepane1"}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]], PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]]},
               "RowDefault"], "Hyperlink",
              StripOnInput->False]},
            {
             StyleBox[
              TemplateBox[{DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "ActivationDialog", "ContactIDLabel"], StandardForm]],TagBox[
                 InputFieldBox[
                  Dynamic[FEPrivate`$MachineID, None], String, Appearance -> 
                  None, ContinuousAction -> True, BoxID -> "copyablepane2", 
                  BaseStyle -> {ZeroWidthTimes -> True, FontWeight -> Bold}], 
                 
                 EventHandlerTag[{{"MouseClicked", 1} :> MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationNotebook[], {{"copyablepane2"}}, FE`BoxOffset -> {
                    FE`BoxChild[1]}, FE`SearchStart -> 
                    "StartFromBeginning"]]], PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]]},
               "RowDefault"], "Hyperlink",
              StripOnInput->False]},
            {
             TagBox[GridBox[{
                {
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ContactNameInc"], StandardForm],
                  ImageSizeCache->{131., {2., 9.}}], 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ContactNameLtd"], StandardForm],
                  ImageSizeCache->{174., {3., 9.}}]},
                {
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ContactAddrInc"], StandardForm],
                  ImageSizeCache->{297., {97.759765625, 9.240234375}}], 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ContactAddrLtd"], StandardForm],
                  ImageSizeCache->{164., {82., 10.}}]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
               GridBoxItemSize->{"Columns" -> {Fit, Automatic}},
               
               GridBoxItemStyle->{
                "Columns" -> {{Automatic}}, 
                 "RowsIndexed" -> {2 -> GrayLevel[0.4]}}],
              "Grid"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "Rows" -> {{False}}, 
             "RowsIndexed" -> {-2 -> GrayLevel[0.85]}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           
           GridBoxSpacings->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
             "RowsIndexed" -> {2 -> 1.2, 3 -> 1.2, 6 -> 1.8}}],
          "Column"],
         BaseStyle->"DialogStyle",
         ImageSize->580], "Expired"->
        TagBox[GridBox[{
           {
            StyleBox[
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "ActivationDialog", "ExpiredSubtitle"], StandardForm],
              ImageSizeCache->{187., {4., 12.}}], "Heading",
             StripOnInput->False]},
           {
            TagBox[GridBox[{
               {"", 
                PaneBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ExpiredBuyText"], StandardForm],
                  ImageSizeCache->{189., {3., 9.}}],
                 Alignment->{Left, Center},
                 ImageSize->{350, 50}], 
                TagBox[
                 ButtonBox[
                  StyleBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "ExpiredBuyButton"], StandardForm],
                    ImageSizeCache->{81., {3., 10.}}],
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontWeight->Plain,
                   FontColor->GrayLevel[1]],
                  
                  Appearance->{
                   "Default" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "RedButton-Default.9.png"], "Hover" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "RedButton-Hover.9.png"], "Pressed" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "RedButton-Pressed.9.png"]},
                  
                  ButtonFunction:>FE`hyperlinkCoded[
                   "http://www.wolfram.com/mathematica/how-to-buy", 
                    "source=expired"],
                  Evaluator->Automatic,
                  FrameMargins->{{10, 10}, {0, 0}}],
                 MouseAppearanceTag["LinkHand"]], ""},
               {"", 
                PaneBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ExpiredExtendText"], StandardForm],
                  ImageSizeCache->{155., {3., 9.}}],
                 Alignment->{Left, Center},
                 ImageSize->{350, 50}], 
                TagBox[
                 ButtonBox[
                  StyleBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "ExpiredExtendButton"], StandardForm],
                    
                    ImageSizeCache->{108., {3., 9.}}],
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontWeight->Plain,
                   FontColor->GrayLevel[1]],
                  
                  Appearance->{
                   "Default" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Default.9.png"], "Hover" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Hover.9.png"], "Pressed" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Pressed.9.png"]},
                  BaseStyle->"ActivationLink",
                  ButtonData->"Online",
                  Evaluator->Automatic,
                  FrameMargins->{{10, 10}, {0, 0}}],
                 MouseAppearanceTag["LinkHand"]], ""},
               {"", 
                PaneBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "ActivationDialog", "ExpiredRequestText"], StandardForm],
                  ImageSizeCache->{252., {3., 9.}}],
                 Alignment->{Left, Center},
                 ImageSize->{350, 50}], 
                TagBox[
                 ButtonBox[
                  StyleBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "ExpiredRequestButton"], StandardForm],
                    ImageSizeCache->{99., {3., 9.}}],
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontWeight->Plain,
                   FontColor->GrayLevel[1]],
                  
                  Appearance->{
                   "Default" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Default.9.png"], "Hover" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Hover.9.png"], "Pressed" -> 
                    FrontEnd`FileName[{"Dialogs", "Activation"}, 
                    "DarkGrayButton-Pressed.9.png"]},
                  BaseStyle->"ContactActivationLink",
                  Evaluator->Automatic,
                  FrameMargins->{{10, 10}, {0, 0}}],
                 MouseAppearanceTag["LinkHand"]], ""}
              },
              AutoDelete->False,
              FrameStyle->GrayLevel[0.85],
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {-2 -> Right}, 
                "Rows" -> {{Automatic}}},
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, 
                "ColumnsIndexed" -> {1 -> 2, -1 -> 2}, "Rows" -> {{0}}}],
             "Grid"]},
           {
            PaneBox[
             RowBox[{
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "ActivationDialog", "ExpiredContactText"], StandardForm],
               ImageSizeCache->{219., {1., 9.}}], "\[InvisibleSpace]", 
              TagBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ContactActivationLink"], StandardForm],
                ImageSizeCache->{163., {3., 10.}}],
               MouseAppearanceTag["LinkHand"]]}],
             Alignment->Right,
             FrameMargins->{{0, 20}, {0, 40}},
             ImageSize->Full]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
         "Column"]}, Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ActivationState"}]],
        Alignment->{Left, Top},
        Background->GrayLevel[1],
        BaseStyle->"DialogStyle",
        FrameMargins->{{60, 0}, {0, 25}},
        ImageSize->{650, All}]},
      {
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {"", 
            PaneSelectorBox[{False->
             ButtonBox[
              DynamicBox[FEPrivate`FrontEndResourceString["quitButtonText"]],
              Appearance->"CancelButton",
              ButtonFunction:>FrontEndExecute[
                FrontEnd`FrontEndToken["FrontEndQuitNonInteractive"]],
              Evaluator->None,
              Method->"Preemptive"], True->
             ButtonBox[
              DynamicBox[FEPrivate`FrontEndResourceString["cancelButtonText"]],
              Appearance->"CancelButton",
              ButtonFunction:>DialogReturn[$Canceled],
              Evaluator->Automatic,
              ImageSize->Dynamic[
                CurrentValue["DefaultButtonSize"]],
              Method->"Preemptive"]}, Dynamic[
              CurrentValue["LicenseValid"]]], "", 
            PaneSelectorBox[{False->
             ButtonBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["ActivationDialog", "FinishLabel"],
                 StandardForm]],
              Appearance->"DefaultButton",
              
              ButtonFunction:>
               Module[{$CellContext`tmperrormsg$, $CellContext`securedQ$ = 
                 FE`Evaluate[
                   FEPrivate`Not[
                    FEPrivate`SameQ[
                    FrontEnd`$NotebookLicenseType, 
                    "Unauthorized Unsecured"]]]}, $CellContext`tmperrormsg$ = 
                 If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                   "Progress", "Waiting", 
                   (MathLink`CallFrontEndHeld[
                    FrontEnd`ActivateLicense[
                    SlotSequence[1]]]& )[
                   "", $CellContext`name$$, $CellContext`org$$, 
                    "", $CellContext`password$$]]; If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                  "Online", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                   "Progress"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                   ""; FinishDynamic[]]; If[
                  And[$CellContext`securedQ$, CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                   "Progress"], 
                  While[$CellContext`tmperrormsg$ === "Waiting", 
                    Pause[0.1]; $CellContext`tmperrormsg$ = FrontEndExecute[
                    FrontEnd`TickleActivation[]]]; 
                  If[$CellContext`tmperrormsg$ === "Success", CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; 
                    Pause[1.5]]]; Switch[$CellContext`tmperrormsg$, 
                  Alternatives["Success", "ServerSuccess"], 
                  If[
                   MemberQ[
                    
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "LicensesAgreed"}], 
                    ToString[$VersionNumber]], DialogReturn[]; If[
                    CurrentValue["LicenseValid"], 
                    Scan[If[
                    AbsoluteCurrentValue[#, {TaggingRules, "NotebookID"}] === 
                    "WelcomeScreen", 
                    NotebookClose[#]]& , 
                    Notebooks[]]; 
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "ShowAtStartup"}] = Inherited]; 
                   MathLink`CallFrontEnd[
                    FrontEnd`FinishStartup[]], 
                   FrontEndTokenExecute["LicenseAgreementDialog"]; 
                   CurrentValue[
                    EvaluationNotebook[], Visible] = False; DialogReturn[]], 
                  "EnterPassword", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                   ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                   If[$CellContext`securedQ$, "Manual", "Online"], 
                  "DoNothing", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                   ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                   If[$CellContext`securedQ$, "Method", "Online"], 
                  Alternatives["Expired", "TrialExpired"], CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                   ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                   "Expired", 
                  Blank[], CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                   Which["" =!= "", "Network", 
                    
                    And[$CellContext`securedQ$, $CellContext`password$$ =!= 
                    ""], "Manual", True, "Online"]]],
              Evaluator->Automatic,
              Method->"Queued"], True->
             ButtonBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["ActivationDialog", "FinishLabel"],
                 StandardForm]],
              Appearance->Automatic,
              ButtonFunction:>Null,
              Enabled->False,
              Evaluator->Automatic,
              Method->"Preemptive"]}, 
             Dynamic[$CellContext`password$$ === ""]], ""}
          },
          AutoDelete->False,
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {3 -> Fit}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {"", 
            PaneSelectorBox[{1->
             TagBox[GridBox[{
                {
                 PaneSelectorBox[{False->
                  ButtonBox[
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "quitButtonText"],
                    ImageSizeCache->{27., {2., 10.}}],
                   Appearance->"CancelButton",
                   ButtonFunction:>FrontEndExecute[
                    FrontEnd`FrontEndToken["FrontEndQuitNonInteractive"]],
                   Evaluator->None,
                   Method->"Preemptive"], True->
                  ButtonBox[
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "cancelButtonText"],
                    ImageSizeCache->{42., {1., 10.}}],
                   Appearance->"CancelButton",
                   ButtonFunction:>DialogReturn[$Canceled],
                   Evaluator->Automatic,
                   ImageSize->Dynamic[
                    CurrentValue["DefaultButtonSize"]],
                   Method->"Preemptive"]}, Dynamic[
                   CurrentValue["LicenseValid"]]], ""}
               },
               AutoDelete->False,
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"], 2->
             TagBox[GridBox[{
                {
                 PaneSelectorBox[{False->
                  ButtonBox[
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "quitButtonText"],
                    ImageSizeCache->{27., {2., 10.}}],
                   Appearance->"CancelButton",
                   ButtonFunction:>FrontEndExecute[
                    FrontEnd`FrontEndToken["FrontEndQuitNonInteractive"]],
                   Evaluator->None,
                   Method->"Preemptive"], True->
                  ButtonBox[
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "cancelButtonText"],
                    ImageSizeCache->{42., {1., 10.}}],
                   Appearance->"CancelButton",
                   ButtonFunction:>DialogReturn[$Canceled],
                   Evaluator->Automatic,
                   ImageSize->Dynamic[
                    CurrentValue["DefaultButtonSize"]],
                   Method->"Preemptive"]}, Dynamic[
                   CurrentValue["LicenseValid"]]], 
                 PaneBox[
                  ButtonBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "ActivationDialog", "ActivateMethodLabel"], StandardForm],
                    
                    ImageSizeCache->{139., {3., 10.}}],
                   Appearance->Automatic,
                   ButtonFunction:>(CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Method"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""),
                   Evaluator->Automatic,
                   Method->"Preemptive"]]}
               },
               AutoDelete->False,
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"], 3->
             TagBox[GridBox[{
                {
                 StyleBox[
                  ButtonBox["\<\"\"\>",
                   Appearance->"DefaultButton",
                   
                   ButtonFunction:>
                    Module[{$CellContext`tmperrormsg$, $CellContext`securedQ$ = 
                    FE`Evaluate[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    FrontEnd`$NotebookLicenseType, 
                    "Unauthorized Unsecured"]]]}, $CellContext`tmperrormsg$ = 
                    If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress", "Waiting", 
                    (MathLink`CallFrontEndHeld[
                    FrontEnd`ActivateLicense[
                    SlotSequence[1]]]& )[$CellContext`activationKey$$, "", 
                    "", $CellContext`server$$, $CellContext`password$$]]; 
                    If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Online", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Progress"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; FinishDynamic[]]; If[
                    And[$CellContext`securedQ$, CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress"], 
                    While[$CellContext`tmperrormsg$ === "Waiting", 
                    Pause[0.1]; $CellContext`tmperrormsg$ = FrontEndExecute[
                    FrontEnd`TickleActivation[]]]; 
                    If[$CellContext`tmperrormsg$ === "Success", CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; 
                    Pause[1.5]]]; Switch[$CellContext`tmperrormsg$, 
                    Alternatives["Success", "ServerSuccess"], 
                    If[
                    MemberQ[
                    
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "LicensesAgreed"}], 
                    ToString[$VersionNumber]], DialogReturn[]; If[
                    CurrentValue["LicenseValid"], 
                    Scan[If[AbsoluteCurrentValue[#, {
                    TaggingRules, "NotebookID"}] === "WelcomeScreen", 
                    NotebookClose[#]]& , 
                    Notebooks[]]; 
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "ShowAtStartup"}] = Inherited]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`FinishStartup[]], 
                    FrontEndTokenExecute["LicenseAgreementDialog"]; 
                    CurrentValue[
                    EvaluationNotebook[], Visible] = False; DialogReturn[]], 
                    "EnterPassword", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Manual", "Online"], 
                    "DoNothing", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Method", "Online"], 
                    Alternatives["Expired", "TrialExpired"], CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Expired", 
                    Blank[], CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    Which[$CellContext`server$$ =!= "", "Network", 
                    
                    And[$CellContext`securedQ$, $CellContext`password$$ =!= 
                    ""], "Manual", True, "Online"]]],
                   Evaluator->Automatic,
                   Method->"Queued"],
                  StripOnInput->False,
                  ShowContents->False], ""}
               },
               AutoDelete->False,
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]}, Dynamic[
              FEPrivate`Which[
               FEPrivate`MemberQ[{"Online", "Manual", "Network"}, 
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "ActivationState"}]], 2, 
               FEPrivate`MemberQ[{"Method", "Expired"}, 
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "ActivationState"}]], 1, 
               FEPrivate`SameQ[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "ActivationState"}], 
                "Progress"], 3, True, 0]],
             ImageSize->Automatic], "", 
            PaneSelectorBox[{"Online"->
             PaneSelectorBox[{False->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->"DefaultButton",
               
               ButtonFunction:>
                Module[{$CellContext`tmperrormsg$, $CellContext`securedQ$ = 
                  FE`Evaluate[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    FrontEnd`$NotebookLicenseType, 
                    "Unauthorized Unsecured"]]]}, $CellContext`tmperrormsg$ = 
                  If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress", "Waiting", 
                    (MathLink`CallFrontEndHeld[
                    FrontEnd`ActivateLicense[
                    SlotSequence[1]]]& )[$CellContext`activationKey$$, "", "",
                     "", ""]]; If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                   "Online", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Progress"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; FinishDynamic[]]; If[
                   And[$CellContext`securedQ$, CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress"], 
                   While[$CellContext`tmperrormsg$ === "Waiting", 
                    Pause[0.1]; $CellContext`tmperrormsg$ = FrontEndExecute[
                    FrontEnd`TickleActivation[]]]; 
                   If[$CellContext`tmperrormsg$ === "Success", CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; 
                    Pause[1.5]]]; Switch[$CellContext`tmperrormsg$, 
                   Alternatives["Success", "ServerSuccess"], 
                   If[
                    MemberQ[
                    
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "LicensesAgreed"}], 
                    ToString[$VersionNumber]], DialogReturn[]; If[
                    CurrentValue["LicenseValid"], 
                    Scan[If[
                    AbsoluteCurrentValue[#, {TaggingRules, "NotebookID"}] === 
                    "WelcomeScreen", 
                    NotebookClose[#]]& , 
                    Notebooks[]]; 
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "ShowAtStartup"}] = Inherited]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`FinishStartup[]], 
                    FrontEndTokenExecute["LicenseAgreementDialog"]; 
                    CurrentValue[
                    EvaluationNotebook[], Visible] = False; DialogReturn[]], 
                   "EnterPassword", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Manual", "Online"], 
                   "DoNothing", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Method", "Online"], 
                   Alternatives["Expired", "TrialExpired"], CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Expired", 
                   Blank[], CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    Which["" =!= "", "Network", 
                    And[$CellContext`securedQ$, "" =!= ""], "Manual", True, 
                    "Online"]]],
               Evaluator->Automatic,
               Method->"Queued"], True->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->Automatic,
               ButtonFunction:>Null,
               Enabled->False,
               Evaluator->Automatic,
               Method->"Preemptive"]}, 
              Dynamic[$CellContext`activationKey$$ === ""]], "Manual"->
             PaneSelectorBox[{False->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->"DefaultButton",
               
               ButtonFunction:>
                Module[{$CellContext`tmperrormsg$, $CellContext`securedQ$ = 
                  FE`Evaluate[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    FrontEnd`$NotebookLicenseType, 
                    "Unauthorized Unsecured"]]]}, $CellContext`tmperrormsg$ = 
                  If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress", "Waiting", 
                    (MathLink`CallFrontEndHeld[
                    FrontEnd`ActivateLicense[
                    SlotSequence[1]]]& )[$CellContext`activationKey$$, "", "",
                     "", $CellContext`password$$]]; If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                   "Online", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Progress"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; FinishDynamic[]]; If[
                   And[$CellContext`securedQ$, CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress"], 
                   While[$CellContext`tmperrormsg$ === "Waiting", 
                    Pause[0.1]; $CellContext`tmperrormsg$ = FrontEndExecute[
                    FrontEnd`TickleActivation[]]]; 
                   If[$CellContext`tmperrormsg$ === "Success", CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; 
                    Pause[1.5]]]; Switch[$CellContext`tmperrormsg$, 
                   Alternatives["Success", "ServerSuccess"], 
                   If[
                    MemberQ[
                    
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "LicensesAgreed"}], 
                    ToString[$VersionNumber]], DialogReturn[]; If[
                    CurrentValue["LicenseValid"], 
                    Scan[If[
                    AbsoluteCurrentValue[#, {TaggingRules, "NotebookID"}] === 
                    "WelcomeScreen", 
                    NotebookClose[#]]& , 
                    Notebooks[]]; 
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "ShowAtStartup"}] = Inherited]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`FinishStartup[]], 
                    FrontEndTokenExecute["LicenseAgreementDialog"]; 
                    CurrentValue[
                    EvaluationNotebook[], Visible] = False; DialogReturn[]], 
                   "EnterPassword", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Manual", "Online"], 
                   "DoNothing", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Method", "Online"], 
                   Alternatives["Expired", "TrialExpired"], CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Expired", 
                   Blank[], CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    Which["" =!= "", "Network", 
                    
                    And[$CellContext`securedQ$, $CellContext`password$$ =!= 
                    ""], "Manual", True, "Online"]]],
               Evaluator->Automatic,
               Method->"Queued"], True->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->Automatic,
               ButtonFunction:>Null,
               Enabled->False,
               Evaluator->Automatic,
               Method->"Preemptive"]}, Dynamic[
               
               Or[$CellContext`activationKey$$ === 
                "", $CellContext`password$$ === ""]]], "Network"->
             PaneSelectorBox[{False->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->"DefaultButton",
               
               ButtonFunction:>
                Module[{$CellContext`tmperrormsg$, $CellContext`securedQ$ = 
                  FE`Evaluate[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    FrontEnd`$NotebookLicenseType, 
                    "Unauthorized Unsecured"]]]}, $CellContext`tmperrormsg$ = 
                  If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress", "Waiting", 
                    (MathLink`CallFrontEndHeld[
                    FrontEnd`ActivateLicense[
                    SlotSequence[1]]]& )[
                    "", "", "", $CellContext`server$$, ""]]; If[CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                   "Online", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Progress"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; FinishDynamic[]]; If[
                   And[$CellContext`securedQ$, CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] === 
                    "Progress"], 
                   While[$CellContext`tmperrormsg$ === "Waiting", 
                    Pause[0.1]; $CellContext`tmperrormsg$ = FrontEndExecute[
                    FrontEnd`TickleActivation[]]]; 
                   If[$CellContext`tmperrormsg$ === "Success", CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; 
                    Pause[1.5]]]; Switch[$CellContext`tmperrormsg$, 
                   Alternatives["Success", "ServerSuccess"], 
                   If[
                    MemberQ[
                    
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "LicensesAgreed"}], 
                    ToString[$VersionNumber]], DialogReturn[]; If[
                    CurrentValue["LicenseValid"], 
                    Scan[If[
                    AbsoluteCurrentValue[#, {TaggingRules, "NotebookID"}] === 
                    "WelcomeScreen", 
                    NotebookClose[#]]& , 
                    Notebooks[]]; 
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "ShowAtStartup"}] = Inherited]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`FinishStartup[]], 
                    FrontEndTokenExecute["LicenseAgreementDialog"]; 
                    CurrentValue[
                    EvaluationNotebook[], Visible] = False; DialogReturn[]], 
                   "EnterPassword", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Manual", "Online"], 
                   "DoNothing", CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    If[$CellContext`securedQ$, "Method", "Online"], 
                   Alternatives["Expired", "TrialExpired"], CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = 
                    ""; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    "Expired", 
                   Blank[], CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, 
                    "ErrorMessage"}] = $CellContext`tmperrormsg$; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                    Which[$CellContext`server$$ =!= "", "Network", 
                    And[$CellContext`securedQ$, "" =!= ""], "Manual", True, 
                    "Online"]]],
               Evaluator->Automatic,
               Method->"Queued"], True->
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "ActivationDialog", "ActivateButtonLabel"], StandardForm],
                ImageSizeCache->{50., {1., 10.}}],
               Appearance->Automatic,
               ButtonFunction:>Null,
               Enabled->False,
               Evaluator->Automatic,
               Method->"Preemptive"]}, Dynamic[$CellContext`server$$ === ""]],
              "Progress"->
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResourceString["cancelButtonText"],
               
               ImageSizeCache->{42., {1., 10.}}],
              Appearance->"CancelButton",
              ButtonFunction:>(FrontEndExecute[
                 FrontEnd`EvaluatorAbort["System"]]; CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = ""; 
               CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                "Online"),
              Evaluator->Automatic,
              ImageSize->Dynamic[
                CurrentValue["DefaultButtonSize"]],
              Method->"Preemptive"], "Contact"->
             ButtonBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["ActivationDialog", "BackLabel"], 
                StandardForm],
               ImageSizeCache->{29., {1., 10.}}],
              Appearance->"CancelButton",
              ButtonFunction:>(CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = ""; 
               CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "ActivationState"}] = 
                "Manual"),
              Evaluator->Automatic,
              Method->"Preemptive"]}, Dynamic[
              CurrentValue[
               EvaluationNotebook[], {TaggingRules, "ActivationState"}]]], 
            ""}
          },
          AutoDelete->False,
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {3 -> Fit}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
         "Grid"]}, Dynamic[
         FEPrivate`SameQ[
         FrontEnd`$NotebookLicenseType, "Unauthorized Unsecured"]],
        ImageMargins->{{0, 0}, {3, 
           FEPrivate`If[
            FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], 8, 6]}},
        ImageSize->Full]}
     },
     DefaultBaseStyle->"Column",
     FrameStyle->GrayLevel[0.8],
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxDividers->{
      "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
    "Column"],
   DynamicModuleValues:>{},
   Initialization:>(CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ActivationState"}] = Which[
      FE`Evaluate[
      FrontEnd`$NotebookNetworkLicense], $CellContext`server$$ = 
       FE`Evaluate[FrontEnd`$NotebookLicenseServer]; "Network", 
      Or[
       Not[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Reactivate"}, True]], 
       FE`Evaluate[
        FEPrivate`SameQ[
        FrontEnd`$NotebookLicenseType, 
         "Unauthorized Unsecured"]], ($CellContext`activationKey$$ = 
        FE`Evaluate[FrontEnd`$NotebookActivationKey]) === ""], "Online", 
      FE`Evaluate[FrontEnd`$NotebookLicenseType] === "Trial", CurrentValue[
         EvaluationNotebook[], {TaggingRules, "ErrorMessage"}] = None; 
      "Online", True, "Progress"]),
   UnsavedVariables:>{$CellContext`activationKey$$}],
  ImageSize->650]],
 CellMargins->0,
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
NotebookEventActions->{"EscapeKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "WindowClose" :> FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {"MenuCommand", "EvaluateCells"} :> 
  FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateNextCell"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]]},
NotebookDynamicExpression:>MathLink`CallFrontEnd[
  FrontEnd`BoxReferenceFind[
   FE`BoxReference[
    EvaluationNotebook[], {{"inputfield"}}, FE`BoxOffset -> {
      FE`BoxChild[1]}, FE`SearchStart -> "StartFromBeginning"]]],
WindowSize->{650, FitAll},
WindowMargins->Automatic,
WindowFrame->"ModalDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["ActivationDialog", "WindowTitle"]],
PrivateNotebookOptions->{"ExcludeFromShutdown"->False,
"FileOutlineCache"->True},
TaggingRules->{
 "ActivationState" -> "Online", "ErrorMessage" -> "", "Unsecured" -> False},
CellContext->"Global`",
ButtonBoxOptions->{ImageSize->FrontEnd`CurrentValue["DefaultButtonSize"]},
InputFieldBoxOptions->{BaseStyle->{
 ZeroWidthTimes -> True, FontWeight -> Plain},
ContinuousAction->True,
ImageSize->{306, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (May 1, 2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "SystemDialog.nb"]], 
   Cell[
    StyleData[All], AutoItalicWords -> {"Mathematica", "MathLM"}], 
   Cell[
    StyleData["Heading", StyleDefinitions -> StyleData["DialogStyle"]], 
    FontSize -> FEPrivate`If[
      FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], 15, 16], FontColor -> 
    RGBColor[0.88, 0.02, 0]], 
   Cell[
    StyleData["DialogStyle"], FontFamily -> "Helvetica", FontSize -> 
    FEPrivate`If[
      FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], 11, 12], 
    FontWeight -> Bold, FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["TextIndent", StyleDefinitions -> StyleData["DialogStyle"]], 
    LineIndent -> 0, LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
   Cell[
    StyleData["Chevron"], FontColor -> RGBColor[0.88, 0.02, 0]], 
   Cell[
    StyleData["Hyperlink"], ContextMenu -> None, FontColor -> GrayLevel[0.4]], 
   Cell[
    StyleData["ActivationLink"], FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.823529411764706, 0.490196078431373, 0.133333333333333], 
       RGBColor[0.88, 0.02, 0]]], 
    ButtonBoxOptions -> {
     Appearance -> None, ButtonFunction :> (FrontEndExecute[
        FrontEnd`SetOptions[
         FrontEnd`ButtonNotebook[], 
         TaggingRules -> {"ActivationState" -> #, "ErrorMessage" -> ""}]]& ), 
      Evaluator -> None, ImageSize -> All}], 
   Cell[
    StyleData[
    "ContactActivationLink", StyleDefinitions -> StyleData["ActivationLink"]],
     ButtonBoxOptions -> {ButtonFunction :> (FE`hyperlinkCoded[
        Switch[#, "OnlineActivateLink", "http://support.wolfram.com/kb/373", 
         "PrivacyPolicyLink", 
         StringJoin["http://www.wolfram.com/legal/privacy/wolfram-", 
          
          If[$ProgramName === "MathematicaPlayerPro", "player-pro", 
           "mathematica"], ".html"], "Register", 
         "https://user.wolfram.com/portal/ProductRegistration", "UserPortal", 
         "https://user.wolfram.com", 
         Blank[], "http://www.wolfram.com/support/contact/email/"], 
        "topic=Activation", 
        StringJoin["source=", 
         ToLowerCase[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "ActivationState"}]]]]& ), 
      Evaluator -> Automatic}], 
   Cell[
    StyleData[
    "SystemTransferLink", StyleDefinitions -> StyleData["ActivationLink"]], 
    ButtonBoxOptions -> {
     ButtonFunction :> (FE`hyperlinkCoded[
       "https://user.wolfram.com/portal/requestSystemTransfer.html", 
        "topic=Activation", 
        StringJoin["source=", 
         ToLowerCase[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "ActivationState"}]]]]& ), 
      Evaluator -> Automatic}]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (May 1, 2014)", 
  StyleDefinitions -> "Default.nb"],
Modal -> True
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[603, 21, 568, 18, 68, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False],
Cell[1174, 41, 83304, 1846, 366, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature ALzuaNjCXmUwlKONyB5IjoeS *)
