(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22558,        542]
NotebookOptionsPosition[     21532,        511]
NotebookOutlinePosition[     22600,        542]
CellTagsIndexPosition[     22557,        539]
WindowTitle->Install Wolfram System Item
WindowFrame->ModelessDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`type$$ = "", $CellContext`source$$ = 
  "", $CellContext`label$$ = "", $CellContext`loc$$ = 
  FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}], $CellContext`name$$ = ""}, 
  DynamicWrapperBox[
   TagBox[GridBox[{
      {
       PaneBox[
        TagBox[GridBox[{
           {
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource["FEStrings", "installType"], 
              StandardForm],
             ImageSizeCache->{109., {2., 8.}}], 
            DynamicBox[ToBoxes[
              PopupMenu[
               Dynamic[$CellContext`type$$], 
               
               Thread[{
                 "Palette", "Stylesheet", "Package", ".mx File", 
                  "WolframLink Program", "Application"} -> 
                FrontEndResource["FEStrings", "installTypesList"]], ImageSize -> 
               Full, BaseStyle -> "ControlStyle", Alignment -> Left], 
              StandardForm],
             ImageSizeCache->{164., {6., 17.}}]},
           {
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource["FEStrings", "installSource"], 
              StandardForm],
             ImageSizeCache->{36., {1., 8.}}], 
            DynamicBox[ToBoxes[
              ActionMenu[
               Dynamic[$CellContext`label$$], 
               Join[
                Replace[
                 
                 Apply[#2 :> ($CellContext`label$$ = #2; \
$CellContext`source$$ = #)& , 
                  If[
                   
                   MemberQ[{
                    "Palette", "Stylesheet", "Package"}, $CellContext`type$$], 
                   (FE`Evaluate[
                    FEPrivate`GetPopupList[#]]& )[
                    StringJoin[
                    "MenuList", $CellContext`type$$, "Windows"]], {}], {1}], {
                  
                   Pattern[$CellContext`x, 
                    BlankSequence[]]} :> {$CellContext`x, Delimiter}], 
                If[
                 
                 MemberQ[{
                  "Palette", "Stylesheet", "Package"}, $CellContext`type$$], {
                 Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", 
                    "installFromClip"]]] :> ($CellContext`label$$ = Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installFromClip"]]]; $CellContext`source$$ = 
                    "Clipboard Contents")}, {}], {Dynamic[
                   RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installFromFile"]]] :> Replace[
                   SystemDialogInput["FileOpen", 
                    Which[
                    
                    MemberQ[{
                    ".mx File", "WolframLink Program", 
                    "Application"}, $CellContext`type$$], {"", 
                    FrontEndResource["FEStrings", 
                    StringJoin["install", 
                    Last[
                    StringSplit[$CellContext`type$$]], 
                    "Filter"]]}, $CellContext`type$$ === "Package", "*.m", 
                    True, "*.nb"], WindowTitle -> " "], 
                   Pattern[$CellContext`s$, 
                    Blank[String]] :> ($CellContext`label$$ = 
                    Tooltip[$CellContext`name$$ = 
                    FileBaseName[$CellContext`source$$ = $CellContext`s$], \
$CellContext`s$])]}, 
                If[$CellContext`type$$ === "Application", {Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installFromDir"]]] :> Replace[
                    SystemDialogInput["Directory", WindowTitle -> " "], 
                    Pattern[$CellContext`s$, 
                    Blank[String]] :> ($CellContext`label$$ = 
                    Tooltip[$CellContext`name$$ = 
                    FileBaseName[$CellContext`source$$ = $CellContext`s$], \
$CellContext`s$])]}, {}]], Method -> "Queued", Appearance -> "Popup", 
               ImageSize -> Full, BaseStyle -> "ControlStyle", Alignment -> 
               Left], StandardForm],
             ImageSizeCache->{164., {7., 17.}},
             TrackedSymbols:>{$CellContext`type$$}]},
           {
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource["FEStrings", "installName"], 
              StandardForm],
             ImageSizeCache->{63., {0., 8.}}], 
            InputFieldBox[Dynamic[$CellContext`name$$], String,
             ContinuousAction->True,
             Enabled->Dynamic[
               FEPrivate`And[
                FEPrivate`UnsameQ[$CellContext`source$$, ""], 
                FEPrivate`UnsameQ[$CellContext`type$$, "Application"]]],
             ImageSize->Full]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, Left}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        FrameMargins->10,
        ImageSize->{300, Automatic}], "\[SpanFromLeft]"},
      {
       InterpretationBox[
        StyleBox[GridBox[{
           {GridBox[{
              {
               
               RadioButtonBox[Dynamic[$CellContext`loc$$], {
                FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}]},
                
                BaseStyle->{
                 RadioButtonBoxOptions -> {
                   Appearance -> Small, ImageMargins -> {{10, 3}, {5, 0}}}},
                DefaultBaseStyle->"RadioButtonBar"], 
               StyleBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEStrings", "installUserBaseDir"],
                    ImageSizeCache->{152., {3., 10.}}],
                   DynamicBox[
                    ToBoxes[
                    ToFileName[
                    Switch[$CellContext`type$$, "Palette", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                    "Palettes"}], "Stylesheet", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                    "Stylesheets"}], 
                    Blank[Symbol], 
                    FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}], 
                    Blank[], 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "Applications"}]]], 
                    StandardForm]],
                   TooltipDelay->Automatic],
                  Annotation[#, 
                   Dynamic[
                    ToFileName[
                    Switch[$CellContext`type$$, "Palette", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                    "Palettes"}], "Stylesheet", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                    "Stylesheets"}], 
                    Blank[Symbol], 
                    FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}], 
                    Blank[], 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$UserBaseDirectory, "Applications"}]]]], 
                   "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseDown" :> ($CellContext`loc$$ = 
                    FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}]), 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                "RadioButtonBarLabel",
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.21]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}]},
           {GridBox[{
              {
               
               RadioButtonBox[Dynamic[$CellContext`loc$$], {
                FrontEnd`FileName[{FrontEnd`$BaseDirectory}]},
                
                BaseStyle->{
                 RadioButtonBoxOptions -> {
                   Appearance -> Small, ImageMargins -> {{10, 3}, {5, 0}}}},
                DefaultBaseStyle->"RadioButtonBar"], 
               StyleBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "FEStrings", "installSystemBaseDir"],
                    ImageSizeCache->{202., {2., 8.}}],
                   DynamicBox[
                    ToBoxes[
                    ToFileName[
                    Switch[$CellContext`type$$, "Palette", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                    "Palettes"}], "Stylesheet", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                    "Stylesheets"}], 
                    Blank[Symbol], 
                    FrontEnd`FileName[{FrontEnd`$BaseDirectory}], 
                    Blank[], 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "Applications"}]]], 
                    StandardForm]],
                   TooltipDelay->Automatic],
                  Annotation[#, 
                   Dynamic[
                    ToFileName[
                    Switch[$CellContext`type$$, "Palette", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                    "Palettes"}], "Stylesheet", 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                    "Stylesheets"}], 
                    Blank[Symbol], 
                    FrontEnd`FileName[{FrontEnd`$BaseDirectory}], 
                    Blank[], 
                    
                    FrontEnd`FileName[{
                    FrontEnd`$BaseDirectory, "Applications"}]]]], 
                   "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseDown" :> ($CellContext`loc$$ = 
                    FrontEnd`FileName[{FrontEnd`$BaseDirectory}]), 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                "RadioButtonBarLabel",
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.21]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "Deploy"],
        RadioButtonBar[
         Dynamic[$CellContext`loc$$], {
         FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}] -> EventHandler[
            Tooltip[
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource[
               "FEStrings", "installUserBaseDir"]]], 
             Dynamic[
              ToFileName[
               Switch[$CellContext`type$$, "Palette", 
                
                FrontEnd`FileName[{
                 FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                  "Palettes"}], "Stylesheet", 
                
                FrontEnd`FileName[{
                 FrontEnd`$UserBaseDirectory, "SystemFiles", "FrontEnd", 
                  "Stylesheets"}], 
                Blank[Symbol], 
                FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}], 
                Blank[], 
                
                FrontEnd`FileName[{
                 FrontEnd`$UserBaseDirectory, "Applications"}]]]], 
             TooltipDelay -> Automatic], 
            "MouseDown" :> ($CellContext`loc$$ = 
             FrontEnd`FileName[{FrontEnd`$UserBaseDirectory}])], 
          FrontEnd`FileName[{FrontEnd`$BaseDirectory}] -> EventHandler[
            Tooltip[
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource[
               "FEStrings", "installSystemBaseDir"]]], 
             Dynamic[
              ToFileName[
               Switch[$CellContext`type$$, "Palette", 
                
                FrontEnd`FileName[{
                 FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                  "Palettes"}], "Stylesheet", 
                
                FrontEnd`FileName[{
                 FrontEnd`$BaseDirectory, "SystemFiles", "FrontEnd", 
                  "Stylesheets"}], 
                Blank[Symbol], 
                FrontEnd`FileName[{FrontEnd`$BaseDirectory}], 
                Blank[], 
                
                FrontEnd`FileName[{
                 FrontEnd`$BaseDirectory, "Applications"}]]]], TooltipDelay -> 
             Automatic], 
            "MouseDown" :> ($CellContext`loc$$ = 
             FrontEnd`FileName[{FrontEnd`$BaseDirectory}])]}, Appearance -> 
         "Vertical", 
         BaseStyle -> {
          RadioButtonBoxOptions -> {
            Appearance -> Small, ImageMargins -> {{10, 3}, {5, 0}}}}]], 
       "\[SpanFromLeft]"},
      {
       FrameBox[
        ButtonBox[
         DynamicBox[FEPrivate`FrontEndResource["FEStrings", "installHelp"],
          ImageSizeCache->{29., {3., 10.}}],
         Appearance->Automatic,
         ButtonFunction:>FrontEndTokenExecute["OpenHelpLink", {
            StringJoin["ref/menuitem/Install", 
             Replace[
              
              CurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "DialogSettings", "Install", "Type"}, 
               ""], Except["Palette"] -> ""]], Automatic}],
         Evaluator->Automatic,
         ImageMargins->{{2, 2}, {10, 10}},
         ImageSize->FrontEnd`CurrentValue["DefaultButtonSize"],
         Method->"Preemptive"],
        FrameMargins->0,
        FrameStyle->None,
        StripOnInput->False], 
       StyleBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "FEExpressions", "ChoiceButtonsOrder"][{
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["okButtonText"]], 
            ButtonFunction :> (If[$CellContext`type$$ === "Application", 
               If[
                DirectoryQ[$CellContext`source$$], 
                CopyDirectory[$CellContext`source$$, 
                 ToFileName[{$CellContext`loc$$, "Applications", 
                   FileBaseName[$CellContext`source$$]}]], 
                Module[{$CellContext`files$ = If[
                    Not[
                    StringMatchQ[$CellContext`source$$, 
                    Alternatives["*.zip", "*.gz", "*.tar", "*.bz2"]]], 
                    Import[$CellContext`source$$, "FileNames"], 
                    Null], $CellContext`dialog$}, SetDirectory[
                   ToFileName[{$CellContext`loc$$, "Applications"}]]; If[
                   Not[
                    StringMatchQ[$CellContext`source$$, 
                    Alternatives["*.zip", "*.gz", "*.tar", "*.bz2"]]], 
                   Scan[CreateDirectory, 
                    DeleteCases[
                    Union[
                    Map[DirectoryName, $CellContext`files$]], 
                    ""]]]; $CellContext`dialog$ = CreateDialog[
                    Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installExtractFrom"]]], 
                    " : ", $CellContext`source$$}, {
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installExtractTo"]]], " : ", 
                    Directory[]}, {
                    ProgressIndicator[
                    Dynamic[
                    Clock[]], Indeterminate, ImageSize -> 300], 
                    SpanFromLeft}, {
                    Pane[
                    Dynamic[$CellContext`name$$], {300, 50}], SpanFromLeft}}, 
                    Alignment -> Left, Spacings -> {Automatic, 2}], 
                    WindowTitle -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "installExtractTitle"]], Modal -> True, 
                    NotebookEventActions -> {}]; If[
                   StringMatchQ[$CellContext`source$$, 
                    Alternatives["*.zip", "*.gz", "*.tar", "*.bz2"]], 
                   ExtractArchive[$CellContext`source$$], 
                   Scan[Export[$CellContext`name$$ = #, 
                    Import[$CellContext`source$$, {#, "String"}], 
                    "String"]& , $CellContext`files$]]; 
                 NotebookClose[$CellContext`dialog$]; ResetDirectory[]]], 
               FrontEndExecute[{
                 
                 FrontEnd`Install[$CellContext`type$$, $CellContext`source$$, \
$CellContext`loc$$, $CellContext`name$$]}]]; DialogReturn[]), Appearance -> 
            "DefaultButton", Enabled -> Dynamic[
              Or[
               
               And[$CellContext`type$$ =!= 
                "Application", $CellContext`source$$ =!= 
                "", $CellContext`name$$ =!= ""], 
               And[$CellContext`type$$ === "Application", 
                Or[
                 Quiet[
                  DirectoryQ[$CellContext`source$$]], 
                 StringMatchQ[$CellContext`source$$, 
                  Alternatives["*.zip", "*.gz", "*.tar", "*.bz2"]]]]]], 
            Method -> "Queued", Evaluator -> Automatic], 
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["cancelButtonText"]], 
            ButtonFunction :> DialogReturn[$Canceled], Appearance -> 
            "CancelButton", Evaluator -> Automatic, Method -> "Preemptive"]}],
         
         ImageSizeCache->{155., {20.9169921875, 26.0830078125}}],
        Deployed->True,
        DynamicUpdating->True,
        ButtonBoxOptions->{ImageMargins->{{2, 2}, {10, 10}},
        ImageSize->Dynamic[
          CurrentValue["DefaultButtonSize"]]},
        GridBoxOptions->{AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "Rows" -> {{Baseline}}, 
       "ItemsIndexed" -> {{-1, -1} -> {Right, Inherited}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {0, 2, 0.5, 1}}],
    
    "Grid"], If[CurrentValue[
      EvaluationNotebook[], WindowMargins] =!= Automatic, CurrentValue[
      EvaluationNotebook[], WindowMargins] = MapAt[Automatic& , 
      AbsoluteCurrentValue[
       EvaluationNotebook[], WindowMargins], {{1, 2}, {2, 1}}]],
   ImageSizeCache->{300., {106.4169921875, 111.5830078125}}],
  Deinitialization:>(
   CurrentValue[$FrontEnd, {
      PrivateFrontEndOptions, "DialogSettings", "Install", "Source"}] = 
    Inherited; 
   CurrentValue[$FrontEnd, {
      PrivateFrontEndOptions, "DialogSettings", "Install", 
       "Type"}] = $CellContext`type$$),
  DynamicModuleValues:>{},
  Initialization:>({$CellContext`type$$, $CellContext`source$$} = 
    Map[CurrentValue[$FrontEnd, {
       PrivateFrontEndOptions, "DialogSettings", "Install", #}, ""]& , {
      "Type", "Source"}]; $CellContext`label$$ = 
    Replace[$CellContext`source$$, 
      FE`Evaluate[
       FEPrivate`GetPopupList["MenuListStylesheetWindows"]]])]],
 CellMargins->{{8, 8}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {"MenuCommand", "EvaluateCells"} :> 
  FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateNextCell"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], "EscapeKeyDown" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Failed]), 
  "WindowClose" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Failed])},
WindowSize->All,
WindowMargins->Automatic,
WindowFrame->"ModelessDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["FEStrings", "installTitle"]],
CellContext->"Global`",
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 17, \
2014)",
StyleDefinitions->"SystemDialog.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 20921, 488, 220, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

