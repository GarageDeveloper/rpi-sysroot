(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     53379,       1247]
NotebookOptionsPosition[     51926,       1206]
NotebookOutlinePosition[     53419,       1247]
CellTagsIndexPosition[     53376,       1244]
WindowTitle->Find
WindowFrame->ModelessDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`statusText$$, $CellContext`findboxes$$, \
$CellContext`oldfindboxes$$}, 
  PaneBox[
   DynamicWrapperBox[
    PaneSelectorBox[{True->
     PaneSelectorBox[{True->
      OverlayBox[{
       TagBox[GridBox[{
          {
           FrameBox[
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource[
              "FindReplaceDialog", "FindWhatLabel"], StandardForm]],
            Background->None,
            FrameMargins->1,
            FrameStyle->None,
            StripOnInput->False], 
           DynamicBox[Developer`ComboboxBoxes[
             
             Dynamic[$CellContext`findboxes$$, {
              Automatic, ($CellContext`statusText$$ = "")& }], Boxes, 
             Reverse[
              CurrentValue[$FrontEnd, {FindSettings, "FindHistory"}]], 
             DisplayFunction -> RawBoxes, ImageSize -> {
               FEPrivate`If[
                FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375, 
                320], {
                FEPrivate`Switch[
                FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                 Blank[], 21], 200}}, BoxID -> "inputfield", ContinuousAction -> 
             True, "OffsetMargins" :> 
             Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
               Blank[], {0, -1}]]]},
          {"", 
           ItemBox[
            TagBox[GridBox[{
               {
                DynamicBox[FEPrivate`If[
                  FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 
                  CheckboxBox[
                   Dynamic[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]]], 
                  CheckboxBox[
                   Dynamic[
                    FEPrivate`Not[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]], 
                    FEPrivate`Set[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FEPrivate`Not[#]]& ]]]], 
                TogglerBox[Dynamic[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                   True]], {True->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]], 
                 False->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]]}, 
                 DynamicBox[ToBoxes[
                   
                   CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                    True], StandardForm]]], 
                CheckboxBox[Dynamic[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                   False]]], 
                TogglerBox[Dynamic[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                   False]], {True->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "WraparoundLabel"], StandardForm]], 
                 False->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "WraparoundLabel"], StandardForm]]}, 
                 DynamicBox[ToBoxes[
                   
                   CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False], StandardForm]]], 
                CheckboxBox[Dynamic[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                   True]]], 
                TogglerBox[Dynamic[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                   True]], {True->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "WholeWordLabel"], StandardForm]], 
                 False->
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "WholeWordLabel"], StandardForm]]}, 
                 DynamicBox[ToBoxes[
                   CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, True],
                    StandardForm]]]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{0.2}}, 
                "ColumnsIndexed" -> {3 -> 1.5, 5 -> 1.5}}],
             "Grid"],
            Alignment->Center,
            StripOnInput->False]},
          {"", 
           ItemBox[
            TagBox[GridBox[{
               {
                ButtonBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "FindPrevLabel"], StandardForm]],
                 Appearance->"CancelButton",
                 
                 ButtonFunction:>(
                  If[$CellContext`findboxes$$ =!= "", 
                   CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                  FEPrivate`FindExpression, "Previous"],
                 Enabled->Dynamic[
                   FEPrivate`UnsameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], ""]],
                 Evaluator->Automatic,
                 Method->"Preemptive"], 
                ButtonBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "FindReplaceDialog", "FindNextLabel"], StandardForm]],
                 Appearance->"DefaultButton",
                 ButtonFunction:>(CurrentValue[
                    ButtonNotebook[], {TaggingRules, "FoundExpression"}] = (
                    If[$CellContext`findboxes$$ =!= "", 
                    CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                    FEPrivate`FindExpression, "Next"] =!= 
                   FrontEndResourceString["FailedToFindExpression"]),
                 Evaluator->Automatic,
                 Method->"Preemptive"]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Alignment->Right,
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], 
       TagBox[GridBox[{
          {
           ItemBox[
            StyleBox[
             DynamicBox[ToBoxes[$CellContext`statusText$$, StandardForm]], 
             "TextStyling",
             StripOnInput->False,
             FontColor->GrayLevel[0.5]],
            Alignment->Center,
            ItemSize->{10, 3},
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}, {1, 2}, 1,
       Alignment->{Left, Bottom},
       BaseStyle->"ControlStyle"], False->
      TagBox[GridBox[{
         {
          TagBox[GridBox[{
             {
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FindReplaceDialog", "FindWhatLabel"], StandardForm]]},
             {
              DynamicBox[Developer`ComboboxBoxes[
                
                Dynamic[$CellContext`findboxes$$, {
                 Automatic, ($CellContext`statusText$$ = "")& }], Boxes, 
                Reverse[
                 CurrentValue[$FrontEnd, {FindSettings, "FindHistory"}]], 
                DisplayFunction -> RawBoxes, ImageSize -> {
                  FEPrivate`If[
                   FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375,
                    320], {
                   FEPrivate`Switch[
                   FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                    Blank[], 21], 200}}, BoxID -> "inputfield", 
                ContinuousAction -> True, "OffsetMargins" :> 
                Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
                  Blank[], {0, -1}]]]},
             {
              TagBox[GridBox[{
                 {
                  DynamicBox[FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 
                    CheckboxBox[
                    Dynamic[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]]], 
                    CheckboxBox[
                    Dynamic[
                    FEPrivate`Not[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]], 
                    FEPrivate`Set[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FEPrivate`Not[#]]& ]]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                    True]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]]}, 
                   
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                    True], StandardForm]]], 
                  CheckboxBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WholeWordLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WholeWordLabel"], StandardForm]]}, 
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True], StandardForm]]], 
                  CheckboxBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WraparoundLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WraparoundLabel"], StandardForm]]}, 
                   
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False], StandardForm]]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                
                GridBoxSpacings->{
                 "Columns" -> {{0.2}}, 
                  "ColumnsIndexed" -> {3 -> 1.5, 5 -> 1.5}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "StatusLabel"], StandardForm]], 
                  PaneSelectorBox[{True->
                   
                   DynamicBox[
                    ToBoxes[$CellContext`statusText$$, StandardForm]], False->
                   
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "FailedToFindExpression"]]}, True,
                   BoxID -> "FindReplaceStatusField",
                   BaselinePosition->Baseline]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            
            GridBoxSpacings->{
             "Columns" -> {{0}}, "Rows" -> {{0.5}}, 
              "RowsIndexed" -> {3 -> 1, 5 -> 1, 6 -> 1}}],
           "Column"], 
          TagBox[GridBox[{
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "FindNextLabel"], StandardForm]],
               Appearance->"DefaultButton",
               ButtonFunction:>(CurrentValue[
                  ButtonNotebook[], {TaggingRules, "FoundExpression"}] = (
                  If[$CellContext`findboxes$$ =!= "", 
                   CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                  FEPrivate`FindExpression, "Next"] =!= 
                 FrontEndResourceString["FailedToFindExpression"]),
               Evaluator->Automatic,
               Method->"Preemptive"]},
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "FindPrevLabel"], StandardForm]],
               Appearance->"CancelButton",
               
               ButtonFunction:>(
                If[$CellContext`findboxes$$ =!= "", 
                 CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                FEPrivate`FindExpression, "Previous"],
               Enabled->Dynamic[
                 FEPrivate`UnsameQ[
                  FrontEnd`CurrentValue[
                  FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], ""]],
               Evaluator->Automatic,
               Method->"Preemptive"]}
            },
            
            BaseStyle->{
             ButtonBoxOptions -> {
               ImageSize -> Full, 
                BaseStyle -> {
                 FontSize -> FrontEnd`CurrentValue["PanelFontSize"]}}},
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            
            GridBoxSpacings->{
             "Columns" -> {{Automatic}}, "Rows" -> {{0.2}}, 
              "RowsIndexed" -> {3 -> 1}}],
           "Column"]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[
       FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"]],
      ImageSize->Automatic], False->
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          FrameBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FindReplaceDialog", "FindWhatLabel"],
              StandardForm],
            ImageSizeCache->{31., {0., 10.}}],
           Background->None,
           FrameMargins->1,
           FrameStyle->None,
           StripOnInput->False], 
          DynamicBox[Developer`ComboboxBoxes[
            
            Dynamic[$CellContext`findboxes$$, {
             Automatic, ($CellContext`statusText$$ = "")& }], Boxes, 
            Reverse[
             CurrentValue[$FrontEnd, {FindSettings, "FindHistory"}]], 
            DisplayFunction -> RawBoxes, ImageSize -> {
              FEPrivate`If[
               FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375, 
               320], {
               FEPrivate`Switch[
               FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                Blank[], 21], 200}}, BoxID -> "inputfield", ContinuousAction -> 
            True, "OffsetMargins" :> 
            Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
              Blank[], {0, -1}]],
           ImageSizeCache->{379., {10., 17.}}]},
         {
          FrameBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "FindReplaceDialog", "ReplaceWithLabel"], StandardForm],
            ImageSizeCache->{83., {3., 10.}}],
           Background->None,
           FrameMargins->1,
           FrameStyle->None,
           StripOnInput->False], 
          DynamicBox[Developer`ComboboxBoxes[
            Dynamic[
             CurrentValue[$FrontEnd, {FindSettings, "ReplaceBoxes"}]], Boxes, 
            
            Reverse[
             CurrentValue[$FrontEnd, {FindSettings, "ReplaceHistory"}]], 
            DisplayFunction -> RawBoxes, ImageSize -> {
              FEPrivate`If[
               FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375, 
               320], {
               FEPrivate`Switch[
               FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                Blank[], 21], 200}}, BoxID -> "replacefield", "OffsetMargins" :> 
            Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
              Blank[], {0, -1}]],
           ImageSizeCache->{379., {10., 17.}}]},
         {
          ItemBox[
           StyleBox[
            DynamicBox[ToBoxes[$CellContext`statusText$$, StandardForm],
             ImageSizeCache->{0., {0., 7.}}], "TextStyling",
            StripOnInput->False,
            FontColor->GrayLevel[0.5]],
           Alignment->Center,
           ItemSize->{10, 3},
           StripOnInput->False], 
          ItemBox[
           TagBox[GridBox[{
              {
               DynamicBox[FEPrivate`If[
                 FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 
                 CheckboxBox[
                  Dynamic[
                   CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]]], 
                 CheckboxBox[
                  Dynamic[
                   FEPrivate`Not[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]], 
                   FEPrivate`Set[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FEPrivate`Not[#]]& ]]],
                ImageSizeCache->{18., {6., 13.}}], 
               TogglerBox[Dynamic[
                 
                 CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                  True]], {True->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm],
                 ImageSizeCache->{72., {3., 10.}}], False->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm],
                 ImageSizeCache->{72., {3., 10.}}]}, 
                DynamicBox[ToBoxes[
                  CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, True],
                   StandardForm],
                 ImageSizeCache->{32., {0., 10.}}]], 
               CheckboxBox[Dynamic[
                 
                 CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                  False]]], 
               TogglerBox[Dynamic[
                 
                 CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                  False]], {True->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "WraparoundLabel"], StandardForm],
                 ImageSizeCache->{81., {3., 10.}}], False->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "WraparoundLabel"], StandardForm],
                 ImageSizeCache->{81., {3., 10.}}]}, 
                DynamicBox[ToBoxes[
                  
                  CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                   False], StandardForm],
                 ImageSizeCache->{29., {0., 10.}}]], 
               CheckboxBox[Dynamic[
                 CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, True]]], 
               TogglerBox[Dynamic[
                 
                 CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                  True]], {True->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "WholeWordLabel"], StandardForm],
                 ImageSizeCache->{59., {0., 10.}}], False->
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "WholeWordLabel"], StandardForm],
                 ImageSizeCache->{59., {0., 10.}}]}, 
                DynamicBox[ToBoxes[
                  CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, True], 
                  StandardForm],
                 ImageSizeCache->{29., {0., 10.}}]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             
             GridBoxSpacings->{
              "Columns" -> {{0.2}}, "ColumnsIndexed" -> {3 -> 1.5, 5 -> 1.5}}],
            "Grid"],
           Alignment->Center,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[GridBox[{
              {
               ButtonBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "ReplaceAllLabel"], StandardForm],
                 ImageSizeCache->{68., {3., 10.}}],
                Appearance->Automatic,
                ButtonFunction:>If[
                  DialogInput[
                   Column[{
                    Pane[
                    Column[{
                    Pane[
                    Style[
                    StringForm[
                    FrontEndResource[
                    "FindReplaceDialog", "ReplaceAllWarning1"], 
                    Dynamic[
                    RawBoxes[$CellContext`findboxes$$]], 
                    Dynamic[
                    RawBoxes[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}]]]], 
                    Larger, Bold, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 100, 0, 0, 100}], {{350, 500},
                     Automatic}], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "ReplaceAllWarning2"]]}, BaseStyle -> 
                    "ControlStyle"], ImageMargins -> {{10, 30}, {10, 10}}], 
                    ChoiceButtons[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResourceString["yesButtonText"]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResourceString["noButtonText"]]]}, {
                    DialogReturn[True], 
                    DialogReturn[False]}]}, Right, BaseStyle -> 
                    "ControlStyle"], Modal -> True], 
                  (
                  If[$CellContext`findboxes$$ =!= "", 
                   CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                  FEPrivate`ReplaceExpression, 
                   FrontEnd`CurrentValue[
                   FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                   "ReplaceAll"]],
                Evaluator->Automatic,
                Method->"Queued"], 
               ButtonBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "ReplaceLabel"], StandardForm],
                 ImageSizeCache->{48., {3., 10.}}],
                Appearance->Automatic,
                
                ButtonFunction:>(
                 If[$CellContext`findboxes$$ =!= "", 
                  CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                 FEPrivate`ReplaceExpression, 
                  FrontEnd`CurrentValue[
                  FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                  "Replace"],
                Evaluator->Automatic,
                Method->"Preemptive"], 
               ButtonBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "ReplaceFindLabel"], StandardForm],
                 ImageSizeCache->{92., {3., 10.}}],
                Appearance->Automatic,
                
                ButtonFunction:>(
                 If[$CellContext`findboxes$$ =!= "", 
                  CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                 FEPrivate`ReplaceExpression, 
                  FrontEnd`CurrentValue[
                  FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                  "ReplaceFindNext"],
                Evaluator->Automatic,
                Method->"Preemptive"], 
               ButtonBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "FindPrevLabel"], StandardForm],
                 ImageSizeCache->{53., {0., 10.}}],
                Appearance->"CancelButton",
                
                ButtonFunction:>(
                 If[$CellContext`findboxes$$ =!= "", 
                  CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                 FEPrivate`FindExpression, "Previous"],
                Enabled->Dynamic[
                  FEPrivate`UnsameQ[
                   FrontEnd`CurrentValue[
                   FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], ""]],
                Evaluator->Automatic,
                Method->"Preemptive"], 
               ButtonBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FindReplaceDialog", "FindNextLabel"], StandardForm],
                 ImageSizeCache->{30., {0., 10.}}],
                Appearance->"DefaultButton",
                ButtonFunction:>(CurrentValue[
                   ButtonNotebook[], {TaggingRules, "FoundExpression"}] = (
                   If[$CellContext`findboxes$$ =!= "", 
                    CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                   FEPrivate`FindExpression, "Next"] =!= 
                  FrontEndResourceString["FailedToFindExpression"]),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Right,
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        BaseStyle->"ControlStyle",
        GridBoxAlignment->{"Columns" -> {Right, Left}, "Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          TagBox[GridBox[{
             {
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FindReplaceDialog", "FindWhatLabel"], StandardForm]]},
             {
              DynamicBox[Developer`ComboboxBoxes[
                
                Dynamic[$CellContext`findboxes$$, {
                 Automatic, ($CellContext`statusText$$ = "")& }], Boxes, 
                Reverse[
                 CurrentValue[$FrontEnd, {FindSettings, "FindHistory"}]], 
                DisplayFunction -> RawBoxes, ImageSize -> {
                  FEPrivate`If[
                   FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375,
                    320], {
                   FEPrivate`Switch[
                   FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                    Blank[], 21], 200}}, BoxID -> "inputfield", 
                ContinuousAction -> True, "OffsetMargins" :> 
                Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
                  Blank[], {0, -1}]]]},
             {
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FindReplaceDialog", "ReplaceWithLabel"], StandardForm]]},
             {
              DynamicBox[Developer`ComboboxBoxes[
                Dynamic[
                 CurrentValue[$FrontEnd, {FindSettings, "ReplaceBoxes"}]], 
                Boxes, 
                Reverse[
                 CurrentValue[$FrontEnd, {FindSettings, "ReplaceHistory"}]], 
                DisplayFunction -> RawBoxes, ImageSize -> {
                  FEPrivate`If[
                   FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 375,
                    320], {
                   FEPrivate`Switch[
                   FEPrivate`$OperatingSystem, "MacOSX", 20, "Windows", 20, 
                    Blank[], 21], 200}}, BoxID -> "replacefield", 
                "OffsetMargins" :> 
                Switch[$OperatingSystem, "MacOSX", {-2, -1}, "Windows", 2, 
                  Blank[], {0, -1}]]]},
             {
              TagBox[GridBox[{
                 {
                  DynamicBox[FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"], 
                    CheckboxBox[
                    Dynamic[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]]], 
                    CheckboxBox[
                    Dynamic[
                    FEPrivate`Not[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}]], 
                    FEPrivate`Set[
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FEPrivate`Not[#]]& ]]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                    True]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "IgnoreCaseLabel"], StandardForm]]}, 
                   
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "IgnoreCase"}, 
                    True], StandardForm]]], 
                  CheckboxBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WholeWordLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WholeWordLabel"], StandardForm]]}, 
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "WholeWord"}, 
                    True], StandardForm]]], 
                  CheckboxBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False]]], 
                  TogglerBox[Dynamic[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False]], {True->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WraparoundLabel"], StandardForm]], 
                   False->
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "WraparoundLabel"], StandardForm]]}, 
                   
                   DynamicBox[ToBoxes[
                    
                    CurrentValue[$FrontEnd, {FindSettings, "Wraparound"}, 
                    False], StandardForm]]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                
                GridBoxSpacings->{
                 "Columns" -> {{0.2}}, 
                  "ColumnsIndexed" -> {3 -> 1.5, 5 -> 1.5}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "StatusLabel"], StandardForm]], 
                  PaneSelectorBox[{True->
                   DynamicBox[
                    ToBoxes[$CellContext`statusText$$, StandardForm]], False->
                   
                   
                   DynamicBox[FEPrivate`FrontEndResourceString[
                    "FailedToFindExpression"]]}, True,
                   BoxID -> "FindReplaceStatusField",
                   BaselinePosition->Baseline]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            
            GridBoxSpacings->{
             "Columns" -> {{0}}, "Rows" -> {{0.5}}, 
              "RowsIndexed" -> {3 -> 1, 5 -> 1, 6 -> 1}}],
           "Column"], 
          TagBox[GridBox[{
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "FindNextLabel"], StandardForm]],
               Appearance->"DefaultButton",
               ButtonFunction:>(CurrentValue[
                  ButtonNotebook[], {TaggingRules, "FoundExpression"}] = (
                  If[$CellContext`findboxes$$ =!= "", 
                   CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                  FEPrivate`FindExpression, "Next"] =!= 
                 FrontEndResourceString["FailedToFindExpression"]),
               Evaluator->Automatic,
               Method->"Preemptive"]},
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "FindPrevLabel"], StandardForm]],
               Appearance->"CancelButton",
               
               ButtonFunction:>(
                If[$CellContext`findboxes$$ =!= "", 
                 CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                FEPrivate`FindExpression, "Previous"],
               Enabled->Dynamic[
                 FEPrivate`UnsameQ[
                  FrontEnd`CurrentValue[
                  FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], ""]],
               Evaluator->Automatic,
               Method->"Preemptive"]},
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "ReplaceLabel"], StandardForm]],
               Appearance->Automatic,
               
               ButtonFunction:>(
                If[$CellContext`findboxes$$ =!= "", 
                 CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                FEPrivate`ReplaceExpression, 
                 FrontEnd`CurrentValue[
                 FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                 "Replace"],
               Evaluator->Automatic,
               Method->"Preemptive"]},
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "ReplaceAllLabel"], StandardForm]],
               Appearance->Automatic,
               ButtonFunction:>If[
                 DialogInput[
                  Column[{
                    Pane[
                    Column[{
                    Pane[
                    Style[
                    StringForm[
                    FrontEndResource[
                    "FindReplaceDialog", "ReplaceAllWarning1"], 
                    Dynamic[
                    RawBoxes[$CellContext`findboxes$$]], 
                    Dynamic[
                    RawBoxes[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}]]]], 
                    Larger, Bold, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 100, 0, 0, 100}], {{350, 500},
                     Automatic}], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "FindReplaceDialog", "ReplaceAllWarning2"]]}, BaseStyle -> 
                    "ControlStyle"], ImageMargins -> {{10, 30}, {10, 10}}], 
                    ChoiceButtons[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResourceString["yesButtonText"]]], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResourceString["noButtonText"]]]}, {
                    DialogReturn[True], 
                    DialogReturn[False]}]}, Right, BaseStyle -> 
                   "ControlStyle"], Modal -> True], 
                 (
                 If[$CellContext`findboxes$$ =!= "", 
                  CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                 FEPrivate`ReplaceExpression, 
                  FrontEnd`CurrentValue[
                  FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                  "ReplaceAll"]],
               Evaluator->Automatic,
               Method->"Queued"]},
             {
              ButtonBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FindReplaceDialog", "ReplaceFindLabel"], StandardForm]],
               Appearance->Automatic,
               
               ButtonFunction:>(
                If[$CellContext`findboxes$$ =!= "", 
                 CurrentValue[$FrontEnd, {
                    FindSettings, 
                    "FindBoxes"}] = $CellContext`findboxes$$; \
$CellContext`statusText$$ = Replace[
                    FE`Evaluate[
                    #[
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "FindBoxes"}], 
                    SlotSequence[2], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "IgnoreCase"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {FindSettings, "Wraparound"}], 
                    FrontEnd`CurrentValue[
                    FrontEnd`$FrontEnd, {
                    FindSettings, "WholeWord"}]]], $Failed -> ""]]& )[
                FEPrivate`ReplaceExpression, 
                 FrontEnd`CurrentValue[
                 FrontEnd`$FrontEnd, {FindSettings, "ReplaceBoxes"}], 
                 "ReplaceFindNext"],
               Evaluator->Automatic,
               Method->"Preemptive"]}
            },
            
            BaseStyle->{
             ButtonBoxOptions -> {
               ImageSize -> Full, 
                BaseStyle -> {
                 FontSize -> FrontEnd`CurrentValue["PanelFontSize"]}}},
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            
            GridBoxSpacings->{
             "Columns" -> {{Automatic}}, "Rows" -> {{0.2}}, 
              "RowsIndexed" -> {3 -> 1}}],
           "Column"]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[
       FEPrivate`SameQ[FEPrivate`$OperatingSystem, "MacOSX"]],
      ImageSize->Automatic]}, Dynamic[
      FEPrivate`SameQ[FrontEnd`$NotebookLicenseType, "Player"]],
     ImageSize->Automatic], (If[$CellContext`oldfindboxes$$ =!= #, If[
       Not[
        CurrentValue["NotebookSelected"]], $CellContext`statusText$$ = 
       ""]; $CellContext`oldfindboxes$$ = ($CellContext`findboxes$$ = #)]& )[
     CurrentValue[$FrontEnd, {FindSettings, "FindBoxes"}]],
    ImageSizeCache->{500., {65., 71.}},
    TrackedSymbols:>{}],
   ImageMargins->10],
  Deinitialization:>(CurrentValue[$FrontEnd, {FindSettings, WindowMargins}] = 
   CurrentValue[
     EvaluationNotebook[], WindowMargins]),
  DynamicModuleValues:>{},
  Initialization:>($CellContext`statusText$$ = ""; 
   CurrentValue[$FrontEnd, {FindSettings, WindowSize}] = Inherited),
  UnsavedVariables:>{$CellContext`statusText$$, $CellContext`findboxes$$, \
$CellContext`oldfindboxes$$}]],
 CellMargins->0,
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 InputAutoReplacements->{},
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
NotebookEventActions->{{"MenuCommand", "SimilarCellBelow"} :> {}, {
   "MenuCommand", "FindNextMatch"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "FindPreviousMatch"} :> FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "EscapeKeyDown" :> If[
    Not[
     CurrentValue["ShiftKey"]], 
    DialogReturn[]], "ReturnKeyDown" :> (FE`Evaluate[
     FEPrivate`FindAndClickDefaultButton[]]; If[
     And[
      TrueQ[
       CurrentValue[
        EvaluationNotebook[], {TaggingRules, "FoundExpression"}]], 
      CurrentValue[$FrontEnd, {FindSettings, "DialogCloseAfterFind"}, 
        Automatic] === Automatic, $OperatingSystem === "MacOSX"], 
     DialogReturn[]]), PassEventsDown :> CurrentValue["ShiftKey"]},
WindowSize->All,
WindowMargins->FrontEnd`CurrentValue[
 FrontEnd`$FrontEnd, {FindSettings, WindowMargins}],
WindowFrame->"ModelessDialog",
WindowFrameElements->{"CloseBox", "MinimizeBox"},
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["FindReplaceDialog", "WindowTitle"]],
WindowOpacity->FrontEnd`CurrentValue[
 FrontEnd`$FrontEnd, {FindSettings, WindowOpacity}],
TaggingRules->{"NotebookID" -> "FindDialog"},
CheckboxBoxOptions->{BaselinePosition->Axis},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 25, \
2012)",
StyleDefinitions->"SystemDialog.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 51339, 1183, 158, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

